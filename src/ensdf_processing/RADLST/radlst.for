C                                                                       01 00010
C***********************************************************************01 00020
C*                                                                      01 00030
C*    PROGRAM RADLIST                                                   01 00040
C*                                                                      01 00050
C*    Version 5   [11-JUN-86]  Conversion of MEDNEW 4(55)[11-SEP-85]    01 00060
C*                               to FORTRAN-77 with some guidance from  01 00070
C*                               the Swedish FORTRAN-77 Version         01 00080
C*                               [SEP-83].                              01 00090
C*    Version 5.1 [ 4-AUG-86]  Modified to run correctly on both TOPS-1001 00100
C*                               and VAX-11/780 VMS                     01 00110
C*            5.1a[ 6-AUG-86]  Added coding so that program may be      01 00120
C*                               spawned on VAX-11/780 VMS              01 00130
C*            5.1b[ 3-SEP-86]  Corrected bugs found when generating VAX 01 00140
C                                data base                              01 00150
C*    Version 5.2 [18-SEP-86]  Added machine dependent code             01 00160
C*    Version 5.3 [12-NOV-86]  Added modules to calculate continuous    01 00170
C*                               spectra for B+- and associated internal01 00180
C*                               Bremsstrahlung                         01 00190
C*            5.3a[27-FEB-87]  Corrected problems in decrementing counts01 00200
C*                               for positrons and electron capture     01 00210
C*            5.3b[ 6-MAR-87]  Added modules to calculate internal      01 00220
C*                               Bremsstrahlung from electron capture   01 00230
C*    Version 5.4 [ 2-APR-87]  First exportable version                 01 00240
C*            5.4a[22-APR-87]  Modified subroutine ENDCON               01 00250
C*                               a.  Corrected errors                   01 00260
C*                               b.  Added possibility for log-log      01 00270
C*                               c.  Compressed interpolation table     01 00280
C*            5.4b[ 1-JUL-87]  General cleanup                          01 00290
C*                               a.  Program reorganized functionally.  01 00300
C*                                   1.  Markers added to allow removal 01 00310
C*                                     of undesired functions.          01 00320
C*                                   2.  All variables explicitly       01 00330
C*                                     defined.                         01 00340
C*                               b.  Corrected misinterpretation of     01 00350
C*                                   intensities for STYP=2 in sub-     01 00360
C*                                   routine ENDOUT.                    01 00370
C*    Version 5.4c[11-SEP-87]    a.  Added check for blank normalization01 00380
C*                                   record.                            01 00390
C*                               b.  Added "ECP" and "B-N" to decay     01 00400
C*                                   modes, as distinct types.          01 00410
C*    Version 5.4d[30-OCT-87]    a.  Corrected error in label order     01 00420
C*                                   of X rays in MEDOUT and NUDOUT.    01 00430
C*                               b.  Corrected logic in SIGNIF to       01 00440
C*                                   handle X=0.                        01 00450
C*                               c.  Added acknowledgement and          01 00460
C*                                   disclaimer.                        01 00470
C*    Version 5.4e[11-DEC-87]    a.  Checked fundamental constants for  01 00480
C*                                   consistency with 1986 adjustment.  01 00490
C*                               b.  Combined redundant WARNINGS and    01 00500
C*                                   MESSAGES.                          01 00510
C*                               c.  Tightened up coding based on       01 00520
C*                                   analysis of progam by RXVP80 pro-  01 00530
C*                                   vided by C. Nordberg (NEADB)       01 00540
C*                               d.  Fixed VAX-specific problem on      01 00550
C*                                   reading input files which do not   01 00560
C*                                   have write priveleges by adding    01 00570
C*                                   READONLY keyword                   01 00580
C*    Version 5.4f[ 8-FEB-88]    a.  Fixed incorrect labelling of       01 00590
C*                                   Auger electrons                    01 00600
C*                               b.  Fixed logic in GAMPRO which        01 00610
C*                                   caused multiple counting of con-   01 00620
C*                                   version electron intensities when  01 00630
C*                                   there were several GAMMA continua- 01 00640
C*                                   records                            01 00650
C*                               c.  Added check in READ so that ratios 01 00660
C*                                   would not be misinterpreted as     01 00670
C*                                   values                             01 00680
C*    Version 5.4g[21-MAR-88]    a.  Corrected problems in decrementing 01 00690
C*                                   counts for negatrons               01 00700
C*                               b.  Added check to subroutine NUDOUT   01 00710
C*                                   and check and warning to PARPRO    01 00720
C*                                   for missing parent half-life       01 00730
C*    Version 5.4h[22-MAY-88]    Added check for gross energy mismatch  01 00740
C*                                 and logic to suppress output for     01 00750
C*                                 NUDAT if this occurs                 01 00760
C*                               ==== LAST OF Version 5.4 ====          01 00770
C*                                    (not distributed)                 01 00780
C*    Version 5.5 [ 5-OCT-88]    a.  Added option for outputting in     01 00790
C*                                   MIRD format                        01 00800
C*                               b.  Implemented USNDN F&P suggestions  01 00810
C*                                   for treatment of multiply placed   01 00820
C*                                   gammas                             01 00830
C*                                                                      01 00840
C*                                                                      01 00850
C*    PREVIOUS HISTORY:                                                 01 00860
C*      MEDLIST 1                 Supplied by ORNL-NDP in 1978          01 00870
C*      MEDNEW 2[15-APR-78]       Convert to machine independent code.  01 00880
C*      MEDNEW 3[6-JUL-78].       Full ENDF output added.               01 00890
C*      MEDNEW 3(42)[20-OCT-80]   Last of Version 3.                    01 00900
C*      MEDNEW 4(43)[23-JUL-81]   First of Version 4.                   01 00910
C*      MEDLIST[SEP-83]           First FORTRAN-77, from UNIVERSITY OF  01 00920
C*                                  LUND, SWEDEN; based on MEDNEW 4(47) 01 00930
C*                                  [12-MAY-83].                        01 00940
C*      MEDNEW 4(55)[11-SEP-85]   Last FORTRAN-66 version.              01 00950
C*                                                                      01 00960
C*    MAJOR CHANGES FROM MEDNEW 4(55)[11-SEP-85]                        01 00970
C*    ------------------------------------------                        01 00980
C*    1.  Converted to ANSI-standard FORTRAN 77.                        01 00990
C*    2.  Logic extensively reworked to take advantage of               01 01000
C*        structured-language philosophy inherent in FORTRAN 77.        01 01010
C*    3.  Storage of atomic data converted to DIRECT ACCESS             01 01020
C*        file from a large COMMON to reduce memory require-            01 01030
C*        ments and increase speed.                                     01 01040
C*    4.  Modules added to produce file for loading NNDC on-            01 01050
C*        line database.                                                01 01060
C*    5.  Modules to produce ENDF/B-VI files upgraded or added          01 01070
C*        to produce better output.                                     01 01080
C*    6.  Modifications made to correctly handle the MERGE              01 01090
C*        option.                                                       01 01100
C*    7.  More checks on data added.                                    01 01110
C*    8.  New ENSDF formats implemented.                                01 01120
C*    9.  Terminal dialog modified to give better summary of            01 01130
C*        results.                                                      01 01140
C*   10.  Rewrote MEDOUT routines to remove all overprinting.           01 01150
C*   11.  Checks any and all "2 G", "2 E", and "2 B" records for        01 01160
C*        required quantities                                           01 01170
C*   12.  Improved mass calculations by including option to use         01 01180
C*        Wapstra masses                                                01 01190
C*   13.  Added modules to calculate continuum spectra for beta+-       01 01200
C*        and internal bremsstrahlung.                                  01 01210
C*                                                                      01 01220
C*                                                                      01 01230
C*    Refer all comments and inquiries to:                              01 01240
C*      National Nuclear Data Center                                    01 01250
C*      Building 197D                                                   01 01260
C*      Brookhaven National Laboratory                                  01 01270
C*      Upton, New York 11973   USA                                     01 01280
C*      Telephone 516-282-2902 Comm                                     01 01290
C*                    666-2902 FTS                                      01 01300
C*      TELEX    685 2516 BNLDOE                                        01 01310
C*      PHYSNET  BNLNDC::BURROWS                                        01 01320
C*                                                                      01 01330
C*                                                                      01 01340
C***********************************************************************01 01350
C                                                                       01 01360
C---  PARAMETERS WHICH DETERMINE SIZE OF PROGRAM:                       01 01370
C     **** Note that the same parameters have to be defined in some of  01 01380
C       the subprograms *****                                           01 01390
C        ZMA=Maximum Z in atomic properties table                       01 01400
C        GMA=Maximum number of Gammas                                   01 01410
C        ****  NOTE:  If GMA>999, Check MEDOUT and NUDOUT for possible  01 01420
C              OVERFLOW errors ****                                     01 01430
C        AM    =Maximum number of other nuclear radiations              01 01440
C        ****  NOTE:  If AM>99, Check MEDOUT and NUDOUT for possible    01 01450
C              OVERFLOW errors ****                                     01 01460
C        MAXDCY=Maximum number of decay modes                           01 01470
C        TMA   =Maximum number of radiations                            01 01480
C               GMA Gammas                                              01 01490
C               5*GMA Conversion electrons                              01 01500
C               AM Beta-'s                                              01 01510
C               AM Beta+ & EC's                                         01 01520
C               AM Alphas                                               01 01530
C               6*AM Electron capture fractions                         01 01540
C               2*MAXDCY Auger electrons                                01 01550
C               4*MAXDCY X rays                                         01 01560
C               ----                                                    01 01570
C               6*GMA+9*AM+6*MAXDCY                                     01 01580
C                                                                       01 01590
C       NGRMAX=Maximum number of bins allowed for spectral distributions01 01600
C                                                                       01 01610
C       NLMAX=Maximum number of levels retained for MIRD plotting       01 01620
C                                                                       01 01630
C---                                                                    01 01640
C                                                                       01 01650
      PROGRAM RADLST                                                    01 01660
C                                                                       01 01670
      INTEGER ZMA,GMA,AM,MAXDCY,TMA,NGRMAX,NLMAX                        01 01680
      PARAMETER (ZMA=130,GMA=999,AM=99,MAXDCY=4,                        01 01690
     2  TMA=6*GMA+9*AM+2*MAXDCY+4*MAXDCY,NGRMAX=30,NLMAX=2000)          01 01700
C                                                                       01 01710
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************01 01720
C*                           Present Code                               01 01730
C*                           ------------                               01 01740
C*  ABORT   ALPPRO  AMASS   AZ      BETPRO  BMCONT  BPCONT  CMNTCD      01 01750
C*  DIALOG  DUMP    ECCONT  ECPRO   ENDOUT  ENDSET  ENDSRT  GAMPRO      01 01760
C*  GETPRM  GETT12  GRIDIB  MEDOUT  MESSAG  NORPRO  NUDOUT  PARPRO      01 01770
C*  READAT  READMS  REBIN   SOMIT   SRTMED  SRTPRE  STORE   UNCER1      01 01780
C*  WARNNG  ZERO4   ZERO8   ZEROLF  ZEROLT                              01 01790
C*                                                                      01 01800
C*                           F77STR  4(2)                               01 01810
C*                           ------------                               01 01820
C*  DELSTR  IVLSTR  LENSTR  SQZSTR  TYPSTR                              01 01830
C*                                                                      01 01840
C*                           NSDCNV  2(03)                              01 01850
C*                           -------------                              01 01860
C*  CNVU2S                                                              01 01870
C*                                                                      01 01880
C*                        FORTRAN 77 Supplied                           01 01890
C*                        -------------------                           01 01900
C*  DATE*   INDEX   TIME*                                               01 01910
C*                                                                      01 01920
C*  *Non-standard ANSI-77                                               01 01930
C*                                                                      01 01940
C***********************************************************************01 01950
C                                                                       01 01960
C  INPUT/OUTPUT UNIT SPECIFICATIONS --- Machine dependent               01 01970
C    Defined in DIALOG                                                  01 01980
C               ITRMIN   Terminal dialog (INPUT)                        01 01990
C               ITRMOU   Terminal dialog (OUTPUT)                       01 02000
C               IREPT    Report file (FORTRAN-formatted output)         01 02010
C               IDATA    Input data file (ENSDF format---ASCII)         01 02020
C               IENSDF   Radiation report file (FORTRAN-formatted       01 02030
C                          output)                                      01 02040
C               IENDF    ENDF/B-VI file (OUTPUT---ASCII)                01 02050
C               INUDAT   NUDAT file (OUTPUT---ASCII)                    01 02060
C               IATOMB   Atomic data (BINARY)                           01 02070
C               IATOM    Atomic data (INPUT---ASCII)                    01 02080
C               IMASSB   Wapstra mass data (BINARY)                     01 02090
C               IMASS    Wapstra mass data (INPUT---ASCII)              01 02100
C               MIRDTM   Temporary file used in preparing data for      01 02110
C                          plotting (BINARY)                            01 02120
C               MIRDRP   MIRD-style radiation report file (FORTRAN-     01 02130
C                          formatted output)                            01 02140
C               MIRDPL   ENSDF-like file containing data for plotting   01 02150
C                          (ASCII)                                      01 02160
C                                                                       01 02170
      INTEGER ITRMOU,ITRMIN                                             01 02180
      COMMON /TTYUNT/ITRMOU,ITRMIN                                      01 02190
      INTEGER IREPT,IENSDF                                              01 02200
      COMMON /RPTUNT/IREPT,IENSDF                                       01 02210
      INTEGER INUDAT,IENDF                                              01 02220
      COMMON /OUTUNT/INUDAT,IENDF                                       01 02230
      INTEGER IDATA,IATOM,IMASS                                         01 02240
      COMMON /DATUNT/IDATA,IATOM,IMASS                                  01 02250
      INTEGER IATOMB,IMASSB                                             01 02260
      COMMON /BINDAT/IATOMB,IMASSB                                      01 02270
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      01 02280
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               01 02290
C                                                                       01 02300
C   Limit of AM Alpha branches                                          01 02310
      REAL EA(AM),DEA(AM),IA(AM),DIA(AM)                                01 02320
      COMMON /ADATA/ EA,DEA,IA,DIA                                      01 02330
C                                                                       01 02340
C   Limit of AM Beta-minus branches                                     01 02350
      INTEGER NTB,ITYPM(AM)                                             01 02360
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 01 02370
     2  AVBEX,DAVBX                                                     01 02380
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,   01 02390
     2  NTB,ITYPM                                                       01 02400
C                                                                       01 02410
C   Limit of AM Capture branches                                        01 02420
      INTEGER NTP,ITYPP(AM),KLASS(AM)                                   01 02430
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      01 02440
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,01 02450
     3  AVPEX,DAVPX                                                     01 02460
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,01 02470
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP                     01 02480
C                                                                       01 02490
C  Limit of GMA Gamma Rays and 5*GMA Conversion lines                   01 02500
      INTEGER IDECAY(GMA)                                               01 02510
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5),E2I,01 02520
     2  DE2I                                                            01 02530
      COMMON /GDATA/ EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY             01 02540
C                                                                       01 02550
      INTEGER NA,NB,NE,NK1,NG,NTOP                                      01 02560
      COMMON /COUNTS/ NA,NB,NE,NK1,NG,NTOP                              01 02570
C                                                                       01 02580
      INTEGER NOMIT(5),IALLG                                            01 02590
      REAL EOMIT(5),OMIT(5),RIMIN                                       01 02600
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                       01 02610
C                                                                       01 02620
C  Contains data to calculate Auger and X ray contributions             01 02630
      REAL TERMK(MAXDCY),TERMK1(MAXDCY),TERML(MAXDCY),TERML1(MAXDCY),   01 02640
     2  DTERMK(MAXDCY),DTERML(MAXDCY),DTRMK1(MAXDCY),DTRML1(MAXDCY)     01 02650
      COMMON /XCOM/ TERMK,TERMK1,TERML,TERML1,DTERMK,DTERML,DTRMK1,     01 02660
     3  DTRML1                                                          01 02670
C                                                                       01 02680
C  Atomic properties for data sets being processed                      01 02690
      REAL WK(MAXDCY),DWK(MAXDCY),WL(MAXDCY),DWL(MAXDCY),ENKL(MAXDCY),  01 02700
     2  DENKL(MAXDCY),BTOA(MAXDCY),DBTOA(MAXDCY),A2TOA1(MAXDCY),        01 02710
     3  DEA2A1(MAXDCY),BE(MAXDCY,5),DBE(MAXDCY,5),ET(MAXDCY,6),         01 02720
     4  DET(MAXDCY,6)                                                   01 02730
      COMMON /ELCOM/WK,DWK,WL,DWL,ENKL,DENKL,BTOA,DBTOA,A2TOA1,DEA2A1,  01 02740
     3  BE,DBE,ET,DET                                                   01 02750
C                                                                       01 02760
C  Average  energies and intensities                                    01 02770
      REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                      01 02780
      COMMON /AVGS/ SUMIE,DSUMIE,SUMI,DSUMI                             01 02790
C                                                                       01 02800
C  Headings and comments                                                01 02810
      INTEGER ICOMNT                                                    01 02820
      CHARACTER*80 HEAD,LABEL,COMENT(10)                                01 02830
      COMMON /HEADS1/  HEAD,LABEL,COMENT                                01 02840
      COMMON /HEADS2/  ICOMNT                                           01 02850
C                                                                       01 02860
C  Normalizations                                                       01 02870
      REAL RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN              01 02880
      COMMON /NORMAL/RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN    01 02890
C                                                                       01 02900
C  Level and metastable state information                               01 02910
      INTEGER METNUM,LEVNUM                                             01 02920
      REAL ELEV,DELEV                                                   01 02930
      COMMON /LEVELS/ELEV,DELEV,METNUM,LEVNUM                           01 02940
C                                                                       01 02950
C   For use in generating ENDF/B-VI type files                          01 02960
C%%%%%ENDFB                                                             01 02970
      INTEGER LIS,LISO,MAT                                              01 02980
      REAL ZA,TSEC,DTSEC,SPIN,PARITY                                    01 02990
      COMMON /ENDGEN/ZA,TSEC,DTSEC,SPIN,PARITY,LIS,LISO,MAT             01 03000
C                                                                       01 03010
      INTEGER PCOMNT,KCOMNT,NDK                                         01 03020
      PARAMETER (PCOMNT=294)                                            01 03030
      CHARACTER KOMENT(PCOMNT)*66,PAR*2                                 01 03040
      COMMON /ENDCNT/KCOMNT,NDK                                         01 03050
      COMMON /ENDCOM/ PAR,KOMENT                                        01 03060
C                                                                       01 03070
      REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),      01 03080
     2  ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10),ELIS(MAXDCY),   01 03090
     3  ELISO(MAXDCY),RFS(MAXDCY)                                       01 03100
      COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN,ELIS,    01 03110
     2  ELISO,RFS                                                       01 03120
C^^^^^ENDFB                                                             01 03130
C                                                                       01 03140
C  Continua data                                                        01 03150
C%%%%%SPECTR                                                            01 03160
C    Daughter information required for calculations                     01 03170
      INTEGER IZDB(AM),IZDP(AM)                                         01 03180
      REAL ADB(AM),ADP(AM)                                              01 03190
C    Beta- Spectrum                                                     01 03200
      INTEGER NGRIDM                                                    01 03210
      REAL EBMS(NGRMAX),RIBMS(NGRMAX),DRIBMS(NGRMAX),EBARMS(NGRMAX),    01 03220
     2  DEBRMS(NGRMAX)                                                  01 03230
        COMMON /BMSPCT/NGRIDM,EBMS,RIBMS,DRIBMS,EBARMS,DEBRMS           01 03240
C    Beta+ Spectrum                                                     01 03250
      INTEGER NGRIDP                                                    01 03260
      REAL EBPS(NGRMAX),RIBPS(NGRMAX),DRIBPS(NGRMAX),EBARPS(NGRMAX),    01 03270
     2  DEBRPS(NGRMAX)                                                  01 03280
      COMMON /BPSPCT/NGRIDP,EBPS,RIBPS,DRIBPS,EBARPS,DEBRPS             01 03290
C    Internal Bremsstrahlung Spectrum                                   01 03300
C%%%%%BREMST                                                            01 03310
      INTEGER NGRIDI                                                    01 03320
      REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),    01 03330
     2  DEBRIS(NGRMAX),SUMEB,DSUMEB                                     01 03340
      COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS,SUMEB,DSUMEB01 03350
C^^^^^BREMST                                                            01 03360
C^^^^^SPECTR                                                            01 03370
C                                                                       01 03380
C%%%%%MIRD                                                              01 03390
C     Record numbers of levels fed or depopulated                       01 03400
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          01 03410
C     Keep the record or not in output to plotting?                     01 03420
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 01 03430
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       01 03440
C     Record numbers of the radiations and levels                       01 03450
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          01 03460
C     Level energy and uncertainty                                      01 03470
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   01 03480
C     Record number of ID card                                          01 03490
      INTEGER IDREC(MAXDCY)                                             01 03500
C     Current number of levels and record number                        01 03510
      INTEGER NLEV,NREC                                                 01 03520
C     Date                                                              01 03530
      INTEGER MIRDAT                                                    01 03540
C     Publications                                                      01 03550
      CHARACTER*10 MIRPUB                                               01 03560
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   01 03570
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 01 03580
     3  IDREC,MIRDAT,MIRPUB                                             01 03590
C     Which type of decay gamma comes from                              01 03600
      REAL RTYPG(GMA)                                                   01 03610
      COMMON /GFROM/RTYPG                                               01 03620
C     Keep track of isomers                                             01 03630
      INTEGER NISMAX                                                    01 03640
      PARAMETER (NISMAX=10)                                             01 03650
      CHARACTER*5 ISDAUG(NISMAX,MAXDCY)                                 01 03660
      INTEGER NISO,ISOREC(NISMAX,MAXDCY)                                01 03670
      COMMON /ISOMER/NISO,ISOREC,ISDAUG                                 01 03680
C     Parent information                                                01 03690
      REAL MTSEC,MDTSEC                                                 01 03700
      CHARACTER MTIM*10,MDTIM*6,MPARNT*5,MMETA*2                        01 03710
      COMMON /PARINF/MTSEC,MDTSEC,MTIM,MDTIM,MPARNT,MMETA               01 03720
C     Daughter and Branching ratio information                          01 03730
      CHARACTER*5 MDAU(MAXDCY)                                          01 03740
      CHARACTER*16 DAUT12(MAXDCY)                                       01 03750
      REAL MBR(MAXDCY),MDBR(MAXDCY)                                     01 03760
      COMMON /MIRDBR/MBR,MDBR,MDAU,DAUT12                               01 03770
      INTEGER INDEXF                                                    01 03780
      EXTERNAL INDEXF                                                   01 03790
C^^^^^MIRD                                                              01 03800
C                                                                       01 03810
C#####                                                                  01 03820
C  Discrete radiation information                                       01 03830
      INTEGER KSAVE(TMA),IPOST(TMA),IDUM(TMA)                           01 03840
      REAL E(TMA),DE(TMA),RI(TMA),DRI(TMA),EX(TMA),DEX(TMA),DUM(TMA)    01 03850
C#####                                                                  01 03860
C                                                                       01 03870
      CHARACTER*80 CARD,CARD2                                           01 03880
      COMMON /CARDS/CARD,CARD2                                          01 03890
C                                                                       01 03900
      INTEGER I,IAD,IAP,ICONT,IL,ITYP,IZAD,IZAP,IZD,JCONT,LPAR,LST,     01 03910
     2  LSTR,MERGE,N5E,N5G,NFLAG,NMESS,NWARN,MAXEC,Z,NTOPNE             01 03920
      REAL A,AD,AMASS,AQR,ARATIO,DEAC,DQ,Q,RTYP,WEIGHT,X,DX,QIS,DQIS    01 03930
      CHARACTER SLCARD*80                                               01 03940
      CHARACTER STR*80,OLDSTR*5                                         01 03950
      CHARACTER ADUM*2,DAET*11,TIEM*10                                  01 03960
C                                                                       01 03970
      CHARACTER*2 OMITCH(5)                                             01 03980
      DATA OMITCH/'A ','B ','CE','G ','EC'/                             01 03990
C                                                                       01 04000
C  Version Number                                                       01 04010
      CHARACTER*15 VERNO                                                01 04020
      DATA VERNO/'5.5 [ 5-OCT-88]'/                                     01 04030
C                                                                       01 04040
C  Acknowledgement and disclaimer                                       01 04050
      CHARACTER*80 AKNOW(3)                                             01 04060
      DATA AKNOW/'Work on the program RADLST sponsored by the Division',01 04070
     2 'of Basic Energy Sciences, US Department of Energy, under con-', 01 04080
     3 'tract No. DE-AC02-76CH00016 with Associated Universities, Inc.'/01 04090
      CHARACTER*80 DISCL(3)                                             01 04100
      DATA DISCL/'Neither the Associated Universities, Inc., nor the',  01 04110
     2 'US Department of Energy make any warranty or assume any legal', 01 04120
     3 'responsibility for the results produced by the program.'/       01 04130
C                                                                       01 04140
      LOGICAL ENSDF,ENDF,NUDAT,ATOMIC,WMASSB,WMASSS,SPECTR,BREMS,MIRD   01 04150
      LOGICAL NCARD,PCARD,LMERGE                                        01 04160
      LOGICAL ACTIVE,BADDAT                                             01 04170
C%%%%%MIRD                                                              01 04180
      REAL T,DT                                                         01 04190
C^^^^^MIRD                                                              01 04200
C                                                                       01 04210
      INTEGER IVLSTR,LENSTR,TYPSTR                                      01 04220
      EXTERNAL IVLSTR,LENSTR,TYPSTR                                     01 04230
C                                                                       01 04240
      INTEGER J                                                         01 04250
C                                                                       01 04260
      INTEGER*2 IHOUR,IMIN,IDUU,IYEAR,IMONTH,IDAY                       01 04300
      CHARACTER*3 MONTH(12)                                             01 04310
      DATA MONTH/'JAN','FEB','MAR','APR','MAY','JUN',                   01 04320
     2           'JUL','AUG','SEP','OCT','NOV','DEC'/                   01 04330
C+++MDC+++                                                              01 04360
C...DVF,VAX                                                             01 04370
C/        CALL DATE_AND_TIME(DAET,TIEM)                                 01 04380
C/        READ(DAET,'(I4,I2,I2)') IYEAR,IMONTH,IDAY                     01 04390
C/        READ(TIEM,'(I2,I2,6X)') IHOUR,IMIN                            01 04395
C...IPC                                                                 01 04400
C/        CALL GETTIM(IHOUR,IMIN,IDUU,IDUU)                             01 04410
C/        CALL GETDAT(IYEAR,IMONTH,IDAY)                                01 04420
C...ANS
      IYEAR=1900
      IMONTH=1
      IDAY=1
      IHOUR=0
      IMIN=0
C---MDC---                                                              01 04460
      WRITE(DAET,FMT='(I2,1H-,A3,1H-,I4)')IDAY,MONTH(IMONTH),IYEAR      01 04430
      WRITE(TIEM,FMT='(I2.2,1H:,I2.2)')IHOUR,IMIN                       01 04450
C               DAET=dd-mmm-ccyy                                        01 04470
C               TIEM=hh:mm                                              01 04480
C                                                                       01 04490
      CALL DIALOG(VERNO,ENSDF,ENDF,NUDAT,ATOMIC,WMASSB,WMASSS,SPECTR,   01 04500
     2  BREMS,MIRD)                                                     01 04510
C                                                                       01 04520
C+++MDC---                                                              01 04530
C...DVF,VAX,IPC                                                         01 04540
C/      WRITE(IREPT,FMT='(16H1PROGRAM RADLST ,A15,10H.  RUN ON ,A11,    01 04550
C/     2  4H AT ,A5//)') VERNO,DAET,TIEM                                01 04560
C...ANS                                                                 01 04570
      WRITE(IREPT,FMT='(16H1PROGRAM RADLST ,A15//)') VERNO              01 04580
C---MDC---                                                              01 04590
C%%%%%ENDFB                                                             01 04600
      IF(ENDF)WRITE(IENDF,*)' '                                         01 04610
C^^^^^ENDFB                                                             01 04620
      MERGE=0                                                           01 04630
      LMERGE=.FALSE.                                                    01 04640
      MAT=0                                                             01 04650
      WEIGHT=1.0                                                        01 04660
      MAXEC=0                                                           01 04670
      IF(NUDAT)THEN                                                     01 04680
C%%%%%NUDOUT                                                            01 04690
         RIMIN=0.1                                                      01 04700
C^^^^^NUDOUT                                                            01 04710
      ELSE                                                              01 04720
         RIMIN=0.001                                                    01 04730
      ENDIF                                                             01 04740
      ICOMNT=0                                                          01 04750
      KCOMNT=0                                                          01 04760
      IALLG=0                                                           01 04770
      ELEV=-1.0                                                         01 04780
        NDK=0                                                           01 04790
        LEVNUM=-1                                                       01 04800
        METNUM=-1                                                       01 04810
        NWARN=0                                                         01 04820
        NMESS=0                                                         01 04830
C                                                                       01 04840
        IF(.NOT.ATOMIC)THEN                                             01 04850
           WRITE(ITRMOU,*) ' READING ATOMIC DATA --- CREATING BINARY '  01 04860
     2       //'FILE'                                                   01 04870
           CALL READAT(ZMA,NMESS)                                       01 04880
        ELSE                                                            01 04890
           WRITE(ITRMOU,*)' USING BINARY ATOMIC DATA FILE AS FOUND'     01 04900
        ENDIF                                                           01 04910
C                                                                       01 04920
        IF(.NOT.WMASSB)THEN                                             01 04930
           IF(WMASSS)THEN                                               01 04940
              WRITE(ITRMOU,*) ' READING MASS DATA --- CREATING BINARY ' 01 04950
     2          //'FILE'                                                01 04960
              CALL READMS(IMASS,IMASSB)                                 01 04970
           ELSE                                                         01 04980
              WRITE(ITRMOU,*) ' NO MASS DATA --- USING GARVEY-KELSON'   01 04990
           ENDIF                                                        01 05000
        ELSE                                                            01 05010
           WRITE(ITRMOU,*)' USING BINARY MASS DATA FILE AS FOUND'       01 05020
        ENDIF                                                           01 05030
C                                                                       01 05040
  100 CONTINUE                                                          01 05050
      ACTIVE=.FALSE.                                                    01 05060
      NDK=0                                                             01 05070
      LABEL=' '                                                         01 05080
      WEIGHT=1.0                                                        01 05090
      MAXEC=0                                                           01 05100
      IALLG=0                                                           01 05110
C%%%%%MIRD                                                              01 05120
      NREC=0                                                            01 05130
      NLEV=0                                                            01 05140
      NISO=0                                                            01 05150
C^^^^^                                                                  01 05160
  122 READ(IDATA,FMT='(A)',END=500) CARD                                01 05170
      WRITE(IREPT,FMT='(1H ,A)') CARD                                   01 05180
C                                                                       01 05190
  123 CONTINUE                                                          01 05200
        IF(CARD .EQ. ' ')THEN                                           01 05210
           IF(ACTIVE)THEN                                               01 05220
C%%%%%MIRD                                                              01 05230
               IF(MIRD)CALL WRITMP(MIRDTM,NREC,CARD)                    01 05240
C^^^^^                                                                  01 05250
              GOTO 357                                                  01 05260
           ELSE                                                         01 05270
              CALL MESSAG(NMESS,2,'UNEXPECTED END CARD FOUND')          01 05280
              GOTO 100                                                  01 05290
           ENDIF                                                        01 05300
        ENDIF                                                           01 05310
C#####                                                                  01 05320
C  Parameter record                                                     01 05330
      IF (CARD(1:5) .EQ. 'PARAM')THEN                                   01 05340
         IF(.NOT.MIRD)THEN                                              01 05350
            CALL GETPRM(CARD(5:80),ENDF,NUDAT,RIMIN,IALLG,WEIGHT,MAT,   01 05360
     2        MAXEC,NMESS)                                              01 05370
C%%%%%MIRD                                                              01 05380
         ELSE                                                           01 05390
            I=INDEX(CARD,'DAUT12=')                                     01 05400
            IF(I .GT. 0)THEN                                            01 05410
               I=INDEXF(CARD,I,'=')+1                                   01 05420
               J=INDEXF(CARD,I,'$')                                     01 05430
               IF(J .EQ. 0)THEN                                         01 05440
                  DAUT12(NDK+1)=CARD(I:)                                01 05450
               ELSE                                                     01 05460
                  DAUT12(NDK+1)=CARD(I:J-1)                             01 05470
               ENDIF                                                    01 05480
            ELSE                                                        01 05490
               CALL MESSAG(NMESS,2,'PARAMETER RECORD IGNORED')          01 05500
            ENDIF                                                       01 05510
C^^^^^                                                                  01 05520
         ENDIF                                                          01 05530
         GO TO 122                                                      01 05540
      ENDIF                                                             01 05550
C###                                                                    01 05560
C                                                                       01 05570
C%%%%%ENSDF                                                             01 05580
      IF (ENSDF .AND. CARD(1:4) .EQ. 'PAGE') WRITE (IENSDF,FMT='(1H1)') 01 05590
C^^^^^                                                                  01 05600
C                                                                       01 05610
C#####                                                                  01 05620
C  Are data sets to be merged?                                          01 05630
      IF (CARD(1:5) .EQ. 'MERGE') THEN                                  01 05640
         IF(.NOT. NUDAT)THEN                                            01 05650
            MERGE=1                                                     01 05660
            LMERGE=.TRUE.                                               01 05670
            GO TO 108                                                   01 05680
C%%%%%NUDOUT                                                            01 05690
         ELSE                                                           01 05700
            CALL MESSAG(NMESS,1,'NOT COMPATIBLE WITH NUDAT')            01 05710
            MERGE=0                                                     01 05720
            GOTO 122                                                    01 05730
C^^^^^NUDOUT                                                            01 05740
         ENDIF                                                          01 05750
      ENDIF                                                             01 05760
      IF (CARD(1:5) .EQ. 'ENDME') THEN                                  01 05770
         IF(.NOT. NUDAT)THEN                                            01 05780
            MERGE=0                                                     01 05790
            LABEL='COMBINED DATA SETS'                                  01 05800
            LABEL(34:40)='I(MIN)='                                      01 05810
            X=RIMIN                                                     01 05820
            DX=X/2.                                                     01 05830
            CALL CNVU2S(X,DX,STR,6,ADUM,2)                              01 05840
            LABEL(41:)=STR                                              01 05850
            LABEL(LENSTR(LABEL)+1:LENSTR(LABEL)+1)='%'                  01 05860
            GOTO 365                                                    01 05870
C%%%%%NUDOUT                                                            01 05880
         ELSE                                                           01 05890
            CALL MESSAG(NMESS,1,'NOT COMPATIBLE WITH NUDAT')            01 05900
            GOTO 122                                                    01 05910
C^^^^^NUDOUT                                                            01 05920
         ENDIF                                                          01 05930
      ENDIF                                                             01 05940
C#####                                                                  01 05950
C                                                                       01 05960
C#####                                                                  01 05970
C  Parent record                                                        01 05980
C                                                                       01 05990
      IF (CARD(7:8) .EQ. ' P') THEN                                     01 06000
         IF(CARD(6:6) .NE. ' ')THEN                                     01 06010
            CALL DUMP(MERGE)                                            01 06020
            WRITE(ITRMOU,*)                                             01 06030
     2        'FOUND P CONTINUATION RECORD. SKIPPING DATA SET'          01 06040
            GOTO 100                                                    01 06050
         ENDIF                                                          01 06060
C%%%%%MIRD                                                              01 06070
         IF(MIRD)CALL WRITMP(MIRDTM,NREC,CARD)                          01 06080
C^^^^^                                                                  01 06090
         IF (RTYP.EQ.3.0)THEN                                           01 06100
            CALL WARNNG(NWARN,'PARENT RECORD FOUND IN IT DATA SET')     01 06110
            GO TO 122                                                   01 06120
         ENDIF                                                          01 06130
         CALL                                                           01 06140
     2     PARPRO(PCARD,ENDF,MIRD,MERGE,ARATIO,AQR,DEAC,Q,DQ,QIS,DQIS,  01 06150
     2     RTYP,LPAR,NMESS,NWARN)                                       01 06160
C%%%%%ENDFB                                                             01 06170
         IF(ENDF)THEN                                                   01 06180
           ENDQ(NDK)=Q                                                  01 06190
           ENDDQ(NDK)=DQ                                                01 06200
           IF(IVLSTR(CARD(10:19)) .GT. 0)THEN                           01 06210
              LIS=MAX0(LIS,LIS)                                         01 06220
              LISO=MAX0(LISO,LISO)                                      01 06230
              CALL WARNNG(NWARN,'CHECK LIS & LISO')                     01 06240
           ENDIF                                                        01 06250
         ENDIF                                                          01 06260
C^^^^^ENDFB                                                             01 06270
         GO TO 122                                                      01 06280
      ENDIF                                                             01 06290
C#####                                                                  01 06300
C                                                                       01 06310
C#####                                                                  01 06320
C  Normalization record                                                 01 06330
      IF (CARD(6:8) .EQ. '  N') THEN                                    01 06340
C%%%%%MIRD                                                              01 06350
         IF(MIRD)CALL WRITMP(MIRDTM,NREC,CARD)                          01 06360
C^^^^^MIRD                                                              01 06370
         CALL NORPRO(CARD,NDK,NCARD,ENDF,MIRD,NWARN,NMESS,WEIGHT,RTYP)  01 06380
         GO TO 122                                                      01 06390
      ENDIF                                                             01 06400
C#####                                                                  01 06410
C                                                                       01 06420
C#####                                                                  01 06430
C  Level record                                                         01 06440
      IF (CARD(7:8) .EQ. ' L') THEN                                     01 06450
C%%%%%MIRD                                                              01 06460
         IF(MIRD)CALL WRITMP(MIRDTM,NREC,CARD)                          01 06470
C^^^^^MIRD                                                              01 06480
         IF(CARD(6:6) .NE. ' ')GOTO 122                                 01 06490
C%%%%%MIRD                                                              01 06500
         IF(MIRD)THEN                                                   01 06510
            NLEV=NLEV+1                                                 01 06520
            LREC(NLEV)=NREC                                             01 06530
            LLFROM(NLEV)=.FALSE.                                        01 06540
            LLTO(NLEV)=.FALSE.                                          01 06550
         ENDIF                                                          01 06560
C^^^^^MIRD                                                              01 06570
         IF(LEVNUM .LT. 0)THEN                                          01 06580
            CALL ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                   01 06590
            IF(.NOT. ACTIVE)GO TO 100                                   01 06600
         ENDIF                                                          01 06610
         CALL UNCER1(CARD(10:21),DELEV,ELEV,NMESS)                      01 06620
C%%%%%MIRD                                                              01 06630
         IF(MIRD)THEN                                                   01 06640
            IF(ELEV .EQ. 0)THEN                                         01 06650
               CARD(40:55)=DAUT12(NDK)                                  01 06660
               WRITE(UNIT=MIRDTM,REC=NREC)CARD                          01 06670
            ENDIF                                                       01 06680
            LENGY(NLEV)=ELEV                                            01 06690
            LDENGY(NLEV)=DELEV                                          01 06700
C           Flag levels which have T1/2>0.1T1/2(parent)                 01 06710
            IF(ELEV .NE. 0. .AND. CARD(40:49) .NE. ' '                  01 06720
     2        .AND. INDEX(CARD(40:49),'STABLE') .LE. 0)THEN             01 06730
               CALL GETT12(CARD(40:55),T,DT)                            01 06740
               IF(T .GT. 0. .AND. ELEV .GT. 0.)THEN                     01 06750
                  IF((T+DT) .GT. 0.1*(MTSEC-MDTSEC))THEN                01 06760
                     IF(NISO .GE. NISMAX)THEN                           01 06770
                        WRITE(IREPT,*)                                  01 06780
     2                    ' PROGRAM CAPACITY EXCEEDED. ISOMERS'         01 06790
                        WRITE(ITRMOU,*)                                 01 06800
     2                    ' PROGRAM CAPACITY EXCEEDED. ISOMERS'         01 06810
                     ELSE                                               01 06820
                        NISO=NISO+1                                     01 06830
                        ISOREC(NISO,NDK)=LREC(NLEV)                     01 06840
                        ISDAUG(NISO,NDK)=CARD(1:5)                      01 06850
                     ENDIF                                              01 06860
                  ELSE                                                  01 06870
                     CALL MESSAG(NMESS,2,'T1/2 NOT TRANSLATED')         01 06880
                  ENDIF                                                 01 06890
               ENDIF                                                    01 06900
            ENDIF                                                       01 06910
         ENDIF                                                          01 06920
C^^^^^MIRD                                                              01 06930
         LEVNUM=LEVNUM+1                                                01 06940
         IF(CARD(78:78) .EQ. 'M')THEN                                   01 06950
            IF(CARD(79:79) .EQ. ' ')THEN                                01 06960
               METNUM=METNUM+1                                          01 06970
            ELSE                                                        01 06980
               METNUM=IVLSTR(CARD(79:79))                               01 06990
            ENDIF                                                       01 07000
         ENDIF                                                          01 07010
         IF (RTYP.EQ.3.0) SLCARD=CARD                                   01 07020
         GO TO 122                                                      01 07030
      ENDIF                                                             01 07040
      IF (MERGE .NE. 1 .AND. CARD(8:8) .NE. 'P') THEN                   01 07050
         STR=CARD(1:5)                                                  01 07060
         CALL SQZSTR(STR,' ')                                           01 07070
         LST=LENSTR(STR)                                                01 07080
         IF ((LST .NE. 0) .AND. (STR .NE. OLDSTR) .AND. ACTIVE) THEN    01 07090
            CALL MESSAG(NMESS,3,'NO END RECORD')                        01 07100
            GO TO 357                                                   01 07110
         ENDIF                                                          01 07120
      ENDIF                                                             01 07130
C#####                                                                  01 07140
C                                                                       01 07150
C#####                                                                  01 07160
C  ID record                                                            01 07170
C                                                                       01 07180
      IF (CARD(6:9) .EQ. '    ' .AND. CARD(10:39) .NE. ' ')  THEN       01 07190
        IF(NWARN .NE. 0) WRITE(ITRMOU,*)                                01 07200
     2    '               ',NWARN,' WARNINGS'                           01 07210
        IF(NMESS .NE. 0) WRITE(ITRMOU,*)                                01 07220
     2    '               ',NMESS,' MESSAGES'                           01 07230
        WRITE(ITRMOU,*)' '                                              01 07240
        IF(LMERGE)THEN                                                  01 07250
           IF(MERGE .EQ. 1)THEN                                         01 07260
              WRITE(ITRMOU,*)' MERGING DATA SETS'                       01 07270
           ELSE                                                         01 07280
              WRITE(ITRMOU,*)' ENDING MERGE OF DATA SETS'               01 07290
              LMERGE=.FALSE.                                            01 07300
           ENDIF                                                        01 07310
        ENDIF                                                           01 07320
        WRITE(ITRMOU,*)' PROCESSING==> '//CARD(1:39)                    01 07330
C%%%%%MIRD                                                              01 07340
        IF(MIRD)THEN                                                    01 07350
C          Double check on bookkeeping                                  01 07360
           IF(NREC .GT. 1)THEN                                          01 07370
               READ(UNIT=MIRDTM,REC=NREC)CARD2                          01 07380
               IF(CARD2 .NE. ' ')THEN                                   01 07390
                  CARD2=' '                                             01 07400
                  NREC=NREC+1                                           01 07410
                  WRITE(UNIT=MIRDTM,REC=NREC)CARD2                      01 07420
               ENDIF                                                    01 07430
           ENDIF                                                        01 07440
           CALL WRITMP(MIRDTM,NREC,CARD)                                01 07450
        ENDIF                                                           01 07460
C^^^^^MIRD                                                              01 07470
        IF(WEIGHT .NE. 1.)WRITE(ITRMOU,*)                               01 07480
     2    '               Weight=',WEIGHT                               01 07490
        IF(MAXEC .NE. 0)WRITE(ITRMOU,*)'               ',MAXEC,         01 07500
     2    ' sets of EC intensities may be printed'                      01 07510
        IF(IALLG .EQ. 1)WRITE(ITRMOU,*)                                 01 07520
     2    '               All Gs will be printed'                       01 07530
        PCARD=.FALSE.                                                   01 07540
        NCARD=.FALSE.                                                   01 07550
        NWARN=0                                                         01 07560
        NMESS=0                                                         01 07570
        IF(INDEX(CARD(10:39),'DECAY') .EQ. 0)THEN                       01 07580
           CALL DUMP(MERGE)                                             01 07590
           WRITE(ITRMOU,*)'                NO DECAY IN DSID---SKIPPING' 01 07600
           GOTO 100                                                     01 07610
        ENDIF                                                           01 07620
        IF(TYPSTR(CARD(10:10)) .NE.  1)THEN                             01 07630
           CALL DUMP(MERGE)                                             01 07640
           WRITE(ITRMOU,*)'                NO MASS IN DSID---SKIPPING'  01 07650
           GOTO 100                                                     01 07660
        ENDIF                                                           01 07670
C%%%%%ENDFB                                                             01 07680
        IF(ENDF .AND. LMERGE)THEN                                       01 07690
           IF(KCOMNT .LT. PCOMNT)THEN                                   01 07700
              KCOMNT=KCOMNT+1                                           01 07710
              KOMENT(KCOMNT)=CARD(10:64)                                01 07720
           ENDIF                                                        01 07730
        ENDIF                                                           01 07740
C^^^^^ENDFB                                                             01 07750
        IL=INDEX(CARD(10:39),' ')+9-1                                   01 07760
        CALL AZ(CARD(10:IL),A,Z,PAR)                                    01 07770
        IF(A .LE. 0. .OR. Z .LT. 0)THEN                                 01 07780
           CALL DUMP(MERGE)                                             01 07790
           WRITE(ITRMOU,*)'                BAD PARENT ID---SKIPPING'    01 07800
           GOTO 100                                                     01 07810
        ENDIF                                                           01 07820
C               GET ATOMIC PROPERTIES FOR CURRENT DATASET               01 07830
        CALL AZ(CARD(1:5),AD,IZD,ADUM)                                  01 07840
        IF(AD .LE. 0. .OR. IZD .LT. 0)THEN                              01 07850
           CALL DUMP(MERGE)                                             01 07860
           WRITE(ITRMOU,*)'                BAD NUCID---SKIPPING'        01 07870
           GOTO 100                                                     01 07880
        ENDIF                                                           01 07890
        IF(NDK .GE. MAXDCY)THEN                                         01 07900
           CALL WARNNG(NWARN,'TOO MANY DECAY MODES')                    01 07910
C%%%%%MIRD                                                              01 07920
           IF(MIRD)THEN                                                 01 07930
              WRITE(ITRMOU,*)'                TOO MANY DECAY MODES'//   01 07940
     2          ' --- SKIPPING'                                         01 07950
              CALL DUMP(MERGE)                                          01 07960
              GOTO 100                                                  01 07970
           ENDIF                                                        01 07980
C^^^^^MIRD                                                              01 07990
        ELSE                                                            01 08000
           NDK=NDK+1                                                    01 08010
C%%%%%MIRD                                                              01 08020
           IF(MIRD)IDREC(NDK)=NREC-1                                    01 08030
C^^^^^MIRD                                                              01 08040
        ENDIF                                                           01 08050
        READ(IATOMB,REC=IZD,ERR=1111)NFLAG,WK(NDK),DWK(NDK),WL(NDK),    01 08060
     2    DWL(NDK),ENKL(NDK),DENKL(NDK),(BE(NDK,I),DBE(NDK,I),I=1,4),   01 08070
     3    BTOA(NDK),DBTOA(NDK),A2TOA1(NDK),DEA2A1(NDK),                 01 08080
     4    (ET(NDK,I),DET(NDK,I),I=1,6)                                  01 08090
        GOTO 2222                                                       01 08100
1111    CONTINUE                                                        01 08110
        WRITE(ITRMOU,*)'                ATOMIC DATA TABLE EXCEEDED'//   01 08120
     2    ' --- SKIPPING'                                               01 08130
        CALL DUMP(MERGE)                                                01 08140
        GOTO 100                                                        01 08150
2222    CONTINUE                                                        01 08160
C                                                                       01 08170
        IF(NFLAG .NE. 1 .OR. IZD .LT. 1)THEN                            01 08180
           WRITE(ITRMOU,*)'                NO ATOMIC DATA OR Z<1'//     01 08190
     2       ' --- SKIPPING'                                            01 08200
           CALL DUMP(MERGE)                                             01 08210
           GOTO 100                                                     01 08220
        ENDIF                                                           01 08230
C                                                                       01 08240
C                                                                       01 08250
C    Reset arrays for new data set                                      01 08260
        IAP=INT(A)                                                      01 08270
        IZAP=1000*Z+IAP                                                 01 08280
        IAD=INT(AD)                                                     01 08290
        IZAD=1000*IZD+IAD                                               01 08300
        ARATIO=AMASS(IZAD,WMASSB,IMASSB,NMESS)/                         01 08310
     2    AMASS(IZAP,WMASSB,IMASSB,NMESS)                               01 08320
C         Check ARATIO                                                  01 08330
        IF(ARATIO .GT. 1.)THEN                                          01 08340
           WRITE(ITRMOU,*)                                              01 08350
     2       '        CHECK FUNCTION AMASS---A(DAUGHTER)>A(PARENT)'     01 08360
           ARATIO=1.                                                    01 08370
           WRITE(ITRMOU,*)                                              01 08380
     2       '                               RESETTING RATIO TO 1'      01 08390
        ENDIF                                                           01 08400
C                                                                       01 08410
C       Set binding energy for M+                                       01 08420
        IF(BE(NDK,4) .EQ. 0.)THEN                                       01 08430
C         If no N-shell binding energy, set to M-shell energy           01 08440
           BE(NDK,5)=BE(NDK,3)                                          01 08450
           DBE(NDK,5)=DBE(NDK,3)                                        01 08460
        ELSE                                                            01 08470
C         If N-shell binding energy, set to average and find largest    01 08480
C            uncertainty                                                01 08490
           BE(NDK,5)=(BE(NDK,3)+BE(NDK,4))/2.                           01 08500
           X=ABS(BE(NDK,3)-BE(NDK,5))                                   01 08510
           DBE(NDK,5)=AMAX1(X,DBE(NDK,3),DBE(NDK,4))                    01 08520
        ENDIF                                                           01 08530
C                                                                       01 08540
        ACTIVE=.TRUE.                                                   01 08550
        RNORM=1.                                                        01 08560
        DRNORM=0.                                                       01 08570
        BNORM=1.                                                        01 08580
        TNORM=1.                                                        01 08590
        BRN=1.                                                          01 08600
        DBRN=0.                                                         01 08610
        Q=0.                                                            01 08620
        DQ=0.                                                           01 08630
        ELEV=-1.0                                                       01 08640
        LEVNUM=-1                                                       01 08650
        METNUM=-1                                                       01 08660
        OLDSTR=CARD(1:5)                                                01 08670
        CALL SQZSTR(OLDSTR,' ')                                         01 08680
C%%%%%MIRD                                                              01 08690
      IF(MIRD)MDAU(NDK)=OLDSTR                                          01 08700
C^^^^^MIRD                                                              01 08710
        LABEL=' '                                                       01 08720
        STR=CARD(10:39)                                                 01 08730
        LPAR=INDEX(STR,'(')                                             01 08740
        IF (LPAR.LE.0)THEN                                              01 08750
           LPAR=31                                                      01 08760
           DO 109  I=1,29                                               01 08770
              IF (STR(LPAR-1:LPAR-1) .NE. ' ') GOTO 111                 01 08780
              LPAR=LPAR-1                                               01 08790
  109      CONTINUE                                                     01 08800
        ENDIF                                                           01 08810
  111   CONTINUE                                                        01 08820
        HEAD=' '                                                        01 08830
        HEAD(2:LPAR)=STR                                                01 08840
        RTYP=0.                                                         01 08850
C     Nomenclature for RTYP follows that of ENDF                        01 08860
C       Primary decay preceeds decimal point.  Subsequent decays        01 08870
C       follow decimal point                                            01 08880
        IF(INDEX(STR,' IT ') .GT. 0) RTYP=3.0                           01 08890
        IF(INDEX(STR,' EC ') .GT. 0) RTYP=2.0                           01 08900
        IF(INDEX(STR,' ECP') .GT. 0) RTYP=2.7                           01 08910
        IF(INDEX(STR,' B+ ') .GT. 0) RTYP=2.0                           01 08920
        IF(INDEX(STR,' B- ') .GT. 0) RTYP=1.0                           01 08930
        IF(INDEX(STR,' B-N') .GT. 0) RTYP=1.5                           01 08940
        IF(INDEX(STR,' A ') .GT. 0) RTYP=4.0                            01 08950
        IF(RTYP .EQ. 0.)THEN                                            01 08960
           WRITE(ITRMOU,*)'               DECAY TYPE NOT RECOGNIZED '   01 08970
     2          //'---SKIPPING'                                         01 08980
           CALL DUMP(MERGE)                                             01 08990
           GOTO 100                                                     01 09000
        ENDIF                                                           01 09010
        RTYPE(NDK)=RTYP                                                 01 09020
        LABEL(2:LPAR)=STR                                               01 09030
        STR=CARD(40:64)                                                 01 09040
        STR(29:35)='/ENSDF/'                                            01 09050
        STR(36:41)=CARD(75:80)                                          01 09060
C%%%%%MIRD                                                              01 09070
      IF(MIRD)THEN                                                      01 09080
         MIRDAT=IVLSTR(CARD(75:80))                                     01 09090
         MIRPUB=CARD(65:74)                                             01 09100
      ENDIF                                                             01 09110
C^^^^^                                                                  01 09120
        CALL SQZSTR(STR,' ')                                            01 09130
        ITYP=INDEX(STR,'NDS')                                           01 09140
        IF (ITYP .NE. 0) STR(1:ITYP-3)=' '                              01 09150
        LSTR=LENSTR(STR)                                                01 09160
        IF (LSTR .GT. 20) THEN                                          01 09170
            LSTR=LSTR - 13                                              01 09180
            CALL DELSTR(STR,1,LSTR)                                     01 09190
            LSTR=LENSTR(STR)                                            01 09200
        ENDIF                                                           01 09210
        HEAD(65-LSTR:64)=STR                                            01 09220
        LABEL(34:40)='I(MIN)='                                          01 09230
        X=RIMIN                                                         01 09240
        DX=X/2.                                                         01 09250
        CALL CNVU2S(X,DX,STR,6,ADUM,2)                                  01 09260
        LABEL(41:)=STR                                                  01 09270
        LABEL(LENSTR(LABEL)+1:LENSTR(LABEL)+1)='%'                      01 09280
C                                                                       01 09290
        IF (MERGE .NE. 0)  THEN                                         01 09300
           ICOMNT=ICOMNT+1                                              01 09310
           IF (ICOMNT.GT.10)  ICOMNT=10                                 01 09320
           COMENT(ICOMNT)=LABEL                                         01 09330
           GO TO 122                                                    01 09340
        ENDIF                                                           01 09350
  108   CONTINUE                                                        01 09360
        KCOMNT=0                                                        01 09370
        ELEV=-1.0                                                       01 09380
        LEVNUM=-1                                                       01 09390
        METNUM=-1                                                       01 09400
        CALL ZERO8(10,SUMIE)                                            01 09410
        CALL ZERO8(10,DSUMIE)                                           01 09420
        CALL ZERO8(10,SUMI)                                             01 09430
        CALL ZERO8(10,DSUMI)                                            01 09440
        ICOMNT=0                                                        01 09450
        AVBEX=0.                                                        01 09460
        DAVBX=0.                                                        01 09470
        TBI=0.                                                          01 09480
        DTBI=0.                                                         01 09490
        AVPEX=0.                                                        01 09500
        DAVPX=0.                                                        01 09510
        TPI=0.                                                          01 09520
        DTPI=0.                                                         01 09530
        NTB=0                                                           01 09540
        NTP=0                                                           01 09550
        CALL ZERO8(5,EOMIT)                                             01 09560
        CALL ZERO8(5,OMIT)                                              01 09570
        CALL ZERO4(5,NOMIT)                                             01 09580
        IF(NTOP .GE. 1)THEN                                             01 09590
           CALL ZERO8(NTOP,E)                                           01 09600
           CALL ZERO8(NTOP,DE)                                          01 09610
           CALL ZERO8(NTOP,RI)                                          01 09620
           CALL ZERO8(NTOP,DRI)                                         01 09630
           CALL ZERO8(NTOP,EX)                                          01 09640
           CALL ZERO8(NTOP,DEX)                                         01 09650
           CALL ZERO4(NTOP,KSAVE)                                       01 09660
           CALL ZERO4(NTOP,IPOST)                                       01 09670
        ENDIF                                                           01 09680
        IF(NA .GE. 1)THEN                                               01 09690
           CALL ZERO8(NA,EA)                                            01 09700
           CALL ZERO8(NA,DEA)                                           01 09710
           CALL ZERO8(NA,IA)                                            01 09720
           CALL ZERO8(NA,DIA)                                           01 09730
C%%%%%MIRD                                                              01 09740
            IF(MIRD)THEN                                                01 09750
               CALL ZERO4(NA,ALTO)                                      01 09760
               CALL ZERO4(NA,AREC)                                      01 09770
               CALL ZEROLT(NA,AKEEP)                                    01 09780
            ENDIF                                                       01 09790
C^^^^^MIRD                                                              01 09800
        ENDIF                                                           01 09810
        IF(NB .GE. 1)THEN                                               01 09820
           CALL ZERO8(NB,BME)                                           01 09830
           CALL ZERO8(NB,DBME)                                          01 09840
           CALL ZERO8(NB,BMI)                                           01 09850
           CALL ZERO8(NB,DBMI)                                          01 09860
           CALL ZERO8(NB,EVM)                                           01 09870
           CALL ZERO8(NB,DEVM)                                          01 09880
C%%%%%MIRD                                                              01 09890
            IF(MIRD)THEN                                                01 09900
               CALL ZERO4(NB,BLTO)                                      01 09910
               CALL ZERO4(NB,BREC)                                      01 09920
               CALL ZEROLT(NB,BKEEP)                                    01 09930
            ENDIF                                                       01 09940
C^^^^^MIRD                                                              01 09950
        ENDIF                                                           01 09960
        IF(NE .GE. 1)THEN                                               01 09970
           CALL ZERO8(NE,EECA)                                          01 09980
           CALL ZERO8(NE,DEECA)                                         01 09990
           CALL ZERO8(NE,ECAI)                                          01 10000
           CALL ZERO8(NE,DECAI)                                         01 10010
           CALL ZERO4(NE,KLASS)                                         01 10020
           CALL ZERO8(NE,EBP)                                           01 10030
           CALL ZERO8(NE,DEBP)                                          01 10040
           CALL ZERO8(NE,EVP)                                           01 10050
           CALL ZERO8(NE,DEVP)                                          01 10060
           CALL ZERO8(NE,PINT)                                          01 10070
           CALL ZERO8(NE,DPINT)                                         01 10080
           N5E=5*NE                                                     01 10090
           CALL ZERO8(N5E,EC)                                           01 10100
           CALL ZERO8(N5E,DEC)                                          01 10110
C%%%%%MIRD                                                              01 10120
            IF(MIRD)THEN                                                01 10130
               CALL ZERO4(NE,ELTO)                                      01 10140
               CALL ZERO4(NE,EREC)                                      01 10150
               CALL ZEROLT(NE,EKEEP)                                    01 10160
            ENDIF                                                       01 10170
C^^^^^MIRD                                                              01 10180
        ENDIF                                                           01 10190
        IF(NG .GE. 1)THEN                                               01 10200
           CALL ZERO8(NG,EG)                                            01 10210
           CALL ZERO8(NG,DEG)                                           01 10220
           CALL ZERO8(NG,IG)                                            01 10230
           CALL ZERO8(NG,DIG)                                           01 10240
           N5G=5*NG                                                     01 10250
           CALL ZERO8(N5G,ICE)                                          01 10260
           CALL ZERO8(N5G,DICE)                                         01 10270
           CALL ZERO4(NG,IDECAY)                                        01 10280
C%%%%%MIRD                                                              01 10290
            IF(MIRD)THEN                                                01 10300
               CALL ZERO8(NG,RTYPG)                                     01 10310
               CALL ZERO4(NG,GLFROM)                                    01 10320
               CALL ZERO4(NG,GLTO)                                      01 10330
               CALL ZERO4(NG,GREC)                                      01 10340
               CALL ZEROLT(NG,GKEEP)                                    01 10350
            ENDIF                                                       01 10360
C^^^^^MIRD                                                              01 10370
        ENDIF                                                           01 10380
C%%%%%MIRD                                                              01 10390
      IF(MIRD)THEN                                                      01 10400
         IF(NLEV .GE. 1)THEN                                            01 10410
            CALL ZERO8(NLEV,LENGY)                                      01 10420
            CALL ZERO8(NLEV,LDENGY)                                     01 10430
            CALL ZEROLF(NLEV,LLFROM)                                    01 10440
         ENDIF                                                          01 10450
         IF(NISO .GE. 1)CALL ZERO4(NISO*NDK,ISOREC)                     01 10460
         NISO=0                                                         01 10470
         NLEV=0                                                         01 10480
         MTSEC=0.                                                       01 10490
         MDTSEC=0.                                                      01 10500
         MTIM=' '                                                       01 10510
         MDTIM=' '                                                      01 10520
      ENDIF                                                             01 10530
C^^^^^MIRD                                                              01 10540
        NK1=0                                                           01 10550
        NA=0                                                            01 10560
        NG =0                                                           01 10570
        NE=0                                                            01 10580
        NB =0                                                           01 10590
        NTOP=0                                                          01 10600
        CALL ZERO8(MAXDCY,TERMK)                                        01 10610
        CALL ZERO8(MAXDCY,TERMK1)                                       01 10620
        CALL ZERO8(MAXDCY,TERML)                                        01 10630
        CALL ZERO8(MAXDCY,TERML1)                                       01 10640
        CALL ZERO8(MAXDCY,DTERMK)                                       01 10650
        CALL ZERO8(MAXDCY,DTERML)                                       01 10660
        CALL ZERO8(MAXDCY,DTRMK1)                                       01 10670
        CALL ZERO8(MAXDCY,DTRML1)                                       01 10680
C%%%%%SPECTR                                                            01 10690
        IF(SPECTR)THEN                                                  01 10700
           IF(NGRIDM .GT. 0)THEN                                        01 10710
              CALL ZERO8(NGRIDM,EBMS)                                   01 10720
              CALL ZERO8(NGRIDM,RIBMS)                                  01 10730
              CALL ZERO8(NGRIDM,DRIBMS)                                 01 10740
              CALL ZERO8(NGRIDM,EBARMS)                                 01 10750
              CALL ZERO8(NGRIDM,DEBRMS)                                 01 10760
              NGRIDM=0                                                  01 10770
           ENDIF                                                        01 10780
           IF(NGRIDP .GT. 0)THEN                                        01 10790
              CALL ZERO8(NGRIDP,EBPS)                                   01 10800
              CALL ZERO8(NGRIDP,RIBPS)                                  01 10810
              CALL ZERO8(NGRIDP,DRIBPS)                                 01 10820
              CALL ZERO8(NGRIDP,EBARPS)                                 01 10830
              CALL ZERO8(NGRIDP,DEBRPS)                                 01 10840
              NGRIDP=0                                                  01 10850
           ENDIF                                                        01 10860
C%%%%%BREMST                                                            01 10870
           IF(BREMS)THEN                                                01 10880
              IF(NGRIDI .GT. 0)THEN                                     01 10890
                 CALL ZERO8(NGRIDI,EBIS)                                01 10900
                 CALL ZERO8(NGRIDI,RIBIS)                               01 10910
                 CALL ZERO8(NGRIDI,DRIBIS)                              01 10920
                 CALL ZERO8(NGRIDI,EBARIS)                              01 10930
                 CALL ZERO8(NGRIDI,DEBRIS)                              01 10940
                 NGRIDI=0                                               01 10950
              ENDIF                                                     01 10960
           ENDIF                                                        01 10970
C^^^^^BREMST                                                            01 10980
        ENDIF                                                           01 10990
C^^^^^SPECTR                                                            01 11000
        OLDSTR=CARD(1:5)                                                01 11010
        CALL SQZSTR(OLDSTR,' ')                                         01 11020
        GO TO 122                                                       01 11030
      ENDIF                                                             01 11040
C#####                                                                  01 11050
C                                                                       01 11060
C#####                                                                  01 11070
C  Gamma records                                                        01 11080
C                                                                       01 11090
      IF (CARD(6:8) .EQ. '  G')  THEN                                   01 11100
         IF(NG .LE. 0)THEN                                              01 11110
            CALL ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                   01 11120
            IF(.NOT. ACTIVE)GO TO 100                                   01 11130
         ENDIF                                                          01 11140
         IF (NG.GE.GMA) THEN                                            01 11150
            WRITE(IREPT,*)' PROGRAM CAPACITY EXCEEDED. GAMMAS'          01 11160
            WRITE(ITRMOU,*)' PROGRAM CAPACITY EXCEEDED. GAMMAS'         01 11170
            GO TO 122                                                   01 11180
         ENDIF                                                          01 11190
         CALL GAMPRO(NWARN,NMESS,ENDF,MIRD,*357,*910,OLDSTR,RTYP)       01 11200
         CARD=CARD2                                                     01 11210
         GOTO 123                                                       01 11220
      ENDIF                                                             01 11230
C#####                                                                  01 11240
C                                                                       01 11250
C#####                                                                  01 11260
C  Beta records                                                         01 11270
C                                                                       01 11280
      IF (CARD(6:8) .EQ. '  B')  THEN                                   01 11290
         IF(NB .LE. 0)THEN                                              01 11300
            CALL ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                   01 11310
            IF(.NOT. ACTIVE)GO TO 100                                   01 11320
         ENDIF                                                          01 11330
         IF (NB.GE.AM) THEN                                             01 11340
            WRITE(IREPT,*)' PROGRAM CAPACITY EXCEEDED. BETAS'           01 11350
            WRITE(ITRMOU,*)' PROGRAM CAPACITY EXCEEDED. BETAS'          01 11360
            GO TO 122                                                   01 11370
         ENDIF                                                          01 11380
         CALL BETPRO(NWARN,NMESS,ENDF,MIRD,*357,*910,OLDSTR,AQR,DEAC,   01 11390
     2     ARATIO,RTYP,SPECTR,IZD,AD,IZDB,ADB)                          01 11400
         CARD=CARD2                                                     01 11410
         GOTO 123                                                       01 11420
      ENDIF                                                             01 11430
C#####                                                                  01 11440
C                                                                       01 11450
C#####                                                                  01 11460
C  Electron-capture records                                             01 11470
C                                                                       01 11480
      IF (CARD(6:8) .EQ. '  E')  THEN                                   01 11490
         IF(NE .LE. 0)THEN                                              01 11500
            CALL ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                   01 11510
            IF(.NOT. ACTIVE)GO TO 100                                   01 11520
         ENDIF                                                          01 11530
         IF (NE.GE.AM)  THEN                                            01 11540
            WRITE(IREPT,*)' PROGRAM CAPACITY EXCEEDED. ECS'             01 11550
            WRITE(ITRMOU,*)' PROGRAM CAPACITY EXCEEDED. ECS'            01 11560
            GO TO 122                                                   01 11570
         ENDIF                                                          01 11580
         CALL ECPRO(NWARN,NMESS,ENDF,MIRD,*357,*910,OLDSTR,ARATIO,RTYP, 01 11590
     2     Q,DQ,NDK,SPECTR,IZD,AD,IZDP,ADP)                             01 11600
         CARD=CARD2                                                     01 11610
         GOTO 123                                                       01 11620
      ENDIF                                                             01 11630
C#####                                                                  01 11640
C                                                                       01 11650
C#####                                                                  01 11660
C  Alpha records                                                        01 11670
C                                                                       01 11680
      IF (CARD(6:8) .EQ. '  A')  THEN                                   01 11690
         IF(NA .LE. 0)THEN                                              01 11700
            CALL ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                   01 11710
            IF(.NOT. ACTIVE)GO TO 100                                   01 11720
         ENDIF                                                          01 11730
         IF (NA.GE.AM) THEN                                             01 11740
            WRITE(IREPT,*)' PROGRAM CAPACITY EXCEEDED. ALPHAS'          01 11750
            WRITE(ITRMOU,*)' PROGRAM CAPACITY EXCEEDED. ALPHAS'         01 11760
            GO TO 122                                                   01 11770
         ENDIF                                                          01 11780
         CALL ALPPRO(ENDF,MIRD,NMESS,NWARN,AQR,DEAC,ARATIO,RTYP)        01 11790
         GOTO 123                                                       01 11800
      ENDIF                                                             01 11810
C#####                                                                  01 11820
C                                                                       01 11830
C#####                                                                  01 11840
C  (Delayed-)Particle records                                           01 11850
C                                                                       01 11860
        IF(CARD(7:8) .EQ. ' D' .OR. CARD(9:9) .NE. ' ')THEN             01 11870
           CALL WARNNG(NWARN,'(DELAYED-)PARTICLE NOT IMPLEMENTED')      01 11880
           GOTO 122                                                     01 11890
        ENDIF                                                           01 11900
C#####                                                                  01 11910
C                                                                       01 11920
C#####                                                                  01 11930
C  Other types of records                                               01 11940
C                                                                       01 11950
      IF (CARD(8:8) .EQ. 'F')  GO TO 122                                01 11960
      IF (CARD(8:8) .EQ. 'R')  GO TO 122                                01 11970
      IF (CARD(8:8) .EQ. 'X')  GO TO 122                                01 11980
      IF (CARD(8:8) .EQ. 'Q')  GO TO 122                                01 11990
      IF(CARD(7:7) .EQ. 'D' .OR. CARD(7:7) .EQ. 'd')GOTO 122            01 12000
      IF(CARD(7:7) .EQ. 'T' .OR. CARD(7:7) .EQ. 't')GOTO 122            01 12010
      IF (CARD(7:7) .EQ. ' ')  THEN                                     01 12020
         ICONT=0                                                        01 12030
         IF(CARD .NE. ' ')THEN                                          01 12040
            CALL MESSAG(NMESS,1,'RECORD NOT RECOGNIZED')                01 12050
            GO TO 122                                                   01 12060
         ENDIF                                                          01 12070
      ENDIF                                                             01 12080
C         ICONT=1 signals possible continuation of allowed comment      01 12090
      IF (CARD(6:7) .EQ. ' C' .OR. CARD(6:7) .EQ. ' c' .OR.             01 12100
     2   CARD(6:7) .EQ. '1C' .OR. CARD(6:7) .EQ. '1c')THEN              01 12110
         IF(CARD(6:6) .EQ. '1')CALL MESSAG(NMESS,1,' OBSOLETE FORMAT')  01 12120
         ICONT=0                                                        01 12130
C%%%%%ENDFB                                                             01 12140
         IF(ENDF) CALL CMNTCD(CARD,0,0,'          ',JCONT,NMESS)        01 12150
C^^^^^ENDFB                                                             01 12160
         IF (CARD(10:19) .NE. ' ') GOTO 122                             01 12170
         IF (CARD(20:20) .EQ. '%' .OR. CARD(20:22) .EQ. 'SEE'           01 12180
     2    .OR. CARD(20:23) .EQ. 'FEED') THEN                            01 12190
            ICOMNT=ICOMNT+1                                             01 12200
            ICONT=1                                                     01 12210
            IF (ICOMNT.GT.10) ICOMNT=10                                 01 12220
            COMENT(ICOMNT)=CARD(10:80)                                  01 12230
         ENDIF                                                          01 12240
         GOTO 122                                                       01 12250
      ENDIF                                                             01 12260
      IF (CARD(8:8) .EQ. ' ') THEN                                      01 12270
C%%%%%ENDFB                                                             01 12280
         IF(ENDF) CALL CMNTCD(CARD,0,1,'          ',JCONT,NMESS)        01 12290
C^^^^^ENDFB                                                             01 12300
         IF (ICONT .EQ. 1)THEN                                          01 12310
            ICOMNT=ICOMNT+1                                             01 12320
            IF (ICOMNT.GT.10) ICOMNT=10                                 01 12330
            COMENT(ICOMNT)=CARD(10:80)                                  01 12340
         ENDIF                                                          01 12350
         GOTO 122                                                       01 12360
      ENDIF                                                             01 12370
C%%%%%ENDFB                                                             01 12380
      IF(ENDF)THEN                                                      01 12390
         IF(ELEV .GE. 0.)THEN                                           01 12400
            I=2                                                         01 12410
         ELSE                                                           01 12420
            I=0                                                         01 12430
         ENDIF                                                          01 12440
         IF (CARD(6:6) .EQ. ' ' .OR. CARD(6:6) .EQ. '1') THEN           01 12450
            IF(CARD(6:6) .EQ. '1')                                      01 12460
     2        CALL MESSAG(NMESS,1,'OBSOLETE FORMAT')                    01 12470
            CALL CMNTCD(CARD,I,0,'          ',JCONT,NMESS)              01 12480
         ELSE                                                           01 12490
            CALL CMNTCD(CARD,I,1,'          ',JCONT,NMESS)              01 12500
         ENDIF                                                          01 12510
      ENDIF                                                             01 12520
C^^^^^ENDFB                                                             01 12530
      GOTO 122                                                          01 12540
C#####                                                                  01 12550
C                                                                       01 12560
C#####                                                                  01 12570
C  Complete data set has been read --- Begin to prepare outputs         01 12580
C                                                                       01 12590
  357 CONTINUE                                                          01 12600
      CALL ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                         01 12610
      IF(.NOT. ACTIVE) GO TO 100                                        01 12620
      IF (.NOT. (LABEL(1:50) .EQ. ' ')) THEN                            01 12630
         ACTIVE=.FALSE.                                                 01 12640
         IF (INDEX(LABEL(1:79),'DECAY') .EQ. 0)  GO TO 100              01 12650
         IF (RTYP .EQ. 3.0) THEN                                        01 12660
            CARD=SLCARD                                                 01 12670
            CALL                                                        01 12680
     2        PARPRO(PCARD,ENDF,MIRD,MERGE,ARATIO,AQR,DEAC,Q,DQ,        01 12690
     3        QIS,DQIS,RTYP,LPAR,NMESS,NWARN)                           01 12700
C%%%%%MIRD                                                              01 12710
            IF(NISO .GT. 0)THEN                                         01 12720
               ISOREC(NISO,NDK)=-1                                      01 12730
               NISO=NISO-1                                              01 12740
               IF(NISO .GT. 0)THEN                                      01 12750
                  DO 2000 I=NISO,1,-1                                   01 12760
                     IF(ISOREC(I,NDK) .LT. IDREC(NDK))GOTO 2050         01 12770
                     READ(UNIT=MIRDTM,REC=ISOREC(I,NDK))CARD            01 12780
                     CALL GETT12(CARD(40:55),T,DT)                      01 12790
                     IF((T+DT) .LE. 0.1*(MTSEC-MDTSEC))                 01 12800
     2                 ISOREC(I,NDK)=-1                                 01 12810
2000              CONTINUE                                              01 12820
2050              CONTINUE                                              01 12830
                  I=1                                                   01 12840
2100              CONTINUE                                              01 12850
                  IF(I .GT. NISO)GOTO 2200                              01 12860
                  IF(ISOREC(I,NDK) .LE. 0)THEN                          01 12870
                     IF(I .LT. NISO)THEN                                01 12880
                        DO 2150 J=I+1,NISO                              01 12890
                           ISOREC(I,NDK)=ISOREC(J,NDK)                  01 12900
2150                    CONTINUE                                        01 12910
                     ENDIF                                              01 12920
                     NISO=NISO-1                                        01 12930
                  ELSE                                                  01 12940
                     I=I+1                                              01 12950
                  ENDIF                                                 01 12960
                  GOTO 2100                                             01 12970
2200              CONTINUE                                              01 12980
               ENDIF                                                    01 12990
            ENDIF                                                       01 13000
C^^^^^MIRD                                                              01 13010
C%%%%%ENDFB                                                             01 13020
            IF(ENDF)THEN                                                01 13030
               LIS=MAX0(LEVNUM,LIS)                                     01 13040
               LISO=MAX0(METNUM,LISO)                                   01 13050
               ENDQ(NDK)=Q                                              01 13060
               ENDDQ(NDK)=DQ                                            01 13070
            ENDIF                                                       01 13080
C^^^^^ENDFB                                                             01 13090
         ENDIF                                                          01 13100
C%%%%%ENDFB                                                             01 13110
        IF(ENDF)THEN                                                    01 13120
           IF(ELEV .LE. Q/2000.)CALL WARNNG(NWARN,                      01 13130
     2       'POSSIBLE "PANDEMONIUM EFFECT"')                           01 13140
        ENDIF                                                           01 13150
C^^^^^ENDFB                                                             01 13160
         SUMIE(10)=SUMIE(10)+BRN*Q/10.                                  01 13170
         DSUMIE(10)=DSUMIE(10)+(BRN*DQ/10.)**2+(Q*DBRN/10.)**2          01 13180
         IF (MERGE.EQ.1) GO TO 122                                      01 13190
      ENDIF                                                             01 13200
  365    CONTINUE                                                       01 13210
C                                                                       01 13220
C  Calculate the continua associated with B+- decay and EC decay        01 13230
        IF(SPECTR .AND. (NB .GT. 0 .OR. NK1 .GT. 0 .OR. NE .GT. 0))THEN 01 13240
C%%%%%SPECTR                                                            01 13250
           WRITE(IREPT,FMT='(1H0,A)')'   SPECTRA CALCULATION SUMMARY'   01 13260
C%%%%%BREMST                                                            01 13270
           IF(BREMS)CALL GRIDIB(NE,NK1,NB,IZDP)                         01 13280
C^^^^^BREMST                                                            01 13290
           IF(NB .GT. 0)THEN                                            01 13300
              WRITE(IREPT,*)'         B- AND IB'                        01 13310
              CALL BMCONT(NB,IZDB,ADB,NWARN,BREMS)                      01 13320
C       Rebin data based on comparison to RIMIN                         01 13330
C         Keep more detailed information for ENDF to compensate for     01 13340
C         approximations incurred in representing the continua          01 13350
              IF((NGRIDM .GT. 2 .AND. RIMIN .GT. 0.) .AND. .NOT. ENDF)  01 13360
     2          CALL REBIN(NGRIDM,EBMS,EBARMS,DEBRMS,RIBMS,DRIBMS,RIMIN)01 13370
           ENDIF                                                        01 13380
           IF(NK1 .GT. 0)THEN                                           01 13390
              WRITE(IREPT,*)'         B+ AND IB'                        01 13400
              CALL BPCONT(NE,IZDP,ADP,NWARN,BREMS)                      01 13410
C       Rebin data based on comparison to RIMIN                         01 13420
              IF((NGRIDP .GT. 2 .AND. RIMIN .GT. 0.) .AND. .NOT. ENDF)  01 13430
     2          CALL REBIN(NGRIDP,EBPS,EBARPS,DEBRPS,RIBPS,DRIBPS,RIMIN)01 13440
           ENDIF                                                        01 13450
           IF(BREMS .AND. NE .GT. 0)THEN                                01 13460
C%%%%%BREMST                                                            01 13470
              WRITE(IREPT,*)'         IB FROM ELECTRON CAPTURE'         01 13480
              CALL ECCONT(NK1,NE,IZDP,ADP)                              01 13490
C^^^^^BREMST                                                            01 13500
           ENDIF                                                        01 13510
C    Convert IB grid energies back to keV and normalize IB average energ01 13520
C      to keV/Decay                                                     01 13530
           IF(BREMS .AND. NGRIDI .GT. 0)THEN                            01 13540
C%%%%%BREMST                                                            01 13550
              DO 400 I=1,NGRIDI                                         01 13560
                 EBIS(I)=1000.*EBIS(I)                                  01 13570
                 EBARIS(I)=EBARIS(I)/100.                               01 13580
                 DEBRIS(I)=DEBRIS(I)/100.                               01 13590
400           CONTINUE                                                  01 13600
C       Rebin data based on comparison to RIMIN                         01 13610
              IF((NGRIDI .GT. 2 .AND. RIMIN .GT. 0.) .AND. .NOT. ENDF)  01 13620
     2          CALL REBIN(NGRIDI,EBIS,EBARIS,DEBRIS,RIBIS,DRIBIS,RIMIN)01 13630
C^^^^^BREMST                                                            01 13640
           ENDIF                                                        01 13650
           WRITE(IREPT,FMT='(//)')                                      01 13660
        ELSE                                                            01 13670
C  Make sure continua arrays are properly zeroed                        01 13680
           IF(NGRIDM .GT. 0)THEN                                        01 13690
              CALL ZERO8(NGRIDM,EBMS)                                   01 13700
              CALL ZERO8(NGRIDM,RIBMS)                                  01 13710
              CALL ZERO8(NGRIDM,DRIBMS)                                 01 13720
              CALL ZERO8(NGRIDM,EBARMS)                                 01 13730
              CALL ZERO8(NGRIDM,DEBRMS)                                 01 13740
              NGRIDM=0                                                  01 13750
           ENDIF                                                        01 13760
           IF(NGRIDP .GT. 0)THEN                                        01 13770
              CALL ZERO8(NGRIDP,EBPS)                                   01 13780
              CALL ZERO8(NGRIDP,RIBPS)                                  01 13790
              CALL ZERO8(NGRIDP,DRIBPS)                                 01 13800
              CALL ZERO8(NGRIDP,EBARPS)                                 01 13810
              CALL ZERO8(NGRIDP,DEBRPS)                                 01 13820
              NGRIDP=0                                                  01 13830
           ENDIF                                                        01 13840
C%%%%%BREMST                                                            01 13850
           IF(NGRIDI .GT. 0)THEN                                        01 13860
              CALL ZERO8(NGRIDI,EBIS)                                   01 13870
              CALL ZERO8(NGRIDI,RIBIS)                                  01 13880
              CALL ZERO8(NGRIDI,DRIBIS)                                 01 13890
              CALL ZERO8(NGRIDI,EBARIS)                                 01 13900
              CALL ZERO8(NGRIDI,DEBRIS)                                 01 13910
              NGRIDI=0                                                  01 13920
           ENDIF                                                        01 13930
C^^^^^BREMST                                                            01 13940
C^^^^^SPECTR                                                            01 13950
        ENDIF                                                           01 13960
C                                                                       01 13970
      IF(.NOT.MIRD)CALL STORE(ARATIO,ENDF,WMASSB,BREMS,NDK,NMESS,TMA,   01 13980
     2  E,DE,RI,DRI,EX,DEX,KSAVE,BADDAT)                                01 13990
C                                                                       01 14000
         IF(NTOP .GT. 0 .AND. .NOT.MIRD)                                01 14010
     2     CALL SOMIT(NDK,NTOP,E,RI)                                    01 14020
C                                                                       01 14030
C%%%%%ENDFB                                                             01 14040
        IF(ENDF) THEN                                                   01 14050
         IF(.NOT.BADDAT)THEN                                            01 14060
           IF(MAT .NE. 0)MAT=MAT+1                                      01 14070
           CALL ENDSRT(NDK)                                             01 14080
           CALL ENDOUT(DAET,VERNO,WMASSB,SPECTR,BREMS,NMESS,QIS)        01 14090
           CALL ENDSET                                                  01 14100
         ELSE                                                           01 14110
            WRITE(ITRMOU,FMT='(3(1X,A/))')'*****',                      01 14120
     2        '*****BAD ENERGY MISMATCH. ENDF output suppressed*****',  01 14130
     3        '*****'                                                   01 14140
         ENDIF                                                          01 14150
        ENDIF                                                           01 14160
C^^^^^ENDFB                                                             01 14170
C                                                                       01 14180
C%%%%%MEDOUT&NUDOUT                                                     01 14190
        IF((ENSDF .OR. NUDAT) .AND. NTOP .GT. 0)THEN                    01 14200
           NTOPNE=NTOP+NE                                               01 14210
           CALL SRTPRE(NDK,NTOP,NTOPNE,E,DE,RI,DRI,EX,DEX,KSAVE,IPOST,  01 14220
     2       DUM,IDUM)                                                  01 14230
           CALL SRTMED(NDK,NTOP,E,DE,RI,DRI,KSAVE,IPOST,DUM,IDUM)       01 14240
        ENDIF                                                           01 14250
C^^^^^MEDOUT&NUDOUT                                                     01 14260
C                                                                       01 14270
C%%%%%MEDOUT                                                            01 14280
        IF(ENSDF .AND. NTOP .GT. 0) THEN                                01 14290
         IF(BADDAT)WRITE(IENSDF,FMT='(1H1,A/2(1X,A/))')'*****',         01 14300
     2        '*****BAD ENERGY MISMATCH for following data*****',       01 14310
     3        '*****'                                                   01 14320
           CALL MEDOUT(NDK,NTOP,MAXEC,Z,E,DE,RI,DRI,EX,DEX,KSAVE,IPOST, 01 14330
     2       BREMS)                                                     01 14340
        ENDIF                                                           01 14350
C^^^^^MEDOUT                                                            01 14360
C                                                                       01 14370
C%%%%%NUDOUT                                                            01 14380
        IF(NUDAT .AND. NTOP .GT. 0) THEN                                01 14390
         IF(.NOT.BADDAT)THEN                                            01 14400
           CALL NUDOUT(Z,NTB,NTP,TPI,NTOP,NDK,E,DE,RI,DRI,EX,DEX,KSAVE, 01 14410
     2       IPOST)                                                     01 14420
         ELSE                                                           01 14430
            WRITE(ITRMOU,FMT='(3(1X,A/))')'*****',                      01 14440
     2        '*****BAD ENERGY MISMATCH. NUDAT output suppressed*****', 01 14450
     3        '*****'                                                   01 14460
         ENDIF                                                          01 14470
        ENDIF                                                           01 14480
C^^^^^NUDOUT                                                            01 14490
C%%%%%MIRD                                                              01 14500
      IF(MIRD .AND. NA+NB+NE+NG .GT. 0)CALL MIRTAB(NDK,RTYPE,ARATIO)    01 14510
C^^^^^MIRD                                                              01 14520
C                                                                       01 14530
      IF(.NOT. MIRD)THEN                                                01 14540
         DO 900 I=1,5                                                   01 14550
            IF(NOMIT(I) .NE. 0)WRITE(ITRMOU,                            01 14560
     2        FMT='(13X,I4,6H Weak ,A,16Hs omitted (SUM(I,A,3H) =,      01 14570
     3        F8.3,2H%))') NOMIT(I),OMITCH(I)(:LENSTR(OMITCH(I))),      01 14580
     4        OMITCH(I)(:LENSTR(OMITCH(I))),OMIT(I)                     01 14590
900      CONTINUE                                                       01 14600
      ENDIF                                                             01 14610
      GO TO 100                                                         01 14620
C                                                                       01 14630
910   CALL MESSAG(NMESS,1,'NO "2 '//CARD(8:8)//'" CARD')                01 14640
      CARD=CARD2                                                        01 14650
      GO TO 123                                                         01 14660
C                                                                       01 14670
  500 CONTINUE                                                          01 14680
C%%%%%ENDFB                                                             01 14690
      IF(ENDF)WRITE(IENDF,FMT='(66X,4H  -1,10(1H ))')                   01 14700
C^^^^^ENDFB                                                             01 14710
      IF(.NOT. ACTIVE)THEN                                              01 14720
         WRITE(IREPT,*)' NORMAL PROGRAM END'                            01 14730
      ELSE                                                              01 14740
         WRITE(IREPT,*)' ABNORMAL PROGRAM END'                          01 14750
         WRITE(ITRMOU,*)' ABNORMAL PROGRAM END'                         01 14760
      ENDIF                                                             01 14770
        IF(NWARN .NE. 0) WRITE(ITRMOU,*)                                01 14780
     2    '               ',NWARN,' WARNINGS'                           01 14790
        IF(NMESS .NE. 0) WRITE(ITRMOU,*)                                01 14800
     2    '               ',NMESS,' MESSAGES'                           01 14810
        IF(LMERGE) WRITE(ITRMOU,*)' ENDING MERGE OF DATA SETS'          01 14820
      WRITE(IREPT,FMT='(2(1H0,3(1X,A80/)))')(AKNOW(I),I=1,3),           01 14830
     2  (DISCL(I),I=1,3)                                                01 14840
      WRITE(ITRMOU,FMT='(1H0,6(1X,A79/))')(AKNOW(I),I=1,3),             01 14850
     2  (DISCL(I),I=1,3)                                                01 14860
C%%%%%MEDOUT                                                            01 14870
      IF(ENSDF)                                                         01 14880
     2   WRITE(IENSDF,FMT='(1H1,3(1X,A80/),1H0,3(1X,A80/))')            01 14890
     3     (AKNOW(I),I=1,3),(DISCL(I),I=1,3)                            01 14900
C^^^^^MEDOUT                                                            01 14910
C                                                                       01 14920
      END                                                               01 14930
C=====  General Routines                                                02 00010
C-----  Finish Processing Of Datasets Which Cannot Produce Radiations   02 00020
        SUBROUTINE ABORT(NCARD,PCARD,RTYP,ACTIVE,MERGE)                 02 00030
C                                                                       02 00040
C       Aborts processing of current data set if first data record found02 00050
C         and NORMALIZATION or PARENT not defined                       02 00060
C                                                                       02 00070
C                                                                       02 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************02 00090
C*                           Present Code                               02 00100
C*                           ------------                               02 00110
C*  DUMP                                                                02 00120
C*                                                                      02 00130
C***********************************************************************02 00140
C                                                                       02 00150
        INTEGER ITRMOU,IREPT                                            02 00160
        COMMON /TTYUNT/ITRMOU                                           02 00170
        COMMON /RPTUNT/IREPT                                            02 00180
C                                                                       02 00190
        REAL RTYP                                                       02 00200
        LOGICAL NCARD,PCARD,ACTIVE,MERGE                                02 00210
C                                                                       02 00220
        IF(.NOT. NCARD) THEN                                            02 00230
            IF(.NOT. MERGE)THEN                                         02 00240
               WRITE(IREPT,1)'NORMALIZATION'                            02 00250
               WRITE(ITRMOU,1)'NORMALIZATION'                           02 00260
            ELSE                                                        02 00270
               WRITE(IREPT,2)'NORMALIZATION'                            02 00280
               WRITE(ITRMOU,2)'NORMALIZATION'                           02 00290
            ENDIF                                                       02 00300
           ACTIVE=.FALSE.                                               02 00310
           CALL DUMP(MERGE)                                             02 00320
           RETURN                                                       02 00330
        ENDIF                                                           02 00340
        IF (.NOT. ((PCARD).OR.(RTYP.EQ.3.))) THEN                       02 00350
            IF(.NOT. MERGE)THEN                                         02 00360
               WRITE(IREPT,1)'PARENT OR INCOMPLETE PARENT'              02 00370
               WRITE(ITRMOU,1)'PARENT OR INCOMPLETE PARENT'             02 00380
            ELSE                                                        02 00390
               WRITE(IREPT,2)'NORMALIZATION'                            02 00400
               WRITE(ITRMOU,2)'NORMALIZATION'                           02 00410
            ENDIF                                                       02 00420
           ACTIVE=.FALSE.                                               02 00430
           CALL DUMP(MERGE)                                             02 00440
           RETURN                                                       02 00450
        ENDIF                                                           02 00460
1       FORMAT(20X,31H  REST OF DATA SET SKIPPED, NO ,A,7H RECORD/)     02 00470
2     FORMAT(20X,'  REST OF DATA TO ENDMERGE SKIPPED, NO ',A,' RECORD'/)02 00480
        RETURN                                                          02 00490
        END                                                             02 00500
C                                                                       03 00010
        SUBROUTINE DUMP(MERGE)                                          03 00020
C                                                                       03 00030
C       Reads reminder of current data set when processing terminated   03 00040
C                                                                       03 00050
        LOGICAL MERGE                                                   03 00060
C                                                                       03 00070
        CHARACTER*80 CARD                                               03 00080
        COMMON /CARDS/CARD                                              03 00090
C                                                                       03 00100
        INTEGER IREPT,IDATA                                             03 00110
        COMMON /RPTUNT/IREPT                                            03 00120
        COMMON /DATUNT/IDATA                                            03 00130
C                                                                       03 00140
100     READ(IDATA,FMT='(A)',END=1000)CARD                              03 00150
        IF(.NOT. MERGE .AND. CARD(1:20) .EQ. ' ')THEN                   03 00160
           WRITE(IREPT,*)' '                                            03 00170
           RETURN                                                       03 00180
        ENDIF                                                           03 00190
        IF(MERGE .AND. CARD(1:5) .EQ. 'ENDME')THEN                      03 00200
           WRITE(IREPT,*)' '                                            03 00210
           RETURN                                                       03 00220
        ENDIF                                                           03 00230
        GOTO 100                                                        03 00240
1000    RETURN                                                          03 00250
        END                                                             03 00260
C-----                                                                  04 00010
C-----  Output Warnings and Messages to the Report File                 04 00020
        SUBROUTINE WARNNG(NWARN,A)                                      04 00030
C                                                                       04 00040
        INTEGER IREPT                                                   04 00050
        COMMON /RPTUNT/IREPT                                            04 00060
C                                                                       04 00070
        INTEGER NWARN                                                   04 00080
        CHARACTER A*(*)                                                 04 00090
C                                                                       04 00100
        WRITE(IREPT,FMT='(15H *****WARNING: ,A,6H *****)') A            04 00110
        NWARN=NWARN+1                                                   04 00120
        RETURN                                                          04 00130
        END                                                             04 00140
C                                                                       05 00010
        SUBROUTINE MESSAG(NMESS,I,A)                                    05 00020
C                                                                       05 00030
        INTEGER IREPT                                                   05 00040
        COMMON /RPTUNT/IREPT                                            05 00050
C                                                                       05 00060
        INTEGER NMESS,I                                                 05 00070
        CHARACTER A*(*)                                                 05 00080
C                                                                       05 00090
        CHARACTER*12 FORM(5)                                            05 00100
        DATA FORM/'(1H+,90X,A)','(1H+,85X,A)','(1H+,111X,A)',           05 00110
     2    '(1H+,106X,A)','(1H+,121X,A)'/                                05 00120
        WRITE(IREPT,FORM(I)) A                                          05 00130
        NMESS=NMESS+1                                                   05 00140
        RETURN                                                          05 00150
        END                                                             05 00160
C-----                                                                  06 00010
C-----  General Storage Subroutines                                     06 00020
        SUBROUTINE SOMIT(NDK,NTOP,E,RI)                                 06 00030
C                                                                       06 00040
C       Stores omitted radiations whose individual intensities are less 06 00050
C       than RIMIN                                                      06 00060
C                                                                       06 00070
        INTEGER NDK,NTOP                                                06 00080
        REAL E(NTOP),RI(NTOP)                                           06 00090
C                                                                       06 00100
        INTEGER NA,NB,NE,NK1,NG                                         06 00110
        COMMON /COUNTS/ NA,NB,NE,NK1,NG                                 06 00120
C                                                                       06 00130
        INTEGER NOMIT(5),IALLG                                          06 00140
        REAL EOMIT(5),OMIT(5),RIMIN                                     06 00150
        COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                     06 00160
C                                                                       06 00170
        INTEGER I,NLOW,NHIGH                                            06 00180
                                                                        06 00190
C                                                                       06 00200
C  Alpha radiations --- I=1                                             06 00210
C    Already accounted for in ALPPRO                                    06 00220
C  B- and B+ radiations --- I=2                                         06 00230
C    Already accounted for in BETPRO and ECPRO                          06 00240
C  Conversion and Auger electrons --- I=3                               06 00250
        IF(NG+NE .GT. 0)THEN                                            06 00260
           DO 100 I=1,2*NDK                                             06 00270
              IF(RI(I) .LT. RIMIN)THEN                                  06 00280
C                     Exclude Augers with RI identically equal to 0     06 00290
                 IF(RI(I) .NE. 0.)THEN                                  06 00300
                    NOMIT(3)=NOMIT(3)+1                                 06 00310
                    OMIT(3)=OMIT(3)+RI(I)                               06 00320
                    EOMIT(3)=EOMIT(3)+E(I)*RI(I)                        06 00330
                 ENDIF                                                  06 00340
              ENDIF                                                     06 00350
100        CONTINUE                                                     06 00360
        ENDIF                                                           06 00370
        IF(NG .GT. 0)THEN                                               06 00380
           NLOW=2*NDK+1                                                 06 00390
           NHIGH=2*NDK+5*NG                                             06 00400
           DO 150 I=NLOW,NHIGH                                          06 00410
              IF(RI(I) .LT. RIMIN)THEN                                  06 00420
C                     Exclude ce's with RI identically equal to 0       06 00430
                 IF(RI(I) .NE. 0.)THEN                                  06 00440
                    NOMIT(3)=NOMIT(3)+1                                 06 00450
                    OMIT(3)=OMIT(3)+RI(I)                               06 00460
                    EOMIT(3)=EOMIT(3)+E(I)*RI(I)                        06 00470
                 ENDIF                                                  06 00480
              ENDIF                                                     06 00490
150        CONTINUE                                                     06 00500
        ENDIF                                                           06 00510
C           GAMMAS --- I=4                                              06 00520
        IF(NG .GT. 0)THEN                                               06 00530
           NLOW=2*NDK+5*NG+NA+NB+NK1+1                                  06 00540
           NHIGH=NLOW+NG-1                                              06 00550
           DO 200 I=NLOW,NHIGH                                          06 00560
              IF(RI(I) .LT. RIMIN .AND. IALLG .EQ. 0)THEN               06 00570
                 NOMIT(4)=NOMIT(4)+1                                    06 00580
                 OMIT(4)=OMIT(4)+RI(I)                                  06 00590
                 EOMIT(4)=EOMIT(4)+E(I)*RI(I)                           06 00600
              ENDIF                                                     06 00610
200        CONTINUE                                                     06 00620
        ENDIF                                                           06 00630
C                Also include X rays                                    06 00640
        IF(NG+NE .GT. 0)THEN                                            06 00650
           NLOW=1                                                       06 00660
           NHIGH=2*NDK+5*NG                                             06 00670
           DO 300 I=NLOW,NHIGH                                          06 00680
              IF(RI(I) .LT. RIMIN .AND. IALLG .EQ. 0)THEN               06 00690
C                     Exclude X rays with RI identically equal to 0     06 00700
                 IF(RI(I) .NE. 0.)THEN                                  06 00710
                    NOMIT(4)=NOMIT(4)+1                                 06 00720
                    OMIT(4)=OMIT(4)+RI(I)                               06 00730
                    EOMIT(4)=EOMIT(4)+E(I)*RI(I)                        06 00740
                 ENDIF                                                  06 00750
              ENDIF                                                     06 00760
300        CONTINUE                                                     06 00770
        ENDIF                                                           06 00780
C  Electron captures --- I=5                                            06 00790
C    Already accounted for in ECPRO                                     06 00800
C                                                                       06 00810
C  Get average energies                                                 06 00820
        DO 400 I=1,4                                                    06 00830
           IF(OMIT(I) .GT. 0.) EOMIT(I)=EOMIT(I)/OMIT(I)                06 00840
400     CONTINUE                                                        06 00850
        RETURN                                                          06 00860
        END                                                             06 00870
C                                                                       07 00010
      SUBROUTINE                                                        07 00020
     2  STORE(ARATIO,ENDF,WMASSB,BREMS,NDK,NMESS,TMA,E,DE,RI,DRI,EX,DEX,07 00030
     3  KSAVE,BADDAT)                                                   07 00040
C                                                                       07 00050
C    Based on ORNL-NDP subroutine STORE in MEDLIST PROGAM [5-MAY-78]    07 00060
C                                                                       07 00070
C    Places all data into a list in the following order                 07 00080
C      Auger-K and Auger-L                                              07 00090
C      Conversion electrons--all K, then all L, all M, all N+           07 00100
C      Alpha                                                            07 00110
C      B-                                                               07 00120
C      B+                                                               07 00130
C      Gammas                                                           07 00140
C      X rays--KA1,KA2,KB,L                                             07 00150
C      Electron capture--all K, then all L, all M, all N+, and totals   07 00160
C                                                                       07 00170
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************07 00180
C*                           Present Code                               07 00190
C*                           ------------                               07 00200
C*  AMASS   SORT21  TRADE4  TRADE8                                      07 00210
C*                                                                      07 00220
C*                           F77STR  4(2)                               07 00230
C*                           ------------                               07 00240
C*  LBSUP                                                               07 00250
C*                                                                      07 00260
C*                           NSDCNV  2(03)                              07 00270
C*                           -------------                              07 00280
C*  CNVU2S                                                              07 00290
C*                                                                      07 00300
C*                        FORTRAN 77 Supplied                           07 00310
C*                        -------------------                           07 00320
C*  SQRT                                                                07 00330
C*                                                                      07 00340
C***********************************************************************07 00350
      INTEGER TMA,NDK,KSAVE(TMA),NMESS                                  07 00360
      REAL ARATIO,E(TMA),DE(TMA),RI(TMA),DRI(TMA),EX(TMA),DEX(TMA)      07 00370
      LOGICAL ENDF,WMASSB,BREMS,BADDAT                                  07 00380
C                                                                       07 00390
      INTEGER GMA,AM,MAXDCY,NGRMAX                                      07 00400
      PARAMETER (GMA=999,AM=99,MAXDCY=4,NGRMAX=30)                      07 00410
C                                                                       07 00420
      REAL EA(AM),DEA(AM),IA(AM),DIA(AM)                                07 00430
      COMMON /ADATA/ EA,DEA,IA,DIA                                      07 00440
C                                                                       07 00450
      INTEGER NTB                                                       07 00460
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 07 00470
     2  AVBEX,DAVBX                                                     07 00480
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,NTB07 00490
C                                                                       07 00500
      INTEGER NTP,KLASS(AM)                                             07 00510
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      07 00520
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,07 00530
     3  AVPEX,DAVPX                                                     07 00540
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,07 00550
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP                           07 00560
C                                                                       07 00570
      INTEGER IDECAY(GMA)                                               07 00580
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5),E2I,07 00590
     2  DE2I                                                            07 00600
      COMMON /GDATA/ EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY             07 00610
C                                                                       07 00620
      REAL TERMK(MAXDCY),TERMK1(MAXDCY),TERML(MAXDCY),TERML1(MAXDCY),   07 00630
     2  DTERMK(MAXDCY),DTERML(MAXDCY),DTRMK1(MAXDCY),DTRML1(MAXDCY)     07 00640
      COMMON /XCOM/ TERMK,TERMK1,TERML,TERML1,DTERMK,DTERML,DTRMK1,     07 00650
     2  DTRML1                                                          07 00660
C                                                                       07 00670
      REAL WK(MAXDCY),DWK(MAXDCY),WL(MAXDCY),DWL(MAXDCY),ENKL(MAXDCY),  07 00680
     2  DENKL(MAXDCY),BTOA(MAXDCY),DBTOA(MAXDCY),A2TOA1(MAXDCY),        07 00690
     3  DEA2A1(MAXDCY),BE(MAXDCY,5),DBE(MAXDCY,5),ET(MAXDCY,6),         07 00700
     4  DET(MAXDCY,6)                                                   07 00710
      COMMON /ELCOM/ WK,DWK,WL,DWL,ENKL,DENKL,BTOA,DBTOA,A2TOA1,DEA2A1, 07 00720
     3  BE,DBE,ET,DET                                                   07 00730
C                                                                       07 00740
      REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                      07 00750
      COMMON /AVGS/ SUMIE,DSUMIE,SUMI,DSUMI                             07 00760
C                                                                       07 00770
      INTEGER NA,NB,NE,NK1,NG,NTOP                                      07 00780
      COMMON /COUNTS/ NA,NB,NE,NK1,NG,NTOP                              07 00790
C                                                                       07 00800
                                                                        07 00810
      INTEGER NOMIT(5),IALLG                                            07 00820
      REAL EOMIT(5),OMIT(5),RIMIN                                       07 00830
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                       07 00840
C                                                                       07 00850
      INTEGER LIS,LISO,MAT                                              07 00860
      REAL ZA,TSEC,DTSEC,SPIN,PARITY                                    07 00870
      COMMON /ENDGEN/ZA,TSEC,DTSEC,SPIN,PARITY,LIS,LISO,MAT             07 00880
C                                                                       07 00890
      REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),      07 00900
     2  ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10),ELIS(MAXDCY),   07 00910
     3  ELISO(MAXDCY),RFS(MAXDCY)                                       07 00920
      COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN,ELIS,    07 00930
     3  ELISO,RFS                                                       07 00940
C                                                                       07 00950
      INTEGER NSTYP0                                                    07 00960
      REAL ES0(GMA),DES0(GMA),RS0(GMA),DRS0(GMA),RICC(GMA),DRICC(GMA),  07 00970
     2  RICK(GMA),DRICK(GMA),RICL(GMA),DRICL(GMA),RIS(GMA),DRIS(GMA),   07 00980
     3  RTYP0(GMA),AVE0,DAVE0                                           07 00990
      COMMON /STYP0/ES0,DES0,RS0,DRS0,RICC,DRICC,RICK,DRICK,RICL,DRICL, 07 01000
     2  RIS,DRIS,RTYP0,AVE0,DAVE0,NSTYP0                                07 01010
C                                                                       07 01020
      INTEGER NSTYP1                                                    07 01030
      REAL ES1(AM),DES1(AM),RS1(AM),DRS1(AM),RTYP1(AM),TYP1(AM),AVE1,   07 01040
     2  DAVE1                                                           07 01050
      COMMON /STYP1/ES1,DES1,RS1,DRS1,RTYP1,TYP1,AVE1,DAVE1,NSTYP1      07 01060
C                                                                       07 01070
      INTEGER NSTYP2                                                    07 01080
      REAL ES2(AM),DES2(AM),RS2(AM),DRS2(AM),RIS2(AM),DRIS2(AM),        07 01090
     2  RTYP2(AM),TYP2(AM),AVE2,DAVE2                                   07 01100
      COMMON /STYP2/ES2,DES2,RS2,DRS2,RIS2,DRIS2,RTYP2,TYP2,AVE2,DAVE2, 07 01110
     2  NSTYP2                                                          07 01120
C                                                                       07 01130
      INTEGER IREPT,ITRMOU,IATOMB,IMASSB                                07 01140
      COMMON /RPTUNT/IREPT                                              07 01150
      COMMON /TTYUNT/ITRMOU                                             07 01160
      COMMON /BINDAT/IATOMB,IMASSB                                      07 01170
C                                                                       07 01180
      INTEGER NGRIDI                                                    07 01190
      REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),    07 01200
     2  DEBRIS(NGRMAX),SUMEB,DSUMEB                                     07 01210
      COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS,SUMEB,DSUMEB07 01220
C                                                                       07 01230
      INTEGER I,I1,II,IK,IP1,IS,IZA,J,J1,J2,JJ,K,L,LX,NH1,NH2,NH3,NH4,  07 01240
     2  NHIGH,NLOW                                                      07 01250
      REAL A,AMASS,B,C,D,D1,D2,D3,D4,D5,DRI1,DUM,DX,F,RI1,RI2,X         07 01260
C                                                                       07 01270
      REAL ECKI(1),ECLI(1),ECMI(1),ECMNOI(1),ECNOI(1),DECKI(1),DECLI(1),07 01280
     2  DECMI(1),DECMNI(1),DECNOI(1)                                    07 01290
      EQUIVALENCE (ECKI(1),EC(1,1)),(ECLI(1),EC(1,2)),(ECMI(1),EC(1,3)),07 01300
     2  (ECMNOI(1),EC(1,4)),(ECNOI(1),EC(1,5)),                         07 01310
     3  (DECKI(1),DEC(1,1)),(DECLI(1),DEC(1,2)),(DECMI(1),DEC(1,3)),    07 01320
     4  (DECMNI(1),DEC(1,4)),(DECNOI(1),DEC(1,5))                       07 01330
C                                                                       07 01340
        CHARACTER SX*13,SDX*2                                           07 01350
C                                                                       07 01360
        REAL SQRT                                                       07 01370
        INTRINSIC SQRT                                                  07 01380
        EXTERNAL CNVU2S                                                 07 01390
        EXTERNAL LBSUP                                                  07 01400
C                                                                       07 01410
C  Sort the Gammas now instead of later---Reduces book-keeping          07 01420
C    for conversion electrons                                           07 01430
        IF(NG .GT. 1)THEN                                               07 01440
           DO 120 I=1,NG-1                                              07 01450
              I1=I+1                                                    07 01460
              II=I                                                      07 01470
              DO 110 J=I1,NG                                            07 01480
                 JJ=J                                                   07 01490
                 IF(EG(I) .GT. EG(J))THEN                               07 01500
                    CALL TRADE8(EG,II,JJ)                               07 01510
                    CALL TRADE8(DEG,II,JJ)                              07 01520
                    CALL TRADE8(IG,II,JJ)                               07 01530
                    CALL TRADE8(DIG,II,JJ)                              07 01540
                    CALL TRADE4(IDECAY,II,JJ)                           07 01550
                    DO 100 K=1,5                                        07 01560
                       X=ICE(I,K)                                       07 01570
                       DX=DICE(I,K)                                     07 01580
                       ICE(I,K)=ICE(J,K)                                07 01590
                       DICE(I,K)=DICE(J,K)                              07 01600
                       ICE(J,K)=X                                       07 01610
                       DICE(J,K)=DX                                     07 01620
100                 CONTINUE                                            07 01630
                 ENDIF                                                  07 01640
110           CONTINUE                                                  07 01650
120        CONTINUE                                                     07 01660
        ENDIF                                                           07 01670
C                                                                       07 01680
C  E2I saves product E*E*I for recoil correction of gammas              07 01690
C                                                                       07 01700
      E2I=0.0                                                           07 01710
      DE2I=0.0                                                          07 01720
C                                                                       07 01730
      NTOP=0                                                            07 01740
      NHIGH=0                                                           07 01750
C                                                                       07 01760
         SUMIE(3)=0.                                                    07 01770
         SUMI(3)=0.                                                     07 01780
         DSUMIE(3)=0.                                                   07 01790
         DSUMI(3)=0.                                                    07 01800
      IF(NG+NE .GT. 0)THEN                                              07 01810
C           If there are any G or E records, calculate Auger intensities07 01820
C              and place them in the first two positions of the list    07 01830
         DO 150 I=1,NDK                                                 07 01840
            RI(2*I-1)=(TERMK(I)+TERMK1(I))*(1.-WK(I))                   07 01850
            NTOP=NTOP+1                                                 07 01860
            B=(TERMK(I)+TERMK1(I))**2                                   07 01870
            C=(DWK(I)/(1.0-WK(I)))**2                                   07 01880
            IF (B.NE.0.)THEN                                            07 01890
               A=DTERMK(I)**2+DTRMK1(I)**2                              07 01900
               B=A/B                                                    07 01910
            ENDIF                                                       07 01920
            E(2*I-1)=ET(I,1)                                            07 01930
            DE(2*I-1)=DET(I,1)                                          07 01940
            IF(ET(I,1) .GT. 0.)THEN                                     07 01950
               DRI(2*I-1)=RI(2*I-1)*SQRT(B+C)                           07 01960
            ELSE                                                        07 01970
               RI(2*I-1)=0.                                             07 01980
            ENDIF                                                       07 01990
            SUMIE(3)=SUMIE(3)+E(2*I-1)*RI(2*I-1)                        07 02000
            SUMI(3)=SUMI(3)+RI(2*I-1)                                   07 02010
            DSUMIE(3)=DSUMIE(3)+(RI(2*I-1)*DE(2*I-1))**2 +              07 02020
     2        +(DRI(2*I-1)*E(2*I-1))**2                                 07 02030
            DSUMI(3)=DSUMI(3)+DRI(2*I-1)**2                             07 02040
            C=(DWL(I)/(1.0-WL(I)))**2                                   07 02050
            F=(TERML1(I)+TERML(I)+(TERMK(I)+TERMK1(I))*ENKL(I))**2      07 02060
            RI(2*I)=(TERML1(I)+TERML(I)+(TERMK(I)+TERMK1(I))            07 02070
     2        *ENKL(I))*(1.0-WL(I))                                     07 02080
            NTOP=NTOP+1                                                 07 02090
            IF (F.NE.0.)THEN                                            07 02100
               A=DTERML(I)**2+DTRML1(I)**2                              07 02110
               B=(ENKL(I)**2)*(DTERMK(I)**2+DTRMK1(I)**2)               07 02120
               D=((TERMK(I)+TERMK1(I))*DENKL(I))**2                     07 02130
               F=(A+B+D)/F                                              07 02140
            ENDIF                                                       07 02150
            E(2*I)=ET(I,2)                                              07 02160
            DE(2*I)=DET(I,2)                                            07 02170
            IF(ET(I,2) .GT. 0.)THEN                                     07 02180
               DRI(2*I)=RI(2*I)*SQRT(F+C)                               07 02190
            ELSE                                                        07 02200
               RI(2*I)=0.                                               07 02210
            ENDIF                                                       07 02220
            SUMIE(3)=SUMIE(3)+E(2*I)*RI(2*I)                            07 02230
            SUMI(3)=SUMI(3)+RI(2*I)                                     07 02240
            DSUMIE(3)=DSUMIE(3)+(RI(2*I)*DE(2*I))**2+                   07 02250
     2        (DRI(2*I)*E(2*I))**2                                      07 02260
            DSUMI(3)=DSUMI(3)+DRI(2*I)**2                               07 02270
            KSAVE(2*I-1)=-1                                             07 02280
            KSAVE(2*I)=-2                                               07 02290
150      CONTINUE                                                       07 02300
      ENDIF                                                             07 02310
      NHIGH=NTOP                                                        07 02320
C  Store the number of cases of EC, Gamma, EC with B+, A                07 02330
      SUMIE(2)=AVBEX+AVPEX                                              07 02340
      IF(ENDF)THEN                                                      07 02350
         AVE1=10.*AVBEX                                                 07 02360
         DAVE1=10.*SQRT(DAVBX)                                          07 02370
         AVE2=10.*AVPEX                                                 07 02380
         DAVE2=10.*SQRT(DAVPX)                                          07 02390
      ENDIF                                                             07 02400
      IF (TBI .NE. 0.)AVBEX=AVBEX/TBI                                   07 02410
      IF (TPI .NE. 0.)AVPEX=AVPEX/TPI                                   07 02420
      IF (NG .GT. 0) THEN                                               07 02430
C  Save conversion electrons                                            07 02440
         NLOW=NHIGH+1                                                   07 02450
         NHIGH=NHIGH+NG                                                 07 02460
         J=0                                                            07 02470
         DO 200 I=NLOW,NHIGH                                            07 02480
            J=J+1                                                       07 02490
            DO 190  L=1,5                                               07 02500
            LX=I+NG*(L-1)                                               07 02510
            E(LX)=EG(J)-BE(IDECAY(J),L)                                 07 02520
            DE(LX)=SQRT(DEG(J)**2+DBE(IDECAY(J),L)**2)                  07 02530
            IF(DEG(J) .EQ. 0.)DE(LX)=0.                                 07 02540
            RI(LX)=ICE(J,L)                                             07 02550
            DRI(LX)=DICE(J,L)                                           07 02560
            NTOP=NTOP+1                                                 07 02570
            SUMIE(3)=SUMIE(3)+E(LX)*RI(LX)                              07 02580
            DSUMIE(3)=DSUMIE(3)+(RI(LX)*DE(LX))**2                      07 02590
     2        +(DRI(LX)*E(LX))**2                                       07 02600
            SUMI(3)=SUMI(3)+RI(LX)                                      07 02610
            DSUMI(3)=DSUMI(3)+DRI(LX)**2                                07 02620
C       Save associated gamma number and type of conversion electron    07 02630
            KSAVE(LX)=10*J+L                                            07 02640
C                    Gamma  Type                                        07 02650
190         CONTINUE                                                    07 02660
200      CONTINUE                                                       07 02670
         NHIGH=NTOP                                                     07 02680
      ENDIF                                                             07 02690
C                                                                       07 02700
C  Save Alpha energies and intensities                                  07 02710
      IF (NA .GT. 0) THEN                                               07 02720
         NLOW= NHIGH+1                                                  07 02730
         NHIGH=NHIGH+NA                                                 07 02740
         J=0                                                            07 02750
         DO 250  I=NLOW,NHIGH                                           07 02760
            J=J+1                                                       07 02770
            E(I)=EA(J)                                                  07 02780
            DE(I)=DEA(J)                                                07 02790
            RI(I)=IA(J)                                                 07 02800
            DRI(I)=DIA(J)                                               07 02810
            NTOP=NTOP+1                                                 07 02820
250      CONTINUE                                                       07 02830
      ENDIF                                                             07 02840
C                                                                       07 02850
C  Save B- energies, average E's, and intensities                       07 02860
      IF(NB .GT. 0) THEN                                                07 02870
         NLOW=NHIGH+1                                                   07 02880
         NHIGH=NHIGH+NB                                                 07 02890
         J=0                                                            07 02900
         DAVBX=0.                                                       07 02910
         DO 300 I=NLOW,NHIGH                                            07 02920
            J=J+1                                                       07 02930
C    Use intensity-weighted average relative uncertainty                07 02940
C      in each EAV(I) as relative uncertainty in total EAV              07 02950
            IF (EVM(J) .NE. 0.)  DAVBX=DAVBX+BMI(J)*DEVM(J)/EVM(J)      07 02960
            DTBI=DTBI+DBMI(J)**2                                        07 02970
            EX(I)=BME(J)                                                07 02980
            E(I)=EVM(J)                                                 07 02990
            RI(I)=BMI(J)                                                07 03000
            NTOP=NTOP+1                                                 07 03010
            DEX(I)=DBME(J)                                              07 03020
            DE(I)=DEVM(J)                                               07 03030
            DRI(I)=DBMI(J)                                              07 03040
300      CONTINUE                                                       07 03050
         DTBI=SQRT(DTBI)                                                07 03060
         IF (TBI .NE. 0.)  DAVBX=AVBEX*DAVBX/TBI                        07 03070
         IF(NB .GT. 1)THEN                                              07 03080
            NHIGH=NHIGH+1                                               07 03090
            NB=NB+1                                                     07 03100
            NTB=NHIGH                                                   07 03110
            NTOP=NTOP+1                                                 07 03120
            EX(NHIGH)=0.                                                07 03130
            DEX(NHIGH)=0.                                               07 03140
            E(NHIGH)=AVBEX                                              07 03150
            DE(NHIGH)=DAVBX                                             07 03160
            DRI(NHIGH)=DTBI                                             07 03170
            RI(NHIGH)= TBI                                              07 03180
            NHIGH=NTOP                                                  07 03190
         ENDIF                                                          07 03200
      ENDIF                                                             07 03210
      IF(NE .GT. 0)THEN                                                 07 03220
         J1=0                                                           07 03230
         J2=NE+1                                                        07 03240
         I=0                                                            07 03250
         DAVPX=0.                                                       07 03260
350      I=I+1                                                          07 03270
         IF (I .LT. J2)THEN                                             07 03280
C             Separate EC/B+ records from EC-only records               07 03290
C               If positrons possible, store values at 'TOP' of list    07 03300
            IF (KLASS(I) .EQ. 1)THEN                                    07 03310
               J1=J1+1                                                  07 03320
               J=J1                                                     07 03330
               IS=I                                                     07 03340
            ELSE                                                        07 03350
C             If positrons are not possible, store values in 'BOTTOM'   07 03360
C               PART OF LIST                                            07 03370
               IF (KLASS(I).NE.2)  GO TO 350                            07 03380
               J2=J2-1                                                  07 03390
               J=J2                                                     07 03400
               IS=I - 1                                                 07 03410
            ENDIF                                                       07 03420
            CALL TRADE8(EBP,I,J)                                        07 03430
            CALL TRADE8(EVP,I,J)                                        07 03440
            CALL TRADE8(PINT,I,J)                                       07 03450
            CALL TRADE8(EECA,I,J)                                       07 03460
            CALL TRADE8(ECAI,I,J)                                       07 03470
            CALL TRADE8(DEBP,I,J)                                       07 03480
            CALL TRADE8(DEVP,I,J)                                       07 03490
            CALL TRADE8(DPINT,I,J)                                      07 03500
            CALL TRADE8(DEECA,I,J)                                      07 03510
            CALL TRADE8(DECAI,I,J)                                      07 03520
            DO 400 K=1,5                                                07 03530
               A=EC(J,K)                                                07 03540
               EC(J,K)=EC(I,K)                                          07 03550
               EC(I,K)=A                                                07 03560
               A=DEC(J,K)                                               07 03570
               DEC(J,K)=DEC(I,K)                                        07 03580
               DEC(I,K)=A                                               07 03590
400         CONTINUE                                                    07 03600
            IK=KLASS(J)                                                 07 03610
            KLASS(J)=KLASS(I)                                           07 03620
            KLASS(I)=IK                                                 07 03630
            IF (EVP(J) .NE. 0.)  DAVPX=DAVPX+PINT(J)*DEVP(J)/EVP(J)     07 03640
            DTPI=DTPI+DPINT(J)**2                                       07 03650
            I=IS                                                        07 03660
            GOTO 350                                                    07 03670
         ENDIF                                                          07 03680
         IF (TPI .NE. 0.)  DAVPX=AVPEX*DAVPX/TPI                        07 03690
         DTPI=SQRT(DTPI)                                                07 03700
         IF (NE .GT. 1)THEN                                             07 03710
            IF (NK1 .GT. 1)THEN                                         07 03720
C                 Sort EC/B+ (First NK1 of NE EC records) according to  07 03730
C                   positron energy                                     07 03740
               CALL SORT21(EBP,1,NK1,19,EECA,ECAI,PINT,ECKI,ECLI,ECMI,  07 03750
     2           ECNOI,EVP,ECMNOI,DEECA,DECAI,DEBP,DPINT,DECKI,DECLI,   07 03760
     3           DECMI,DECNOI,DEVP,DECMNI,DUM,DUM)                      07 03770
C                                                                       07 03780
            ENDIF                                                       07 03790
            IP1=NK1+1                                                   07 03800
            IF(IP1 .LE. 0)IP1=1                                         07 03810
C                 Sort 'BOTTOM' (EC-only part) of list according to     07 03820
C                   capture branch energy                               07 03830
            CALL SORT21(EECA,IP1,NE,15,ECAI,EVP,ECKI,ECLI,ECMI,ECNOI,   07 03840
     2        ECMNOI,DEECA,DECAI,DEVP,DECKI,DECLI,DECMI,                07 03850
     3        DECNOI,DECMNI,DUM,DUM,DUM,DUM,DUM,DUM)                    07 03860
         ENDIF                                                          07 03870
         IF (NK1 .GT. 0) THEN                                           07 03880
C              Move sorted list of B+'s into list that already contains 07 03890
c                Augers and B-'s.                                       07 03900
            NLOW=NHIGH+1                                                07 03910
            NHIGH=NHIGH+NK1                                             07 03920
            DO 450 I= NLOW,NHIGH                                        07 03930
               J=I-NLOW+1                                               07 03940
               EX(I)=EBP(J)                                             07 03950
               E(I) =EVP(J)                                             07 03960
               DEX(I)=DEBP(J)                                           07 03970
               RI(I)=PINT(J)                                            07 03980
               NTOP=NTOP+1                                              07 03990
               DE(I)= DEVP(J)                                           07 04000
               DRI(I)=DPINT(J)                                          07 04010
450         CONTINUE                                                    07 04020
            IF(NK1 .GT. 1)THEN                                          07 04030
               NHIGH=NHIGH+1                                            07 04040
               NK1=NK1+1                                                07 04050
               NTP=NHIGH                                                07 04060
               EX(NHIGH)=0.                                             07 04070
               DEX(NHIGH)=0.                                            07 04080
               E(NHIGH)=AVPEX                                           07 04090
               DE(NHIGH)=DAVPX                                          07 04100
               RI(NHIGH)= TPI                                           07 04110
               NTOP=NTOP+1                                              07 04120
               DRI(NHIGH)=DTPI                                          07 04130
               NHIGH=NTOP                                               07 04140
            ENDIF                                                       07 04150
         ENDIF                                                          07 04160
      ENDIF                                                             07 04170
      IF(NG .GT. 0) THEN                                                07 04180
C  Save gamma ray photon properties                                     07 04190
         NLOW=NHIGH+1                                                   07 04200
         NHIGH=NLOW+NG-1                                                07 04210
         J=0                                                            07 04220
         DO 500 I=NLOW,NHIGH                                            07 04230
            J=J+1                                                       07 04240
            E(I)=EG(J)                                                  07 04250
            DE(I)=DEG(J)                                                07 04260
            RI(I)=IG(J)                                                 07 04270
            NTOP=NTOP+1                                                 07 04280
            DRI(I)=DIG(J)                                               07 04290
            SUMIE(4)=SUMIE(4)+E(I)*RI(I)                                07 04300
            E2I=E2I+E(I)*E(I)*RI(I)                                     07 04310
            DE2I=DE2I+(2.*E(I)*RI(I)*DE(I))**2+(RI(I)*E(I)**2)**2       07 04320
            DSUMIE(4)=DSUMIE(4)+(RI(I)*DE(I))**2+(DRI(I)*E(I))**2       07 04330
C  Save Gamma number                                                    07 04340
            KSAVE(I)=J                                                  07 04350
500      CONTINUE                                                       07 04360
         NHIGH=NTOP                                                     07 04370
      ENDIF                                                             07 04380
C  Calculate X rays                                                     07 04390
      IF (NG+NE .GE. 1) THEN                                            07 04400
         DO 550 I=1,NDK                                                 07 04410
            RI1=WK(I)*(TERMK(I)+TERMK1(I))                              07 04420
            NH1=NHIGH+1                                                 07 04430
            NH2=NHIGH+2                                                 07 04440
            NH3=NHIGH+3                                                 07 04450
            NH4=NHIGH+4                                                 07 04460
            NTOP=NH4                                                    07 04470
            DO 510 J=1,4                                                07 04480
               K=NHIGH+J                                                07 04490
               KSAVE(K)=-J                                              07 04500
C        Save X ray energies                                            07 04510
               L=J+2                                                    07 04520
               E(K)=ET(I,L)                                             07 04530
               DE(K)=DET(I,L)                                           07 04540
               RI(K)=0.                                                 07 04550
510         CONTINUE                                                    07 04560
            IF (RI1 .GT. 0.) THEN                                       07 04570
               D1=0.                                                    07 04580
               D2=0.                                                    07 04590
               D1=(DTERMK(I)**2+DTRMK1(I)**2)/                          07 04600
     2           ((TERMK(I)+TERMK1(I))**2)                              07 04610
               D2=(DWK(I)/WK(I))**2                                     07 04620
               DRI1=RI1*SQRT(D1+D2)                                     07 04630
               RI2=RI1/(1.+BTOA(I))                                     07 04640
               D1=0.                                                    07 04650
               D2=0.                                                    07 04660
               D3=0.                                                    07 04670
               D4=0.                                                    07 04680
               D5=0.                                                    07 04690
               D1=(DRI1/RI1)**2                                         07 04700
               D2 =(DBTOA(I)/(1.+BTOA(I)))**2                           07 04710
               D4=(DEA2A1(I)/(1.+A2TOA1(I)))**2                         07 04720
               IF (A2TOA1(I).NE.0.) D3=D4/((A2TOA1(I))**2)              07 04730
               IF (BTOA(I) .NE. 0.) D5=D2/((BTOA(I))**2)                07 04740
C        Save K X ray intensities                                       07 04750
               IF(E(NH1) .GT. 0.)THEN                                   07 04760
                  RI(NH1)=RI2/(1.+A2TOA1(I))                            07 04770
                  DRI(NH1)=RI(NH1)*SQRT(D1+D2+D4)                       07 04780
               ELSE                                                     07 04790
                  RI(NH1)=0.                                            07 04800
                  DRI(NH1)=0.                                           07 04810
               ENDIF                                                    07 04820
               IF(E(NH2) .GT. 0.)THEN                                   07 04830
                  RI(NH2)=RI2-RI(NH1)                                   07 04840
                  DRI(NH2)= RI(NH2)*SQRT(D1+D2+D3)                      07 04850
               ELSE                                                     07 04860
                  RI(NH2)=0.                                            07 04870
                  DRI(NH2)=0.                                           07 04880
               ENDIF                                                    07 04890
               IF(E(NH3) .GT. 0.)THEN                                   07 04900
                  RI(NH3)=RI1*BTOA(I)/(1.+BTOA(I))                      07 04910
                  DRI(NH3)=RI(NH3)*SQRT(D1+D5)                          07 04920
               ELSE                                                     07 04930
                  RI(NH3)=0.                                            07 04940
                  DRI(NH3)=0.                                           07 04950
               ENDIF                                                    07 04960
            ENDIF                                                       07 04970
C        Save L X ray intensities                                       07 04980
            IF(E(NH4) .GT. 0.)THEN                                      07 04990
               RI(NH4)=WL(I)*(TERML(I)+TERML1(I)                        07 05000
     2           +(TERMK(I)+TERMK1(I))*ENKL(I))                         07 05010
            ELSE                                                        07 05020
               RI(NH4)=0.                                               07 05030
            ENDIF                                                       07 05040
            IF (RI(NH4) .NE. 0.) THEN                                   07 05050
               D1=0.                                                    07 05060
               D2=0.                                                    07 05070
               D3=0.                                                    07 05080
               D4=0.                                                    07 05090
               D5=0.                                                    07 05100
               D1=DTERML(I)**2+DTRML1(I)**2                             07 05110
               D2=ENKL(I)*(TERMK1(I)+TERMK(I))                          07 05120
               IF (ENKL(I) .NE.0.) D3=(DENKL(I)/ENKL(I))**2             07 05130
               IF (RI1.NE.0.) D4=(DTERMK(I)**2+DTRMK1(I)**2)            07 05140
     2           / ((TERMK(I)+TERMK1(I))**2)                            07 05150
               D5=D1+D2*D2*(D3+D4)                                      07 05160
               D3=TERML(I)+TERML1(I)+ ENKL(I)*(TERMK(I)+TERMK1(I))      07 05170
               D1=0.                                                    07 05180
               D2=0.                                                    07 05190
               IF (WL(I) .NE.0.) D1 =(DWL(I)/WL(I))**2                  07 05200
               IF (D3.NE.0.) D2=D5/(D3*D3)                              07 05210
               DRI(NH4)=RI(NH4)*SQRT(D1+D2)                             07 05220
            ELSE                                                        07 05230
               DRI(NH4)=0.                                              07 05240
            ENDIF                                                       07 05250
C       Calculate contribution to recoil                                07 05260
            DO 540 J=NH1,NH4                                            07 05270
               E2I=E2I+E(J)*E(J)*RI(J)                                  07 05280
               DE2I=DE2I+(2.*E(J)*RI(J)*DE(J))**2+(DRI(J)*E(J)**2)**2   07 05290
               SUMIE(4)=SUMIE(4)+RI(J)*E(J)                             07 05300
               DSUMIE(4)=DSUMIE(4)+(DRI(J)*E(J))**2+(DE(J)*RI(J))**2    07 05310
               SUMI(4)=SUMI(4)+RI(J)                                    07 05320
               DSUMI(4)=DSUMI(4)+DRI(J)**2                              07 05330
540         CONTINUE                                                    07 05340
            NHIGH=NTOP                                                  07 05350
550      CONTINUE                                                       07 05360
      ENDIF                                                             07 05370
      IF(NE .GT. 0) THEN                                                07 05380
C  Save electron capture                                                07 05390
         NLOW=NHIGH+1                                                   07 05400
         NHIGH=NHIGH+NE                                                 07 05410
         DO 600  I=NLOW,NHIGH                                           07 05420
            J=I-NLOW+1                                                  07 05430
            K=I                                                         07 05440
            DO 590 L=1,5                                                07 05450
               E(K)=EECA(J)                                             07 05460
               DE(K)=DEECA(J)                                           07 05470
               RI(K)=EC(J,L)                                            07 05480
               DRI(K)=DEC(J,L)                                          07 05490
               K=K+NE                                                   07 05500
               NTOP=NTOP+1                                              07 05510
590         CONTINUE                                                    07 05520
            E(K)=EECA(J)                                                07 05530
            DE(K)=DEECA(J)                                              07 05540
            RI(K)=ECAI(J)                                               07 05550
            DRI(K)=DECAI(J)                                             07 05560
            NTOP=NTOP+1                                                 07 05570
600      CONTINUE                                                       07 05580
      ENDIF                                                             07 05590
C  Find energy contibruted by Internal Bremstrahlung                    07 05600
        SUMEB=0.                                                        07 05610
        DSUMEB=0.                                                       07 05620
        IF(BREMS .AND. NGRIDI .GT. 0)THEN                               07 05630
           DO 620 I=1,NGRIDI                                            07 05640
              SUMEB=SUMEB+EBARIS(I)                                     07 05650
              DSUMEB=DSUMEB+DEBRIS(I)**2                                07 05660
620        CONTINUE                                                     07 05670
           DSUMEB=SQRT(DSUMEB)                                          07 05680
        ENDIF                                                           07 05690
C  Include annihilation with total gamma radiations                     07 05700
C                                                                       07 05710
C  Energy emitted as each radiation type is contained in SUMIE(10)      07 05720
C    SUMIE(1)=Alpha             SUMIE( 6)=Recoil energy                 07 05730
C          2  Beta                     7  Neutrino                      07 05740
C          3  ce+Auger                 8  Total radiations              07 05750
C                                           except neutrinos            07 05760
C          4  Gamma+X ray+G+-          9  Total emitted energy          07 05770
C               +IB                          including neutrinos        07 05780
C          5  Unplaced gammas          10 Available energy calculated   07 05790
C                                           from Q value and branching  07 05800
C                                                                       07 05810
      IF (TPI .GT. 0.0) THEN                                            07 05820
         A=2.*TPI                                                       07 05830
         SUMI(4)=SUMI(4)+A                                              07 05840
         A=510.99906*A                                                  07 05850
         SUMIE(4)=SUMIE(4)+A                                            07 05860
C                                                                       07 05870
C  Total decay energy already includes annihilation, so it must be      07 05880
C    subtracted here                                                    07 05890
C                                                                       07 05900
         SUMIE(9)=SUMIE(9)-A                                            07 05910
         IF (TPI .NE. 0.)  DSUMIE(4)=DSUMIE(4)+(A*DTPI/TPI)**2          07 05920
      ENDIF                                                             07 05930
        IZA=INT(ZA)                                                     07 05940
      A=AMASS(IZA,WMASSB,IMASSB,NMESS)                                  07 05950
C    Add Alpha recoil energy                                            07 05960
      IF (SUMIE(1).GT.0.0)THEN                                          07 05970
         SUMIE(6)=SUMIE(1)*(1.-ARATIO)                                  07 05980
         DSUMIE(6)=((1.-ARATIO)*DSUMIE(1))**2                           07 05990
      ENDIF                                                             07 06000
C    Add Gamma recoil energy                                            07 06010
      IF (SUMIE(4) .GT. 0.0)THEN                                        07 06020
         SUMIE(6)=SUMIE(6)+E2I/(2.0*A*9.35E5)                           07 06030
         DSUMIE(6)=DSUMIE(6)+DE2I/(2.0*A*9.35E5)**2                     07 06040
      ENDIF                                                             07 06050
C    Add Beta recoil energy                                             07 06060
      IF (SUMIE(2) .GT. 0.0) THEN                                       07 06070
         SUMIE(6)=SUMIE(6)+(1.-ARATIO)*SUMIE(2)                         07 06080
         DSUMIE(6)=DSUMIE(6)+DSUMIE(2)*(1.-ARATIO)**2                   07 06090
      ENDIF                                                             07 06100
C    Calculate total radiation (excluding neutrinos)                    07 06110
      SUMIE(8)=SUMIE(1)+SUMIE(4)+SUMIE(2)+SUMIE(3)+SUMIE(6)             07 06120
      DSUMIE(8)=DSUMIE(1)+DSUMIE(4)+DSUMIE(2)+DSUMIE(3)+DSUMIE(6)       07 06130
C                                                                       07 06140
C    SUMIE(9) already includes Beta and neutrino energies               07 06150
C      but DSUMIE(9) does not                                           07 06160
C                                                                       07 06170
      SUMIE(9)=SUMIE(1)+SUMIE(3)+SUMIE(4)+SUMIE(6)+SUMIE(9)             07 06180
      DSUMIE(9)=DSUMIE(1)+DSUMIE(2)+DSUMIE(3)+DSUMIE(4)+DSUMIE(6)+      07 06190
     2  DSUMIE(7)                                                       07 06200
      IF(BREMS)THEN                                                     07 06210
         SUMIE(4)=SUMIE(4)+100.*SUMEB                                   07 06220
         DSUMIE(4)=DSUMIE(4)+(100.*DSUMEB)**2                           07 06230
         SUMIE(8)=SUMIE(8)+100.*SUMEB                                   07 06240
         DSUMIE(8)=DSUMIE(8)+(100.*DSUMEB)**2                           07 06250
         SUMIE(9)=SUMIE(9)+100.*SUMEB                                   07 06260
         DSUMIE(9)=DSUMIE(9)+(100.*DSUMEB)**2                           07 06270
      ENDIF                                                             07 06280
      DO 650  I=1,10                                                    07 06290
         DSUMIE(I)=SQRT(DSUMIE(I))                                      07 06300
         DSUMI(I)=SQRT(DSUMI(I))                                        07 06310
650   CONTINUE                                                          07 06320
      WRITE(IREPT,FMT='(7X,5HALPHA,7X,4HBETA,7X,8HCE+AUGER,4X,6HPHOTON, 07 06330
     2   5X,8HUNPL/GAM,6X,6HRECOIL,5X,8HNEUTRINO,4X,8HABSORBED,5X,      07 06340
     3   5HTOTAL,6X,4HQ*BR/)')                                          07 06350
      WRITE(IREPT,FMT='(1X,-2P10F12.3)')(SUMIE(I),I=1,10),              07 06360
     2  (DSUMIE(I),I=1,10)                                              07 06370
      WRITE(IREPT,FMT='(1H0,10X,14HINTENSITY SUMS)')                    07 06380
      WRITE(IREPT,FMT='(1X,5F12.3)')(SUMI(I),I=1,5),(DSUMI(I),I=1,5)    07 06390
      WRITE(IREPT,FMT='(1H1)')                                          07 06400
      BADDAT=.FALSE.                                                    07 06410
      IF(ABS(SUMIE(9)-SUMIE(10)) .GT. SQRT(DSUMIE(9)**2 +               07 06420
     2  DSUMIE(10)**2))THEN                                             07 06430
         X=SUMIE(9)/100                                                 07 06440
         DX=DSUMIE(9)/100                                               07 06450
         CALL CNVU2S(X,DX,SX,13,SDX,-3)                                 07 06460
         CALL LBSUP(SX)                                                 07 06470
         WRITE(ITRMOU,1)'               ENERGY MISMATCH: TOTAL=',SX     07 06480
1        FORMAT(A,A13)                                                  07 06490
         X=SUMIE(10)/100                                                07 06500
         DX=DSUMIE(10)/100                                              07 06510
         CALL CNVU2S(X,DX,SX,13,SDX,-3)                                 07 06520
         CALL LBSUP(SX)                                                 07 06530
         WRITE(ITRMOU,1)'                                 Q*BR=',SX     07 06540
         IF(SUMIE(9) .GT. 0 .AND. SUMIE(10) .GT. 0)THEN                 07 06550
            IF(SUMIE(9)/SUMIE(10) .GT. 2.                               07 06560
     2        .OR. SUMIE(10)/SUMIE(9) .GT. 2.)BADDAT=.TRUE.             07 06570
         ELSE                                                           07 06580
            BADDAT=.TRUE.                                               07 06590
         ENDIF                                                          07 06600
      ENDIF                                                             07 06610
      RETURN                                                            07 06620
      END                                                               07 06630
C                                                                       08 00010
      SUBROUTINE                                                        08 00020
     2  SRTPRE(NDK,NTOP,NTOPNE,E,DE,RI,DRI,EX,DEX,KSAVE,IPOST,DUM,IDUM) 08 00030
C                                                                       08 00040
C     Same as SRTEND in MEDLST 4(55) but renamed to avoid               08 00050
C       confusion with ENDF-related routines                            08 00060
C                                                                       08 00070
C     Order of elements in /RADS/:                                      08 00080
C       2NDK Auger intensities                                          08 00090
C       5NG  Conversion electrons                                       08 00100
C       NA   Alphas                                                     08 00110
C       NB   Beta-'s                                                    08 00120
C       NK1  Beta+'s                                                    08 00130
C       NG   Gammas                                                     08 00140
C       4NDK X rays                                                     08 00150
C       6NE  Electron captures                                          08 00160
C                                                                       08 00170
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************08 00180
C*                           Present Code                               08 00190
C*                           ------------                               08 00200
C*  SORT63  TRADE4  TRADE8                                              08 00210
C*                                                                      08 00220
C***********************************************************************08 00230
      INTEGER NDK,NTOP,NTOPNE,KSAVE(NTOPNE),IPOST(NTOPNE),IDUM(NTOPNE)  08 00240
      REAL E(NTOPNE),DE(NTOPNE),RI(NTOPNE),DRI(NTOPNE),                 08 00250
     2  EX(NTOPNE),DEX(NTOPNE),DUM(NTOPNE)                              08 00260
C                                                                       08 00270
      INTEGER GMA,AM,MAXDCY                                             08 00280
      PARAMETER (GMA=999,AM=99,MAXDCY=4)                                08 00290
C                                                                       08 00300
      INTEGER NTB,ITYPM(AM)                                             08 00310
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 08 00320
     2  AVBEX,DAVBX                                                     08 00330
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,   08 00340
     2  NTB,ITYPM                                                       08 00350
C                                                                       08 00360
      INTEGER NTP,ITYPP(AM),KLASS(AM)                                   08 00370
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      08 00380
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,08 00390
     3  AVPEX,DAVPX                                                     08 00400
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,08 00410
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP                     08 00420
C                                                                       08 00430
      INTEGER IDECAY(GMA)                                               08 00440
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5),E2I,08 00450
     2  DE2I                                                            08 00460
      COMMON /GDATA/EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY              08 00470
C                                                                       08 00480
      INTEGER NA,NB,NE,NK1,NG                                           08 00490
      COMMON /COUNTS/NA,NB,NE,NK1,NG                                    08 00500
C                                                                       08 00510
      INTEGER NOMIT(5),IALLG                                            08 00520
      REAL  EOMIT(5),OMIT(5),RIMIN                                      08 00530
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                       08 00540
C                                                                       08 00550
      INTEGER I,II,IP1,J,JJ,K,NHIGH,NHM1,NLOW                           08 00560
C                                                                       08 00570
      DO 100 I=1,NTOP                                                   08 00580
         IF(KSAVE(I) .GE. 0)THEN                                        08 00590
            IPOST(I)=I                                                  08 00600
         ELSE                                                           08 00610
            IPOST(I)=KSAVE(I)                                           08 00620
         ENDIF                                                          08 00630
100   CONTINUE                                                          08 00640
C                                                                       08 00650
C  Gammas already sorted by energy in STORE                             08 00660
C                                                                       08 00670
C  Sort conversion electrons by energy                                  08 00680
        IF(NG .GT. 1)THEN                                               08 00690
           NLOW=2*NDK+1                                                 08 00700
           NHIGH=2*NDK+5*NG                                             08 00710
           CALL SORT63(E,NLOW,NHIGH,3,2,DE,RI,DRI,DUM,DUM,DUM,          08 00720
     2       IPOST,KSAVE,IDUM)                                          08 00730
        ENDIF                                                           08 00740
C                                                                       08 00750
C  Sort B- by energy                                                    08 00760
      IF (NB .GT. 1) THEN                                               08 00770
         IF(NG+NE .GT. 0)THEN                                           08 00780
            NLOW=2*NDK+5*NG+NA+1                                        08 00790
         ELSE                                                           08 00800
            NLOW=NA+1                                                   08 00810
         ENDIF                                                          08 00820
         NHIGH=NLOW+NB-1                                                08 00830
         NHM1=NHIGH-1                                                   08 00840
         DO 150 II=NLOW,NHM1                                            08 00850
            I=II                                                        08 00860
            IF (I .NE. NTB) THEN                                        08 00870
               IP1=I+1                                                  08 00880
               DO 140 JJ=IP1,NHIGH                                      08 00890
                  J=JJ                                                  08 00900
                  IF ((J .NE. NTB) .AND. (EX(I) .GT. EX(J))) THEN       08 00910
                     CALL TRADE8(E,I,J)                                 08 00920
                     CALL TRADE8(RI,I,J)                                08 00930
                     CALL TRADE8(EX,I,J)                                08 00940
                     CALL TRADE8(DE,I,J)                                08 00950
                     CALL TRADE8(DRI,I,J)                               08 00960
                     CALL TRADE8(DEX,I,J)                               08 00970
                     CALL TRADE4(IPOST,I,J)                             08 00980
                 ENDIF                                                  08 00990
140           CONTINUE                                                  08 01000
           ENDIF                                                        08 01010
150     CONTINUE                                                        08 01020
      ENDIF                                                             08 01030
C                                                                       08 01040
C  Sort EC by energy                                                    08 01050
      IF (NE .GT. 1) THEN                                               08 01060
         NLOW=2*NDK+5*NG+NA+NB+NK1+NG+4*NDK+1                           08 01070
         NHIGH=NLOW+5*NE-1                                              08 01080
         CALL SORT63(E,NLOW,NHIGH,3,1,DE,RI,DRI,DUM,DUM,DUM,IPOST,IDUM, 08 01090
     2     IDUM)                                                        08 01100
         NLOW=NTOP+1                                                    08 01110
         NHIGH=NTOP+NE                                                  08 01120
         K=NTOP                                                         08 01130
         DO 200 J=1,NE                                                  08 01140
            E(K+J)=EECA(J)                                              08 01150
            DE(K+J)=DEECA(J)                                            08 01160
            RI(K+J)=ECAI(J)                                             08 01170
            DRI(K+J)=DECAI(J)                                           08 01180
            EX(K+J)=PINT(J)                                             08 01190
            DEX(K+J)=DPINT(J)                                           08 01200
            NTOP=NTOP+1                                                 08 01210
200      CONTINUE                                                       08 01220
         CALL SORT63(E,NLOW,NHIGH,5,0,DE,RI,DRI,EX,DEX,DUM,IDUM,IDUM,   08 01230
     2     IDUM)                                                        08 01240
      ENDIF                                                             08 01250
C                                                                       08 01260
C  Sort Alphas by energy                                                08 01270
      IF (NA .GT. 1) THEN                                               08 01280
         NLOW=2*NDK+5*NG+1                                              08 01290
         IF (NG+NE .EQ. 0) NLOW=1                                       08 01300
         NHIGH=NLOW + NA - 1                                            08 01310
         CALL SORT63(E,NLOW,NHIGH,3,0,DE,RI,DRI,DUM,DUM,DUM,IDUM,IDUM,  08 01320
     2     IDUM)                                                        08 01330
      ENDIF                                                             08 01340
C                                                                       08 01350
C  Sort Auger and conversion electrons by energy                        08 01360
      IF (NG+NE .GE. 1) THEN                                            08 01370
         NLOW=1                                                         08 01380
         NHIGH=2*NDK+5*NG                                               08 01390
         CALL SORT63(E,NLOW,NHIGH,3,2,DE,RI,DRI,DUM,DUM,DUM,KSAVE,IPOST,08 01400
     2     IDUM)                                                        08 01410
C                                                                       08 01420
C  Sort X rays by energy                                                08 01430
         NLOW=2*NDK+5*NG+NA+NB+NK1+NG+1                                 08 01440
         NHIGH=NLOW+4*NDK-1                                             08 01450
         CALL SORT63(E,NLOW,NHIGH,3,2,DE,RI,DRI,DUM,DUM,DUM,KSAVE,IPOST,08 01460
     2     IDUM)                                                        08 01470
      ENDIF                                                             08 01480
C                                                                       08 01490
      RETURN                                                            08 01500
      END                                                               08 01510
C                                                                       09 00010
      SUBROUTINE                                                        09 00020
     2  SRTMED(NDK,NTOP,E,DE,RI,DRI,KSAVE,IPOST,DUM,IDUM)               09 00030
C                                                                       09 00040
C  Order of elements in /RADS/:                                         09 00050
C    2NDK Auger intensities                                             09 00060
C    5NG  Conversion electrons                                          09 00070
C    NA   Alphas                                                        09 00080
C    NB   Beta-'s                                                       09 00090
C    NK1  Beta+'s                                                       09 00100
C    NG   Gammas                                                        09 00110
C    4NDK X rays                                                        09 00120
C    6NE  Electron captures                                             09 00130
C                                                                       09 00140
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************09 00150
C*                           Present Code                               09 00160
C*                           ------------                               09 00170
C*  SORT63  TRADE4  TRADE8                                              09 00180
C*                                                                      09 00190
C***********************************************************************09 00200
      INTEGER NDK,NTOP,KSAVE(NTOP),IPOST(NTOP),IDUM(NTOP)               09 00210
      REAL E(NTOP),DE(NTOP),RI(NTOP),DRI(NTOP),DUM(NTOP)                09 00220
C                                                                       09 00230
      INTEGER GMA,AM,MAXDCY                                             09 00240
      PARAMETER (GMA=999,AM=99,MAXDCY=4)                                09 00250
C                                                                       09 00260
      INTEGER NTB                                                       09 00270
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 09 00280
     2  AVBEX,DAVBX                                                     09 00290
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,NTB09 00300
C                                                                       09 00310
      INTEGER NTP,KLASS(AM)                                             09 00320
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      09 00330
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,09 00340
     3  AVPEX,DAVPX                                                     09 00350
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,09 00360
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP                           09 00370
C                                                                       09 00380
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5)     09 00390
      COMMON /GDATA/EG,DEG,IG,DIG,ICE,DICE                              09 00400
C                                                                       09 00410
      INTEGER NA,NB,NE,NK1,NG                                           09 00420
      COMMON /COUNTS/NA,NB,NE,NK1,NG                                    09 00430
C                                                                       09 00440
      INTEGER NOMIT(5)                                                  09 00450
      REAL EOMIT(5),OMIT(5),RIMIN                                       09 00460
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT                             09 00470
C                                                                       09 00480
      INTEGER I,I1,II,J,JJ,NHIGH,NLOW                                   09 00490
C                                                                       09 00500
C         Sort together Gammas and X rays                               09 00510
C                                                                       09 00520
      IF (NG+NE .GT. 0) THEN                                            09 00530
         NLOW=2*NDK+5*NG+NA+NB+NK1+1                                    09 00540
         NHIGH=NLOW+NG+4*NDK-1                                          09 00550
         CALL SORT63(E,NLOW,NHIGH,3,2,DE,RI,DRI,DUM,DUM,DUM,KSAVE,IPOST,09 00560
     2     IDUM)                                                        09 00570
C          Make sure Gammas with same energy are in correct order       09 00580
         DO 150 I=NLOW,NHIGH-1                                          09 00590
            I1=I+1                                                      09 00600
            II=I                                                        09 00610
            DO 100 J=I1,NHIGH                                           09 00620
               JJ=J                                                     09 00630
               IF(E(I) .EQ. E(J))THEN                                   09 00640
                  IF(KSAVE(I) .GT. KSAVE(J))THEN                        09 00650
                     CALL TRADE8(E,II,JJ)                               09 00660
                     CALL TRADE8(DE,II,JJ)                              09 00670
                     CALL TRADE8(RI,II,JJ)                              09 00680
                     CALL TRADE8(DRI,II,JJ)                             09 00690
                     CALL TRADE4(KSAVE,II,JJ)                           09 00700
                     CALL TRADE4(IPOST,II,JJ)                           09 00710
                  ENDIF                                                 09 00720
               ENDIF                                                    09 00730
100         CONTINUE                                                    09 00740
150      CONTINUE                                                       09 00750
      ENDIF                                                             09 00760
C                                                                       09 00770
C  B- and B+ already sorted by energy                                   09 00780
C                                                                       09 00790
C                                                                       09 00800
      DO 200 I=1,5                                                      09 00810
         IF (OMIT(I) .NE. 0.0) EOMIT(I)=EOMIT(I) / OMIT(I)              09 00820
200   CONTINUE                                                          09 00830
C                                                                       09 00840
      RETURN                                                            09 00850
      END                                                               09 00860
C-----                                                                  10 00010
        SUBROUTINE DATOUT(E,DE,OUTE,L,IPT)                              10 00020
C                                                                       10 00030
C  Takes the floating point value E, with uncertainty DE, and creates   10 00040
C    the output string OUTE, of length L, with the decimal point in the 10 00050
C    IPTth position of OUTE and the uncertainty placed at the end if    10 00060
C    possible.                                                          10 00070
C                                                                       10 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************10 00090
C*                           F77STR  4(2)                               10 00100
C*                           ------------                               10 00110
C*  LENSTR  SQZSTR                                                      10 00120
C*                                                                      10 00130
C*                           NSDCNV  2(03)                              10 00140
C*                           -------------                              10 00150
C*  CNVU2S                                                              10 00160
C*                                                                      10 00170
C*                        FORTRAN 77 Supplied                           10 00180
C*                        -------------------                           10 00190
C*  INDEX   ALOG10   LEN                                                10 00200
C*                                                                      10 00210
C***********************************************************************10 00220
        REAL E,DE                                                       10 00230
        CHARACTER*(*) OUTE                                              10 00240
        INTEGER L,IPT                                                   10 00250
C                                                                       10 00260
        CHARACTER*32 AE,DAE                                             10 00270
        INTEGER LAE,LDAE,LSPACE,I1,SIGN,I,IST                           10 00280
        LOGICAL BIG                                                     10 00290
C                                                                       10 00300
        INTEGER INDEX,LEN                                               10 00310
        REAL ALOG10                                                     10 00320
        INTRINSIC INDEX,ALOG10,LEN                                      10 00330
C                                                                       10 00340
        INTEGER LENSTR                                                  10 00350
        EXTERNAL CNVU2S,LENSTR,SQZSTR                                   10 00360
C                                                                       10 00370
        IF(E .EQ. 0.)THEN                                               10 00380
           OUTE(L/2:L/2)='0'                                            10 00390
           RETURN                                                       10 00400
        ENDIF                                                           10 00410
        BIG=.TRUE.                                                      10 00420
        AE=' '                                                          10 00430
        DAE=' '                                                         10 00440
        OUTE=' '                                                        10 00450
        SIGN=1                                                          10 00460
        LDAE=2                                                          10 00470
        LSPACE=1                                                        10 00480
        LAE=L-LDAE-LSPACE                                               10 00490
        IF(ALOG10(E) .LT. 0.)BIG=.FALSE.                                10 00500
        IF(BIG)THEN                                                     10 00510
C  Treatment for numbers >=1                                            10 00520
           CALL CNVU2S(E,DE,AE,LAE,DAE,LDAE)                            10 00530
           IF(INDEX(AE,'E') .GT. 0)SIGN=-1                              10 00540
100        CONTINUE                                                     10 00550
           LAE=L-LDAE-LSPACE                                            10 00560
           IF(LAE .LT. IPT)PAUSE 'DATOUT PROBLEM'                       10 00570
           CALL CNVU2S(E,DE,AE,LAE,DAE,LDAE*SIGN)                       10 00580
           IF(INDEX(AE,'E') .GT. 0)THEN                                 10 00590
              AE=' '                                                    10 00600
              DAE=' '                                                   10 00610
              LDAE=LDAE+1                                               10 00620
              GOTO 100                                                  10 00630
           ENDIF                                                        10 00640
           IF(SIGN .EQ. -1)THEN                                         10 00650
              DAE=' '                                                   10 00660
              DO 110 I=LENSTR(AE),1,-1                                  10 00670
                 IF(AE(I:I) .EQ. ' ')THEN                               10 00680
                    DAE=AE(I+1:LENSTR(AE))                              10 00690
                    AE(I:)=' '                                          10 00700
                    GOTO 120                                            10 00710
                 ENDIF                                                  10 00720
110           CONTINUE                                                  10 00730
           ENDIF                                                        10 00740
120        CONTINUE                                                     10 00750
           CALL SQZSTR(AE,' ')                                          10 00760
         IF(INDEX(AE,'*') .LE. 0)THEN                                   10 00770
            IF(INDEX(AE,'.') .LE. 0)AE(LENSTR(AE)+1:LENSTR(AE)+1)='.'   10 00780
            IST=1+(IPT-INDEX(AE,'.'))                                   10 00790
            IF(IST .LE. 0)IST=1                                         10 00800
            OUTE(IST:)=AE                                               10 00810
            CALL SQZSTR(DAE,' ')                                        10 00820
            LDAE=LENSTR(DAE)                                            10 00830
            IF(LDAE .GT. 0)OUTE(L-LDAE+1:)=DAE                          10 00840
         ELSE                                                           10 00850
            CALL CNVU2S(E,DE,OUTE,LEN(OUTE)-3,OUTE(LEN(OUTE)-1:),2)     10 00860
         ENDIF                                                          10 00870
           RETURN                                                       10 00880
        ELSE                                                            10 00890
C  Treatment for numbers <1                                             10 00900
200        CONTINUE                                                     10 00910
           LAE=L-(IPT-1)-LDAE-LSPACE                                    10 00920
           CALL CNVU2S(E,DE,AE,LAE,DAE,LDAE*SIGN)                       10 00930
           IF(INDEX(AE,'E') .GT. 0 .OR. INDEX(AE,'*') .GT. 0)THEN       10 00940
              IF(SIGN .EQ. 1)THEN                                       10 00950
                 SIGN=-1                                                10 00960
                 GOTO 200                                               10 00970
              ENDIF                                                     10 00980
              IF(LDAE .GT. 0)THEN                                       10 00990
                 LDAE=LDAE-1                                            10 01000
                 IF(LDAE .EQ. 0)LAE=L-(IPT-1)                           10 01010
                 GOTO 200                                               10 01020
              ELSE                                                      10 01030
                 LAE=L-(IPT-1)                                          10 01040
                 LDAE=-4                                                10 01050
210              CONTINUE                                               10 01060
                 CALL CNVU2S(E,0.,AE,LAE,DAE,LDAE)                      10 01070
                 IF(INDEX(AE,'E') .GT. 0 .OR. INDEX(AE,'*') .GT. 0)THEN 10 01080
                    IF(LDAE .NE. 0)THEN                                 10 01090
                       LDAE=LDAE+1                                      10 01100
                       GOTO 210                                         10 01110
                    ELSE                                                10 01120
                       OUTE(L/2:L/2)='0'                                10 01130
                       RETURN                                           10 01140
                    ENDIF                                               10 01150
                 ENDIF                                                  10 01160
              ENDIF                                                     10 01170
           ENDIF                                                        10 01180
           IF(SIGN .EQ. -1)THEN                                         10 01190
              DAE=' '                                                   10 01200
              IF(LDAE .GT. 0)THEN                                       10 01210
                 DO 220 I=LENSTR(AE),(IPT-1),-1                         10 01220
                    IF(AE(I:I) .EQ. ' ')THEN                            10 01230
                       DAE=AE(I+1:LENSTR(AE))                           10 01240
                       AE(I:)=' '                                       10 01250
                       GOTO 230                                         10 01260
                    ENDIF                                               10 01270
220              CONTINUE                                               10 01280
              ENDIF                                                     10 01290
           ENDIF                                                        10 01300
230        CONTINUE                                                     10 01310
           CALL SQZSTR(AE,' ')                                          10 01320
           OUTE(IPT-1:)=AE                                              10 01330
           CALL SQZSTR(DAE,' ')                                         10 01340
           LDAE=LENSTR(DAE)                                             10 01350
           IF(LDAE .GT. 0)OUTE(L-LDAE+1:)=DAE                           10 01360
           RETURN                                                       10 01370
        ENDIF                                                           10 01380
        END                                                             10 01390
C                                                                       11 00010
        REAL FUNCTION AMASS(IZA,WMASSB,IMASSB,NMESS)                    11 00020
C                                                                       11 00030
C  Replaces AMASS in MEDLST                                             11 00040
C                                                                       11 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************11 00060
C*                           Present Code                               11 00070
C*                           ------------                               11 00080
C*  MESSAG                                                              11 00090
C*                                                                      11 00100
C***********************************************************************11 00110
C                                                                       11 00120
C  Parameters for Garvey-Kelson data                                    11 00130
        INTEGER MAXN,MAXZ,MAXA                                          11 00140
        PARAMETER (MAXN=156,MAXZ=100,MAXA=256)                          11 00150
C                                                                       11 00160
        INTEGER IZA,IMASSB,NMESS                                        11 00170
        LOGICAL WMASSB                                                  11 00180
C                                                                       11 00190
C  Atomic Mass Unit in keV (Nuclear calibration scale)                  11 00200
        REAL AMTOKV                                                     11 00210
        DATA AMTOKV/931494.32/                                          11 00220
C                                                                       11 00230
C  Temporary Wapstra data storage                                       11 00240
        INTEGER IZW(3)                                                  11 00250
        REAL AMASSW(3)                                                  11 00260
C                                                                       11 00270
C  Character array to send message if Garvey-Kelson is used             11 00280
        CHARACTER*28 GARVEY                                             11 00290
C                                                                       11 00300
C  Data for Garvey-Kelson formalism                                     11 00310
      REAL AMASN,AMASP                                                  11 00320
C    Neutron and proton mass defects from Wapstra (1983)                11 00330
      REAL DMNKV,DMPKV                                                  11 00340
      DATA DMNKV,DMPKV/8071.369,7289.030/                               11 00350
C                                                                       11 00360
      REAL ETA                                                          11 00370
      DATA ETA/195.856/                                                 11 00380
C                                                                       11 00390
      INTEGER I                                                         11 00400
      REAL G1(MAXN),G2(MAXZ),G3(MAXA)                                   11 00410
      DATA (G1(I),I=1,80)/       3*0.0,  320879.3,  297139.5,           11 00420
     +  271128.4,  250761.8,  229720.2,  215067.6,  197882.5,           11 00430
     +  185297.4,  170782.1,  160681.9,  147878.5,  139703.2,           11 00440
     +  130243.1,  125186.6,  118324.5,  115717.5,  110858.1,           11 00450
     +  111135.8,  108806.8,  109664.5,  108054.5,  109624.9,           11 00460
     +  108976.3,  111058.7,  110826.7,  114462.8,  116659.0,           11 00470
     +  121583.9,  124502.0,  130293.8,  133854.9,  140506.7,           11 00480
     +  144468.8,  151617.6,  155940.6,  163488.4,  168271.1,           11 00490
     +  176153.2,  181094.4,  189060.2,  194039.1,  201905.6,           11 00500
     +  206880.6,  214480.8,  219448.1,  226977.6,  231998.2,           11 00510
     +  241028.8,  248368.7,  257234.9,  264288.9,  272992.8,           11 00520
     +  279791.8,  288668.4,  295289.1,  303934.2,  309989.5,           11 00530
     +  318346.8,  324005.8,  332008.7,  337377.7,  344931.0,           11 00540
     +  349998.1,  357237.1,  361754.9,  368528.7,  372556.9,           11 00550
     +  378813.7,  382315.1,  387995.8,  390907.4,  395852.0,           11 00560
     +  398110.4,  402260.8,  403839.8,  407186.9,  408025.7/           11 00570
      DATA (G1(I),I=81,MAXN)/                                           11 00580
     +  410491.5,  410881.4,  414543.0,  416095.0,  418972.7,           11 00590
     +  419887.4,  422239.3,  422410.1,  424096.5,  423007.9,           11 00600
     +  423604.1,  421808.4,  421562.7,  419308.1,  418452.2,           11 00610
     +  415538.2,  414003.1,  410528.9,  408349.8,  404427.4,           11 00620
     +  401540.5,  397096.5,  393668.9,  388683.6,  384737.3,           11 00630
     +  379222.7,  374623.5,  368420.1,  363463.0,  356880.0,           11 00640
     +  351465.4,  344211.9,  338270.2,  330353.7,  323836.8,           11 00650
     +  315137.8,  307992.2,  298798.5,  290930.5,  280992.9,           11 00660
     +  272120.9,  261408.8,  251768.8,  240293.8,  229648.1,           11 00670
     +  217866.2,  208367.6,  197188.4,  186917.4,  174749.6,           11 00680
     +  163735.8,  150740.1,  138839.1,  125183.0,  112507.7,           11 00690
     +   98189.1,   84852.2,   69712.0,   55684.8,   39835.9,           11 00700
     +   24908.4,    8438.0,   -7186.2,  -24385.6,  -40806.9,           11 00710
     +  -58689.1,  -75899.1,  -94662.2, -112761.7, -132312.2,           11 00720
     + -151130.6, -171548.4, -190931.6, -211889.2, -232052.1,           11 00730
     + -254011.1/                                                       11 00740
      DATA G2/0.0, 320879.3,  287052.6,  248337.0,  217704.0,           11 00750
     +  184227.1,  160600.0,  135290.5,  118009.5,   97845.8,           11 00760
     +   83454.0,   66390.7,   54883.2,   40810.0,   33119.2,           11 00770
     +   24486.0,   20012.6,   14055.9,   11846.3,    7634.9,           11 00780
     +    8093.1,    5736.9,    7035.3,    5758.5,    7692.6,           11 00790
     +    7571.2,   10943.5,   11979.2,   17235.7,   20928.8,           11 00800
     +   27311.2,   31718.0,   39147.5,   44036.7,   51939.4,           11 00810
     +   57185.2,   65438.0,   71173.1,   79859.5,   86354.2,           11 00820
     +   95650.1,  102132.5,  111200.8,  117480.7,  126496.7,           11 00830
     +  132876.0,  141940.3,  148313.6,  157308.5,  163554.2,           11 00840
     +  173644.9,  181464.0,  191139.1,  198502.6,  207860.5,           11 00850
     +  214735.3,  223670.6,  230088.2,  238617.6,  244596.5,           11 00860
     +  252660.8,  258242.1,  265820.0,  271033.4,  278177.6,           11 00870
     +  283105.9,  289876.9,  294556.5,  300848.0,  305290.9,           11 00880
     +  311337.7,  315619.4,  321180.2,  324907.0,  330172.5,           11 00890
     +  333763.8,  339154.2,  342451.6,  347144.3,  349875.9,           11 00900
     +  354120.3,  356653.3,  361929.1,  365394.7,  370103.6,           11 00910
     +  372748.4,  376796.6,  378780.5,  382285.2,  383810.8,           11 00920
     +  386771.8,  387749.9,  390099.1,  390644.3,  392345.3,           11 00930
     +  392227.7,  393341.2,  392623.4,  393116.2,  391842.6/           11 00940
      DATA (G3(I),I=1,90)/ 5*0.0,                                       11 00950
     + -576288.8, -536756.0, -499332.7, -462060.9, -427145.4,           11 00960
     + -392247.7, -359824.4, -328627.7, -300336.3, -271885.0,           11 00970
     + -244315.0, -217996.4, -193445.9, -169703.9, -148282.3,           11 00980
     + -126773.5, -107169.8,  -87432.8,  -68791.2,  -50233.9,           11 00990
     +  -32982.6,  -16188.2,    -601.3,   14813.5,   28840.3,           11 01000
     +   42508.5,   54871.0,   66960.2,   77818.7,   88504.9,           11 01010
     +   98039.2,  107649.5,  115927.4,  124196.1,  131384.3,           11 01020
     +  138616.8,  144802.4,  151075.3,  156083.5,  161340.2,           11 01030
     +  165473.3,  169811.5,  173306.0,  177150.6,  180451.7,           11 01040
     +  183940.3,  186774.2,  189629.6,  191707.8,  193774.7,           11 01050
     +  195338.4,  197001.7,  197909.3,  198998.6,  199475.6,           11 01060
     +  199978.1,  199742.4,  199796.8,  199078.2,  198615.5,           11 01070
     +  197483.2,  196619.8,  195104.7,  193807.2,  191910.9,           11 01080
     +  190281.4,  187967.0,  185956.3,  183135.2,  180607.8,           11 01090
     +  177554.9,  174792.0,  171687.0,  168726.9,  165302.2,           11 01100
     +  162190.7,  158509.7,  155280.7,  151429.1,  147784.6,           11 01110
     +  143534.7,  139438.1,  134965.1,  130629.4,  126048.2/           11 01120
      DATA (G3(I),I=91,180)/                                            11 01130
     +  121779.1,  117184.0,  112823.5,  108152.0,  103635.7,           11 01140
     +   98911.1,   94280.6,   89742.0,   85237.0,   80253.4,           11 01150
     +   75688.2,   70663.3,   65940.0,   60942.9,   56254.5,           11 01160
     +   51282.9,   46619.3,   41679.9,   37066.4,   32152.9,           11 01170
     +   27597.7,   22614.8,   18012.4,   13060.4,    8457.5,           11 01180
     +    3615.0,    -915.7,   -5707.7,  -10225.1,  -14990.6,           11 01190
     +  -19433.5,  -24199.3,  -28661.7,  -33220.2,  -37534.3,           11 01200
     +  -42024.6,  -46104.7,  -50346.7,  -54222.9,  -58176.7,           11 01210
     +  -61783.7,  -65508.8,  -68939.1,  -72348.5,  -75576.2,           11 01220
     +  -78774.5,  -81639.1,  -84675.5,  -87357.7,  -90181.6,           11 01230
     +  -92832.9,  -95914.1,  -97978.3, -100561.5, -102814.2,           11 01240
     + -105240.1, -107337.4, -109574.0, -111417.2, -113457.0,           11 01250
     + -115193.1, -117180.2, -118873.7, -120615.7, -122118.6,           11 01260
     + -123645.3, -124879.3, -126174.5, -127067.1, -128130.4,           11 01270
     + -128913.8, -129790.7, -130391.4, -130929.2, -131315.8,           11 01280
     + -131733.1, -131974.3, -132191.1, -132090.4, -132087.6,           11 01290
     + -131855.2, -131674.0, -131325.4, -130988.8, -130336.0,           11 01300
     + -129686.8, -128875.7, -128153.3, -127183.9, -126331.1/           11 01310
      DATA (G3(I),I=181,MAXA)/                                          11 01320
     + -125246.7, -124173.3, -122986.4, -121711.7, -120257.3,           11 01330
     + -118962.4, -117442.6, -116021.7, -114250.2, -112874.2,           11 01340
     + -111148.0, -109555.9, -107670.2, -106041.0, -104013.6,           11 01350
     + -102207.8, -100173.1,  -98028.1,  -95721.2,  -93344.9,           11 01360
     +  -90399.3,  -87809.3,  -84917.7,  -82009.3,  -78759.0,           11 01370
     +  -75597.0,  -72209.2,  -68615.0,  -64705.4,  -60724.2,           11 01380
     +  -56462.9,  -52182.9,  -47662.8,  -43221.6,  -38510.9,           11 01390
     +  -33974.6,  -29106.7,  -24404.5,  -19307.3,  -14512.2,           11 01400
     +   -9344.8,   -4343.3,     993.5,    6171.0,   11626.5,           11 01410
     +   16942.3,   22594.8,   28073.6,   33894.5,   39552.7,           11 01420
     +   45567.5,   51484.7,   57691.1,   63881.7,   70409.5,           11 01430
     +   76926.6,   83667.5,   90444.6,   97487.7,  104633.9,           11 01440
     +  112019.1,  119530.2,  127267.7,  135060.1,  143090.3,           11 01450
     +  151158.2,  159506.8,  167931.0,  176515.4,  185252.4,           11 01460
     +  194212.4,  203235.4,  212516.4,  221924.8,  231567.3,           11 01470
     +  241401.8/                                                       11 01480
C                                                                       11 01490
        INTEGER IZ,IA,IN,J1,J2,J3                                       11 01500
        REAL ETANZ,BZSQ,ALPHA,A                                         11 01510
C                                                                       11 01520
        AMASS=0.                                                        11 01530
        IF(IZA .LE. 0)RETURN                                            11 01540
        IZ=IZA/1000                                                     11 01550
        IA=MOD(IZA,1000)                                                11 01560
C                                                                       11 01570
C  Search Wapstra data for Z and A match                                11 01580
        IF(WMASSB)THEN                                                  11 01590
           READ(IMASSB,REC=1)J3                                         11 01600
           READ(IMASSB,REC=J3)IZW(3),AMASSW(3)                          11 01610
           IF(IZA .GT. IZW(3))GOTO 1000                                 11 01620
           J1=2                                                         11 01630
           READ(IMASSB,REC=J1)IZW(1),AMASSW(1)                          11 01640
100        J2=(J3+J1)/2                                                 11 01650
           READ(IMASSB,REC=J2)IZW(2),AMASSW(2)                          11 01660
           IF(IZA .EQ. IZW(1))THEN                                      11 01670
              A=AMASSW(1)                                               11 01680
              GOTO 200                                                  11 01690
           ENDIF                                                        11 01700
           IF(IZA .EQ. IZW(2))THEN                                      11 01710
              A=AMASSW(2)                                               11 01720
              GOTO 200                                                  11 01730
           ENDIF                                                        11 01740
           IF(IZA .EQ. IZW(3))THEN                                      11 01750
              A=AMASSW(3)                                               11 01760
              GOTO 200                                                  11 01770
           ENDIF                                                        11 01780
           IF(J2 .EQ. 0 .OR. J2 .EQ. J1 .OR. J2 .EQ. J3)GOTO 1000       11 01790
           IF(IZA .LT. IZW(2))THEN                                      11 01800
              J3=J2                                                     11 01810
              IZW(3)=IZW(2)                                             11 01820
              AMASSW(3)=AMASSW(2)                                       11 01830
              GOTO 100                                                  11 01840
           ENDIF                                                        11 01850
           IF(IZA .GT. IZW(2))THEN                                      11 01860
              J1=J2                                                     11 01870
              IZW(1)=IZW(2)                                             11 01880
              AMASSW(1)=AMASSW(2)                                       11 01890
              GOTO 100                                                  11 01900
           ENDIF                                                        11 01910
200        CONTINUE                                                     11 01920
           AMASS=INT(IA)                                                11 01930
           AMASS=AMASS+A/AMTOKV                                         11 01940
           RETURN                                                       11 01950
        ENDIF                                                           11 01960
1000    CONTINUE                                                        11 01970
C                                                                       11 01980
C  No match found in Wapstra data or Wapstra data not present           11 01990
C     Invoke Garvey-Kelson formalism as in old AMASS                    11 02000
C     [Atomic Data and Nuclear Data Tables 17, 461 (1976)]              11 02010
        IF(WMASSB)THEN                                                  11 02020
           WRITE(GARVEY,FMT='(20HGARVEY-KELSON FOR Z=,I3,2HA=,I3)')IZ,IA11 02030
           CALL MESSAG(NMESS,2,GARVEY)                                  11 02040
        ENDIF                                                           11 02050
C                                                                       11 02060
        IN=IA-IZ                                                        11 02070
        AMASN=INT(IN)                                                   11 02080
        AMASN=AMASN*(AMTOKV+DMNKV)                                      11 02090
C                                                                       11 02100
        AMASP=INT(IZ)                                                   11 02110
        AMASP=AMASP*(AMTOKV+DMPKV)                                      11 02120
C                                                                       11 02130
        ALPHA=INT(IA)                                                   11 02140
        ALPHA=16000.*ALPHA                                              11 02150
C                                                                       11 02160
        BZSQ=INT(IZ*IZ)                                                 11 02170
        BZSQ=120.*BZSQ                                                  11 02180
C                                                                       11 02190
        ETANZ=INT((IN-IZ)*(IN-IZ))                                      11 02200
        ETANZ=ETA*ETANZ                                                 11 02210
C                                                                       11 02220
        IF((IN .EQ. 0 .OR. IN .GT. MAXN) .OR.                           11 02230
     2     (IZ .EQ. 0 .OR. IZ .GT. MAXZ) .OR.                           11 02240
     3     (IA .EQ. 0 .OR. IA .GT. MAXA))THEN                           11 02250
           AMASS=AMASP+AMASN-ALPHA+BZSQ+ETANZ                           11 02260
        ELSE                                                            11 02270
           AMASS=AMASP+AMASN-ALPHA+BZSQ+ETANZ+G1(IN)+G2(IZ)+G3(IA)      11 02280
        ENDIF                                                           11 02290
        AMASS=AMASS/AMTOKV                                              11 02300
        RETURN                                                          11 02310
        END                                                             11 02320
C=====                                                                  12 00010
C                                                                       12 00020
C=====  General Purpose Array Manipulation Routines                     12 00030
        SUBROUTINE EQUAL8(N,X,Y)                                        12 00040
C                                                                       12 00050
C  Sets values of second array equal to values of first array           12 00060
C                                                                       12 00070
        INTEGER N                                                       12 00080
        REAL X(N),Y(N)                                                  12 00090
C                                                                       12 00100
        INTEGER I                                                       12 00110
C                                                                       12 00120
        DO 100 I=1,N                                                    12 00130
           Y(I)=X(I)                                                    12 00140
100     CONTINUE                                                        12 00150
        RETURN                                                          12 00160
        END                                                             12 00170
C                                                                       13 00010
      SUBROUTINE                                                        13 00020
     2  SORT21(X,I1,I2,N,A,B,C,D,E,F,G,H,M,NA,O,P,Q,R,S,T,U,V,W,Y,Z)    13 00030
C                                                                       13 00040
C  ORNL-NDP MEDLIST PROGRAM, SORT21X8 Subroutine [24-May-77]            13 00050
C                                                                       13 00060
C  Arranges up to 21 arrays according to increasing X.                  13 00070
C    Only the section I1 to I2 of the arrays is considered              13 00080
C    N is the number of arrays to be considered                         13 00090
C                                                                       13 00100
C                                                                       13 00110
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************13 00120
C*                           Present Code                               13 00130
C*                           ------------                               13 00140
C*  TRADE8                                                              13 00150
C*                                                                      13 00160
C***********************************************************************13 00170
      INTEGER I1,I2,N                                                   13 00180
      REAL A(I2),B(I2),C(I2),D(I2),E(I2),F(I2),G(I2),H(I2),M(I2),NA(I2),13 00190
     2  O(I2),P(I2),Q(I2),R(I2),S(I2),T(I2),U(I2),V(I2),W(I2),X(I2),    13 00200
     3  Y(I2),Z(I2)                                                     13 00210
C                                                                       13 00220
      INTEGER I2M,II,I,I1P,J,JJ                                         13 00230
C                                                                       13 00240
      I2M=I2-1                                                          13 00250
      DO 200 II=I1,I2M                                                  13 00260
         I=II                                                           13 00270
         I1P=I+1                                                        13 00280
         DO 100 JJ=I1P,I2                                               13 00290
            J=JJ                                                        13 00300
            IF (X(I).GT.X(J)) THEN                                      13 00310
               CALL TRADE8(X,I,J)                                       13 00320
               IF (N.GE.1)THEN                                          13 00330
                  CALL TRADE8(A,I,J)                                    13 00340
                  IF (N.GE.2)   CALL TRADE8(B,I,J)                      13 00350
                  IF (N.GE.3)   CALL TRADE8(C,I,J)                      13 00360
                  IF (N.GE.4)   CALL TRADE8(D,I,J)                      13 00370
                  IF (N.GE.5)   CALL TRADE8(E,I,J)                      13 00380
                  IF (N.GE.6)   CALL TRADE8(F,I,J)                      13 00390
                  IF (N.GE.7)   CALL TRADE8(G,I,J)                      13 00400
                  IF (N.GE.8)   CALL TRADE8(H,I,J)                      13 00410
                  IF (N.GE.9)   CALL TRADE8(M,I,J)                      13 00420
                  IF (N.GE.10)  CALL TRADE8(NA,I,J)                     13 00430
                  IF (N.GE.11)  CALL TRADE8(O,I,J)                      13 00440
                  IF (N.GE.12)  CALL TRADE8(P,I,J)                      13 00450
                  IF (N.GE.13)  CALL TRADE8(Q,I,J)                      13 00460
                  IF (N.GE.14)  CALL TRADE8(R,I,J)                      13 00470
                  IF (N.GE.15)  CALL TRADE8(S,I,J)                      13 00480
                  IF (N.GE.16)  CALL TRADE8(T,I,J)                      13 00490
                  IF (N.GE.17)  CALL TRADE8(U,I,J)                      13 00500
                  IF (N.GE.18)  CALL TRADE8(V,I,J)                      13 00510
                  IF (N.GE.19)  CALL TRADE8(W,I,J)                      13 00520
                  IF (N.GE.20)  CALL TRADE8(Y,I,J)                      13 00530
                  IF (N.GE.21)  CALL TRADE8(Z,I,J)                      13 00540
               ENDIF                                                    13 00550
            ENDIF                                                       13 00560
100      CONTINUE                                                       13 00570
200   CONTINUE                                                          13 00580
      RETURN                                                            13 00590
      END                                                               13 00600
C                                                                       14 00010
      SUBROUTINE SORT63(X,I1,I2,N1,N2,A,B,C,D,E,F,M,N,O)                14 00020
C                                                                       14 00030
C  ORNL-NDP MEDLIST PROGRAM, SORT63 Subroutine [24-May-77]              14 00040
C                                                                       14 00050
C  Arranges N1 single precision arrays (MAX=6) and N2 integer arrays    14 00060
C    (MAX=3) according to increasing values of X.                       14 00070
C     Only the part of each array from I1 to I2 is sorted               14 00080
C                                                                       14 00090
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************14 00100
C*                           Present Code                               14 00110
C*                           ------------                               14 00120
C*  TRADE4  TRADE8                                                      14 00130
C*                                                                      14 00140
C***********************************************************************14 00150
      INTEGER I1,I2,N1,N2,M(I2),N(I2),O(I2)                             14 00160
      REAL X(I2),A(I2),B(I2),C(I2),D(I2),E(I2),F(I2)                    14 00170
C                                                                       14 00180
      INTEGER I2M,II,I,IP,JJ,J                                          14 00190
C                                                                       14 00200
      IF (I2.LE.I1 .OR. I1.LT.1)  RETURN                                14 00210
      I2M=I2-1                                                          14 00220
      DO 200 II=I1,I2M                                                  14 00230
         I=II                                                           14 00240
         IP=I+1                                                         14 00250
         DO 100 JJ=IP,I2                                                14 00260
            J=JJ                                                        14 00270
            IF(X(I) .GT. X(J)) THEN                                     14 00280
               CALL TRADE8(X,I,J)                                       14 00290
               IF (N1 .GE. 1)THEN                                       14 00300
                  CALL TRADE8(A,I,J)                                    14 00310
                  IF (N1.GE.2)  CALL TRADE8(B,I,J)                      14 00320
                  IF (N1.GE.3)  CALL TRADE8(C,I,J)                      14 00330
                  IF (N1.GE.4)  CALL TRADE8(D,I,J)                      14 00340
                  IF (N1.GE.5)  CALL TRADE8(E,I,J)                      14 00350
                  IF (N1.GE.6)  CALL TRADE8(F,I,J)                      14 00360
               ENDIF                                                    14 00370
               IF (N2.GE.1)THEN                                         14 00380
                  CALL TRADE4(M,I,J)                                    14 00390
                  IF (N2.GE.2)  CALL TRADE4(N,I,J)                      14 00400
                  IF (N2.GE.3)  CALL TRADE4(O,I,J)                      14 00410
               ENDIF                                                    14 00420
            ENDIF                                                       14 00430
100      CONTINUE                                                       14 00440
200   CONTINUE                                                          14 00450
      RETURN                                                            14 00460
      END                                                               14 00470
C                                                                       15 00010
      SUBROUTINE TRADE4(X,I,J)                                          15 00020
C                                                                       15 00030
C  Exchanges Ith and Jth elements of an integer array X                 15 00040
C                                                                       15 00050
      INTEGER I,J,X(J)                                                  15 00060
C                                                                       15 00070
      INTEGER Z                                                         15 00080
C                                                                       15 00090
      IF (I .NE. J) THEN                                                15 00100
         Z=X(I)                                                         15 00110
         X(I)=X(J)                                                      15 00120
         X(J)=Z                                                         15 00130
      ENDIF                                                             15 00140
      RETURN                                                            15 00150
      END                                                               15 00160
C                                                                       16 00010
      SUBROUTINE TRADE8(X,I,J)                                          16 00020
C                                                                       16 00030
C   Exchanges Ith and J-th elements of the array X                      16 00040
C                                                                       16 00050
      INTEGER I,J                                                       16 00060
      REAL X(J)                                                         16 00070
C                                                                       16 00080
      REAL Z                                                            16 00090
C                                                                       16 00100
      IF (I .NE. J) THEN                                                16 00110
         Z=X(I)                                                         16 00120
         X(I)=X(J)                                                      16 00130
         X(J)=Z                                                         16 00140
      ENDIF                                                             16 00150
      RETURN                                                            16 00160
      END                                                               16 00170
        SUBROUTINE ZERO4(N,X)                                           17 00010
C                                                                       17 00020
C       Zeroes an integer array                                         17 00030
C                                                                       17 00040
        INTEGER N,X(N)                                                  17 00050
C                                                                       17 00060
        INTEGER I                                                       17 00070
C                                                                       17 00080
        DO 100 I=1,N                                                    17 00090
           X(I)=0                                                       17 00100
100     CONTINUE                                                        17 00110
        RETURN                                                          17 00120
        END                                                             17 00130
        SUBROUTINE ZERO8(N,X)                                           18 00010
C                                                                       18 00020
C       Zeroes a real array                                             18 00030
C                                                                       18 00040
        INTEGER N                                                       18 00050
        REAL X(N)                                                       18 00060
C                                                                       18 00070
        INTEGER I                                                       18 00080
C                                                                       18 00090
        DO 100 I=1,N                                                    18 00100
           X(I)=0.                                                      18 00110
100     CONTINUE                                                        18 00120
        RETURN                                                          18 00130
        END                                                             18 00140
      SUBROUTINE ZEROLT(N,X)                                            19 00010
C                                                                       19 00020
C     Sets a logical array to .TRUE.                                    19 00030
C                                                                       19 00040
      INTEGER N                                                         19 00050
      LOGICAL X(N)                                                      19 00060
C                                                                       19 00070
      INTEGER I                                                         19 00080
C                                                                       19 00090
      DO 100 I=1,N                                                      19 00100
         X(I)=.TRUE.                                                    19 00110
100   CONTINUE                                                          19 00120
      RETURN                                                            19 00130
      END                                                               19 00140
      SUBROUTINE ZEROLF(N,X)                                            20 00010
C                                                                       20 00020
C     Sets a logical array to .FALSE.                                   20 00030
C                                                                       20 00040
      INTEGER N                                                         20 00050
      LOGICAL X(N)                                                      20 00060
C                                                                       20 00070
      INTEGER I                                                         20 00080
C                                                                       20 00090
      DO 100 I=1,N                                                      20 00100
         X(I)=.FALSE.                                                   20 00110
100   CONTINUE                                                          20 00120
      RETURN                                                            20 00130
      END                                                               20 00140
C=====                                                                  21 00010
C===== ENSDF Record Processing Routines                                 21 00020
        SUBROUTINE ALPPRO(ENDF,MIRD,NMESS,NWARN,AQR,DEAC,ARATIO,RTYP)   21 00030
C                                                                       21 00040
C       Processes ALPHA records, comments, and continuations            21 00050
C                                                                       21 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************21 00070
C*                           Present Code                               21 00080
C*                           ------------                               21 00090
C*  LOWLMT  MESSAG  RADCOM  UNCER1  UNDIVD  UPLIMT  WARNNG              21 00100
C*                                                                      21 00110
C*                           F77STR  4(2)                               21 00120
C*                           ------------                               21 00130
C*  SQZSTR                                                              21 00140
C*                                                                      21 00150
C*                           NSDCNV  2(03)                              21 00160
C*                           -------------                              21 00170
C*  CNVU2S                                                              21 00180
C*                                                                      21 00190
C*                        FORTRAN 77 Supplied                           21 00200
C*                        -------------------                           21 00210
C*  SQRT                                                                21 00220
C*                                                                      21 00230
C***********************************************************************21 00240
        INTEGER NMESS,NWARN                                             21 00250
        REAL AQR,DEAC,ARATIO,RTYP                                       21 00260
        LOGICAL ENDF,MIRD                                               21 00270
C                                                                       21 00280
        INTEGER AM,MAXDCY                                               21 00290
        PARAMETER (AM=99,MAXDCY=4)                                      21 00300
C                                                                       21 00310
        REAL EA(AM),DEA(AM),IA(AM),DIA(AM)                              21 00320
        COMMON /ADATA/ EA,DEA,IA,DIA                                    21 00330
C                                                                       21 00340
C%%%%%MIRD                                                              21 00350
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      21 00360
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               21 00370
C                                                                       21 00380
      INTEGER GMA,NLMAX                                                 21 00390
      PARAMETER (GMA=999,NLMAX=2000)                                    21 00400
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          21 00410
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 21 00420
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       21 00430
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          21 00440
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   21 00450
      INTEGER IDREC(MAXDCY)                                             21 00460
      INTEGER NLEV,NREC                                                 21 00470
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   21 00480
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 21 00490
     3  IDREC                                                           21 00500
C^^^^^MIRD                                                              21 00510
C                                                                       21 00520
        INTEGER NA                                                      21 00530
        COMMON /COUNTS/ NA                                              21 00540
C                                                                       21 00550
        INTEGER NOMIT(5)                                                21 00560
        REAL EOMIT(5),OMIT(5),RIMIN                                     21 00570
        COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT                           21 00580
C                                                                       21 00590
        REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                    21 00600
        COMMON /AVGS/ SUMIE,DSUMIE,SUMI,DSUMI                           21 00610
C                                                                       21 00620
        REAL RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN            21 00630
        COMMON /NORMAL/RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN  21 00640
C                                                                       21 00650
        REAL ELEV,DELEV                                                 21 00660
        COMMON /LEVELS/ELEV,DELEV                                       21 00670
C%%%%%ENDFB                                                             21 00680
        INTEGER LIS,LISO,MAT                                            21 00690
        REAL ZA,TSEC,DTSEC,SPIN,PARITY                                  21 00700
        COMMON /ENDGEN/ZA,TSEC,DTSEC,SPIN,PARITY,LIS,LISO,MAT           21 00710
C                                                                       21 00720
        REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),    21 00730
     2    ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10),ELIS(MAXDCY), 21 00740
     3    ELISO(MAXDCY),RFS(MAXDCY)                                     21 00750
        COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN,ELIS,  21 00760
     2    ELISO,RFS                                                     21 00770
C                                                                       21 00780
        INTEGER NSTYP4                                                  21 00790
        REAL ES4(AM),DES4(AM),RS4(AM),DRS4(AM),RTYP4(AM)                21 00800
        COMMON /STYP4/ES4,DES4,RS4,DRS4,RTYP4,NSTYP4                    21 00810
C^^^^^ENDFB                                                             21 00820
        CHARACTER*80 CARD,CARD2                                         21 00830
        COMMON /CARDS/CARD,CARD2                                        21 00840
C                                                                       21 00850
        INTEGER IREPT,IDATA                                             21 00860
        COMMON /RPTUNT/IREPT                                            21 00870
        COMMON /DATUNT/IDATA                                            21 00880
C                                                                       21 00890
        INTEGER TYPSTR,LENSTR                                           21 00900
        EXTERNAL TYPSTR,LENSTR                                          21 00910
C                                                                       21 00920
        REAL SQRT                                                       21 00930
        INTRINSIC SQRT                                                  21 00940
C                                                                       21 00950
        INTEGER I,JCONT                                                 21 00960
        REAL A,B,EAC,EDIV                                               21 00970
        CHARACTER ENERGY*10,STR*80,DUM*2                                21 00980
C                                                                       21 00990
         NA=NA+1                                                        21 01000
C%%%%%MIRD                                                              21 01010
         IF(MIRD)THEN                                                   21 01020
            CALL WRITMP(MIRDTM,NREC,CARD)                               21 01030
            AREC(NA)=NREC                                               21 01040
            IF(NLEV .GE. 1)THEN                                         21 01050
               ALTO(NA)=LREC(NLEV)                                      21 01060
            ELSE                                                        21 01070
               ALTO(NA)=-1                                              21 01080
            ENDIF                                                       21 01090
         ENDIF                                                          21 01100
C^^^^^MIRD                                                              21 01110
C                                                                       21 01120
         STR=CARD(10:19)                                                21 01130
         CALL SQZSTR(STR,' ')                                           21 01140
         CALL UNCER1(CARD(10:21),DEA(NA),EA(NA),NMESS)                  21 01150
         IF (ELEV .GE. 0.0)THEN                                         21 01160
            EAC=AQR-ELEV*ARATIO                                         21 01170
            IF (EA(NA).GT.0. .AND. DEA(NA) .GT. 0.)THEN                 21 01180
               EDIV=DEA(NA)+DEAC+DELEV                                  21 01190
               IF (EDIV.EQ.0.)  EDIV=1.                                 21 01200
               IF (ABS((EA(NA)-EAC)/EDIV).GE.3.)                        21 01210
     2           CALL MESSAG(NMESS,2,                                   21 01220
     3           'EA NOT CONSISTENT QP')                                21 01230
            ELSE                                                        21 01240
               EA(NA)=EAC                                               21 01250
               DEA(NA)=SQRT(DEAC**2+(ARATIO*DELEV)**2)                  21 01260
               CALL MESSAG(NMESS,2,'EA CALCULATED FROM QP')             21 01270
            ENDIF                                                       21 01280
         ENDIF                                                          21 01290
         CALL UNCER1(CARD(22:31),DIA(NA),IA(NA),NMESS)                  21 01300
         IF(IA(NA) .EQ. 0.)CALL WARNNG(NWARN,'NO INTENSITY GIVEN')      21 01310
         IF(CARD(30:31) .EQ. 'AP')                                      21 01320
     2     CALL MESSAG(NMESS,5,'DI=0 SET')                              21 01330
         IF(CARD(30:30) .EQ. 'G')CALL LOWLMT(IA(NA),DIA(NA),NMESS)      21 01340
         IF (CARD(30:30) .EQ. 'L')CALL UPLIMT(IA(NA),DIA(NA),NMESS)     21 01350
         IF(CARD(77:77) .EQ. '&')CALL UNDIVD(IA(NA),DIA(NA),NMESS)      21 01360
C%%%%%ENDFB                                                             21 01370
         IF(ENDF)THEN                                                   21 01380
            RTYP4(NA)=RTYP                                              21 01390
            CALL CNVU2S(EA(NA),DEA(NA),ENERGY,10,DUM,2)                 21 01400
            CALL SQZSTR(ENERGY,' ')                                     21 01410
            ES4(NA)=EA(NA)                                              21 01420
            DES4(NA)=DEA(NA)                                            21 01430
            RS4(NA)=IA(NA)                                              21 01440
            DRS4(NA)=DIA(NA)                                            21 01450
         ENDIF                                                          21 01460
C^^^^^ENDFB                                                             21 01470
         A=0.                                                           21 01480
         B=0.                                                           21 01490
         IF (BRN.NE.0.)  B=DBRN/BRN                                     21 01500
         IF (IA(NA).NE.0.)A=DIA(NA)/IA(NA)                              21 01510
         IA(NA)=IA(NA)*BRN                                              21 01520
         SUMI(1)=SUMI(1)+IA(NA)                                         21 01530
         DIA(NA)=IA(NA)*SQRT(A**2 +B**2)                                21 01540
         DSUMI(1)=DSUMI(1)+DIA(NA)**2                                   21 01550
         SUMIE(1)=SUMIE(1)+IA(NA)*EA(NA)                                21 01560
         DSUMIE(1)=DSUMIE(1)+(IA(NA)*DEA(NA))**2                        21 01570
         IF (.NOT. MIRD .AND. IA(NA).LE.RIMIN)THEN                      21 01580
            NOMIT(1)=NOMIT(1)+1                                         21 01590
            EOMIT(1)=EOMIT(1)+IA(NA)*EA(NA)                             21 01600
            OMIT(1)=OMIT(1)+IA(NA)                                      21 01610
            NA=NA-1                                                     21 01620
         ENDIF                                                          21 01630
100      CONTINUE                                                       21 01640
         READ(IDATA,FMT='(A)') CARD2                                    21 01650
         WRITE(IREPT,FMT='(1H ,A)') CARD2                               21 01660
         IF(CARD2(7:7) .NE. ' ' .AND. CARD2(8:8) .EQ. 'A')THEN          21 01670
C%%%%%ENDFB                                                             21 01680
            IF(ENDF)CALL RADCOM(CARD2,ENERGY,JCONT,NMESS)               21 01690
C^^^^^ENDFB                                                             21 01700
            GOTO 100                                                    21 01710
         ELSE                                                           21 01720
            CARD=CARD2                                                  21 01730
            RETURN                                                      21 01740
         ENDIF                                                          21 01750
         END                                                            21 01760
C                                                                       22 00010
        SUBROUTINE                                                      22 00020
     2    BETPRO(NWARN,NMESS,ENDF,MIRD,*,*,OLDSTR,AQR,DEAC,ARATIO,RTYP, 22 00030
     3      SPECTR,IZD,AD,IZDB,ADB)                                     22 00040
C                                                                       22 00050
C       Processes BETA records, comments, and continuations             22 00060
C                                                                       22 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************22 00080
C*                           Present Code                               22 00090
C*                           ------------                               22 00100
C*  LOWLMT  MESSAG  RADCOM  READ    UNCER1  UNDIVD  UPLIMT  WARNNG      22 00110
C*                                                                      22 00120
C*                           F77STR  4(2)                               22 00130
C*                           ------------                               22 00140
C*  IVLSTR  LENSTR  SQZSTR                                              22 00150
C*                                                                      22 00160
C*                           NSDCNV  2(03)                              22 00170
C*                           -------------                              22 00180
C*  CNVU2S                                                              22 00190
C*                                                                      22 00200
C*                        FORTRAN 77 Supplied                           22 00210
C*                        -------------------                           22 00220
C*  SQRT                                                                22 00230
C*                                                                      22 00240
C***********************************************************************22 00250
        INTEGER NWARN,NMESS,IZD,IZDB(*)                                 22 00260
        REAL AQR,DEAC,ARATIO,RTYP,AD,ADB(*)                             22 00270
        CHARACTER OLDSTR*5                                              22 00280
        LOGICAL ENDF,MIRD,SPECTR                                        22 00290
C                                                                       22 00300
        INTEGER AM,MAXDCY                                               22 00310
        PARAMETER (AM=99,MAXDCY=4)                                      22 00320
C                                                                       22 00330
        INTEGER NTB,ITYPM(AM)                                           22 00340
        REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,    22 00350
     2    DTBI,AVBEX,DAVBX                                              22 00360
        COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX, 22 00370
     2    NTB,ITYPM                                                     22 00380
C                                                                       22 00390
C%%%%%MIRD                                                              22 00400
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      22 00410
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               22 00420
C                                                                       22 00430
      INTEGER GMA,NLMAX                                                 22 00440
      PARAMETER (GMA=999,NLMAX=2000)                                    22 00450
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          22 00460
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 22 00470
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       22 00480
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          22 00490
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   22 00500
      INTEGER IDREC(MAXDCY)                                             22 00510
      INTEGER NLEV,NREC                                                 22 00520
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   22 00530
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 22 00540
     3  IDREC                                                           22 00550
C^^^^^MIRD                                                              22 00560
C                                                                       22 00570
        INTEGER NA,NB                                                   22 00580
        COMMON /COUNTS/ NA,NB                                           22 00590
C                                                                       22 00600
        INTEGER NOMIT(5)                                                22 00610
        REAL EOMIT(5),OMIT(5),RIMIN                                     22 00620
        COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT                           22 00630
C                                                                       22 00640
        REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                    22 00650
        COMMON /AVGS/ SUMIE,DSUMIE,SUMI,DSUMI                           22 00660
C                                                                       22 00670
        CHARACTER*80 CARD,CARD2                                         22 00680
        COMMON /CARDS/CARD,CARD2                                        22 00690
C%%%%%ENDFB                                                             22 00700
        INTEGER NSTYP1                                                  22 00710
        REAL ES1(AM),DES1(AM),RS1(AM),DRS1(AM),RTYP1(AM),TYP1(AM),AVE1, 22 00720
     2    DAVE1                                                         22 00730
        COMMON /STYP1/ES1,DES1,RS1,DRS1,RTYP1,TYP1,AVE1,DAVE1,NSTYP1    22 00740
C^^^^^ENDFB                                                             22 00750
        REAL RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM                     22 00760
        COMMON /NORMAL/RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM           22 00770
C                                                                       22 00780
        REAL ELEV,DELEV                                                 22 00790
        COMMON /LEVELS/ELEV,DELEV                                       22 00800
C                                                                       22 00810
        INTEGER IREPT,IDATA                                             22 00820
        COMMON /RPTUNT/IREPT                                            22 00830
        COMMON /DATUNT/IDATA                                            22 00840
C                                                                       22 00850
        INTEGER TYPSTR,LENSTR,IVLSTR                                    22 00860
        EXTERNAL TYPSTR,LENSTR,IVLSTR                                   22 00870
C                                                                       22 00880
        INTEGER I,ICODE,JCONT,LST                                       22 00890
        REAL XX,DXX                                                     22 00900
        CHARACTER STR*80,ENERGY*10,DUM*2                                22 00910
C                                                                       22 00920
C  Possible character strings for average energy                        22 00930
        CHARACTER*6 AVESTR(3)                                           22 00940
        DATA AVESTR/'EAV=','EAV =','EAV AP'/                            22 00950
C                                                                       22 00960
         NB=NB+1                                                        22 00970
C%%%%%MIRD                                                              22 00980
         IF(MIRD)THEN                                                   22 00990
            CALL WRITMP(MIRDTM,NREC,CARD)                               22 01000
            BREC(NB)=NREC                                               22 01010
            IF(NLEV .GE. 1)THEN                                         22 01020
               BLTO(NB)=LREC(NLEV)                                      22 01030
            ELSE                                                        22 01040
               BLTO(NB)=-1                                              22 01050
            ENDIF                                                       22 01060
         ENDIF                                                          22 01070
C^^^^^MIRD                                                              22 01080
C%%%%%SPECTR                                                            22 01090
         IF(SPECTR)THEN                                                 22 01100
            IZDB(NB)=IZD                                                22 01110
            ADB(NB)=AD                                                  22 01120
         ENDIF                                                          22 01130
C%%%%%SPECTR                                                            22 01140
         CALL UNCER1(CARD(22:31),DBMI(NB),BMI(NB),NMESS)                22 01150
         IF(BMI(NB) .EQ. 0.)CALL MESSAG(NMESS,3,'NO INTENSITY GIVEN')   22 01160
         IF(CARD(30:31) .EQ. 'AP')THEN                                  22 01170
            CALL MESSAG(NMESS,5,'DI=0 SET')                             22 01180
            DBMI(NB)=0.                                                 22 01190
         ENDIF                                                          22 01200
         IF(CARD(30:30) .EQ. 'G')THEN                                   22 01210
            IF(RNORM .LT. 1.)THEN                                       22 01220
               CALL MESSAG(NMESS,5,'DI=0 SET')                          22 01230
               DBMI(NB)=0.                                              22 01240
            ELSE                                                        22 01250
               CALL LOWLMT(BMI(NB),DBMI(NB),NMESS)                      22 01260
            ENDIF                                                       22 01270
         ENDIF                                                          22 01280
C                                                                       22 01290
         IF (CARD(30:30) .EQ. 'L')CALL UPLIMT(BMI(NB),DBMI(NB),NMESS)   22 01300
         IF(CARD(76:76) .EQ. '&')CALL UNDIVD(BMI(NB),DBMI(NB),NMESS)    22 01310
         BME(NB)=AQR-ELEV*ARATIO                                        22 01320
         DBME(NB)=SQRT(DEAC**2+(ARATIO*DELEV)**2)                       22 01330
C       SAVE UNIQUENESS                                                 22 01340
        IF(CARD(79:79) .NE. 'U')THEN                                    22 01350
           ITYPM(NB)=0                                                  22 01360
        ELSE                                                            22 01370
           ITYPM(NB)=IVLSTR(CARD(78:78))                                22 01380
           IF(ITYPM(NB) .GT. 2)ITYPM(NB)=0                              22 01390
        ENDIF                                                           22 01400
C                                                                       22 01410
         IF(ENDF)THEN                                                   22 01420
C%%%%%ENDFB                                                             22 01430
            CALL CNVU2S(BME(NB),DBME(NB),ENERGY,10,DUM,2)               22 01440
            CALL SQZSTR(ENERGY,' ')                                     22 01450
            RTYP1(NB)=RTYP                                              22 01460
            TYP1(NB)=REAL(ITYPM(NB)+1)                                  22 01470
            ES1(NB)=BME(NB)                                             22 01480
            DES1(NB)=DBME(NB)                                           22 01490
            RS1(NB)=BMI(NB)                                             22 01500
            DRS1(NB)=DBMI(NB)                                           22 01510
C^^^^^ENDFB                                                             22 01520
         ENDIF                                                          22 01530
         DBMI(NB)=BNORM*DBMI(NB)                                        22 01540
         BMI(NB)=BNORM*BMI(NB)                                          22 01550
         SUMI(2)=SUMI(2)+BMI(NB)                                        22 01560
         DSUMI(2)=DSUMI(2)+DBMI(NB)**2                                  22 01570
C                  Read second B- record for average energy             22 01580
         DEVM(NB)=0.                                                    22 01590
         EVM(NB)=0.                                                     22 01600
100      CONTINUE                                                       22 01610
         READ(IDATA,FMT='(A)') CARD2                                    22 01620
         WRITE(IREPT,FMT='(1H ,A)') CARD2                               22 01630
         IF (CARD2(7:7) .NE. ' ')THEN                                   22 01640
C%%%%%ENDFB                                                             22 01650
            IF(ENDF)CALL RADCOM(CARD2,ENERGY,JCONT,NMESS)               22 01660
C^^^^^ENDFB                                                             22 01670
            GO TO 100                                                   22 01680
         ENDIF                                                          22 01690
         IF (CARD2 .EQ. ' ')THEN                                        22 01700
            IF(NB .GE. 1)THEN                                           22 01710
               IF(EVM(NB) .EQ. 0.)RETURN 2                              22 01720
            ENDIF                                                       22 01730
            CARD=CARD2                                                  22 01740
            RETURN 1                                                    22 01750
         ENDIF                                                          22 01760
         IF(NB .GE. 1)THEN                                              22 01770
            IF(EVM(NB) .EQ. 0.)THEN                                     22 01780
               IF(CARD2(8:8) .NE. 'B' .OR. CARD2(6:6) .EQ. '1'          22 01790
     2           .OR. CARD2(6:6) .EQ. ' ')THEN                          22 01800
                  RETURN 2                                              22 01810
               ENDIF                                                    22 01820
            ELSE                                                        22 01830
               IF(CARD2(8:8) .NE. 'B')THEN                              22 01840
                  CARD=CARD2                                            22 01850
                  RETURN                                                22 01860
               ENDIF                                                    22 01870
            ENDIF                                                       22 01880
         ELSE                                                           22 01890
            IF(CARD2(8:8) .NE. 'B')THEN                                 22 01900
               CARD=CARD2                                               22 01910
               RETURN                                                   22 01920
            ENDIF                                                       22 01930
         ENDIF                                                          22 01940
         STR=CARD2(1:5)                                                 22 01950
         CALL SQZSTR(STR,' ')                                           22 01960
         LST=LENSTR(STR)                                                22 01970
C                  Second record's first five characters are not        22 01980
C                  blanks or correct NUCID (from ID record)             22 01990
         IF ((LST .NE. 0) .AND.  (STR .NE. OLDSTR)) THEN                22 02000
            CARD=CARD2                                                  22 02010
            RETURN 1                                                    22 02020
         ENDIF                                                          22 02030
         IF(NB .LT. 1)GOTO 100                                          22 02040
C%%%%%MIRD                                                              22 02050
         IF(MIRD)CALL WRITMP(MIRDTM,NREC,CARD2)                         22 02060
C^^^^^MIRD                                                              22 02070
C                  IF second record is good, get average energy from it 22 02080
        DO 200 I=1,3                                                    22 02090
           CALL READ(CARD2(10:80),AVESTR(I),XX,DXX,ICODE)               22 02100
           IF(ICODE .NE. 0)THEN                                         22 02110
              IF(EVM(NB) .NE. 0.)THEN                                   22 02120
                  CALL WARNNG(NWARN,                                    22 02130
     2              'CONFLICTS WITH PREVIOUS '//AVESTR(I))              22 02140
                  GOTO 200                                              22 02150
              ELSE                                                      22 02160
                 IF(I .EQ. 3)THEN                                       22 02170
                    CALL MESSAG(NMESS,5,'DE=0 SET')                     22 02180
                    DXX=0.                                              22 02190
                 ENDIF                                                  22 02200
                 EVM(NB)=XX                                             22 02210
                 DEVM(NB)=DXX                                           22 02220
              ENDIF                                                     22 02230
              GOTO 250                                                  22 02240
           ENDIF                                                        22 02250
200     CONTINUE                                                        22 02260
         GOTO 100                                                       22 02270
250      CONTINUE                                                       22 02280
         TBI=TBI+BMI(NB)                                                22 02290
         AVBEX=AVBEX+BMI(NB)*EVM(NB)                                    22 02300
         SUMIE(9)=SUMIE(9)+BMI(NB)*BME(NB)                              22 02310
         DSUMIE(2)=DSUMIE(2)+(BMI(NB)*DEVM(NB))**2                      22 02320
     2     +(EVM(NB)*DBMI(NB))**2                                       22 02330
         DAVBX=DAVBX+(BMI(NB)*DEVM(NB))**2                              22 02340
     2     +(EVM(NB)*DBMI(NB))**2                                       22 02350
C                                                                       22 02360
C    Save average neutrino energy                                       22 02370
C                                                                       22 02380
         SUMIE(7)=SUMIE(7)+(BME(NB)-EVM(NB))*BMI(NB)                    22 02390
         DSUMIE(7)=DSUMIE(7)+(BMI(NB)*DEVM(NB))**2                      22 02400
     2     +((BME(NB)-EVM(NB))*DBMI(NB))**2                             22 02410
         IF (.NOT. MIRD .AND. BMI(NB) .LT. RIMIN) THEN                  22 02420
            NOMIT(2)=NOMIT(2)+1                                         22 02430
            EOMIT(2)=EOMIT(2)+BMI(NB)*EVM(NB)                           22 02440
            OMIT(2)=OMIT(2)+BMI(NB)                                     22 02450
            NB=NB-1                                                     22 02460
         ENDIF                                                          22 02470
         GOTO 100                                                       22 02480
         END                                                            22 02490
C                                                                       23 00010
        SUBROUTINE                                                      23 00020
     2    ECPRO(NWARN,NMESS,ENDF,MIRD,*,*,OLDSTR,ARATIO,RTYP,Q,DQ,NDK,  23 00030
     2    SPECTR,IZD,AD,IZDP,ADP)                                       23 00040
C                                                                       23 00050
C       Processes ELECTRON-CAPTURE records, comments, and continuations 23 00060
C                                                                       23 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************23 00080
C*                           Present Code                               23 00090
C*                           ------------                               23 00100
C*  LOWLMT  MESSAG  RADCOM  READ    UNCER1  UNDIVD  UPLIMT  WARNNG      23 00110
C*                                                                      23 00120
C*                           F77STR  4(2)                               23 00130
C*                           ------------                               23 00140
C*  IVLSTR  LENSTR  SQZSTR                                              23 00150
C*                                                                      23 00160
C*                           NSDCNV  2(03)                              23 00170
C*                           -------------                              23 00180
C*  CNVU2S                                                              23 00190
C*                                                                      23 00200
C*                        FORTRAN 77 Supplied                           23 00210
C*                        -------------------                           23 00220
C*  SQRT                                                                23 00230
C*                                                                      23 00240
C***********************************************************************23 00250
        INTEGER NWARN,NMESS,NDK,IZD,IZDP(*)                             23 00260
        REAL ARATIO,RTYP,Q,DQ,AD,ADP(*)                                 23 00270
        CHARACTER OLDSTR*5                                              23 00280
        LOGICAL ENDF,SPECTR,MIRD                                        23 00290
C                                                                       23 00300
        INTEGER AM,MAXDCY                                               23 00310
        PARAMETER (AM=99,MAXDCY=4)                                      23 00320
C                                                                       23 00330
        INTEGER NTP,ITYPP(AM),KLASS(AM)                                 23 00340
        REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),    23 00350
     2    EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,   23 00360
     3    DTPI,AVPEX,DAVPX                                              23 00370
        COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,   23 00380
     2    PINT,DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP              23 00390
C                                                                       23 00400
C%%%%%MIRD                                                              23 00410
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      23 00420
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               23 00430
C                                                                       23 00440
      INTEGER GMA,NLMAX                                                 23 00450
      PARAMETER (GMA=999,NLMAX=2000)                                    23 00460
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          23 00470
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 23 00480
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       23 00490
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          23 00500
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   23 00510
      INTEGER IDREC(MAXDCY)                                             23 00520
      INTEGER NLEV,NREC                                                 23 00530
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   23 00540
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 23 00550
     3  IDREC                                                           23 00560
C^^^^^MIRD                                                              23 00570
C                                                                       23 00580
        INTEGER NA,NB,NE,NK1                                            23 00590
        COMMON /COUNTS/ NA,NB,NE,NK1                                    23 00600
C                                                                       23 00610
        INTEGER NOMIT(5)                                                23 00620
        REAL EOMIT(5),OMIT(5),RIMIN                                     23 00630
        COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT                           23 00640
C                                                                       23 00650
        REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                    23 00660
        COMMON /AVGS/ SUMIE,DSUMIE,SUMI,DSUMI                           23 00670
C                                                                       23 00680
        REAL RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN            23 00690
        COMMON /NORMAL/RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN  23 00700
C                                                                       23 00710
        REAL ELEV,DELEV                                                 23 00720
        COMMON /LEVELS/ELEV,DELEV                                       23 00730
C                                                                       23 00740
        CHARACTER*80 CARD,CARD2                                         23 00750
        COMMON /CARDS/CARD,CARD2                                        23 00760
C%%%%%ENDFB                                                             23 00770
        INTEGER NSTYP2                                                  23 00780
        REAL ES2(AM),DES2(AM),RS2(AM),DRS2(AM),RIS2(AM),DRIS2(AM),      23 00790
     2    RTYP2(AM),TYP2(AM),AVE2,DAVE2                                 23 00800
        COMMON /STYP2/ES2,DES2,RS2,DRS2,RIS2,DRIS2,RTYP2,TYP2,AVE2,     23 00810
     2    DAVE2,NSTYP2                                                  23 00820
C^^^^^ENDFB                                                             23 00830
        REAL WK(MAXDCY),DWK(MAXDCY),WL(MAXDCY),DWL(MAXDCY),ENKL(MAXDCY),23 00840
     2    DENKL(MAXDCY),BTOA(MAXDCY),DBTOA(MAXDCY),A2TOA1(MAXDCY),      23 00850
     3    DEA2A1(MAXDCY),BE(MAXDCY,5),DBE(MAXDCY,5)                     23 00860
        COMMON /ELCOM/ WK,DWK,WL,DWL,ENKL,DENKL,BTOA,DBTOA,A2TOA1,      23 00870
     3    DEA2A1,BE,DBE                                                 23 00880
C                                                                       23 00890
        REAL TERMK(MAXDCY),TERMK1(MAXDCY),TERML(MAXDCY),TERML1(MAXDCY), 23 00900
     2    DTERMK(MAXDCY),DTERML(MAXDCY),DTRMK1(MAXDCY),DTRML1(MAXDCY)   23 00910
        COMMON /XCOM/ TERMK,TERMK1,TERML,TERML1,DTERMK,DTERML,DTRMK1,   23 00920
     2    DTRML1                                                        23 00930
C                                                                       23 00940
        INTEGER IREPT,IDATA                                             23 00950
        COMMON /RPTUNT/IREPT                                            23 00960
        COMMON /DATUNT/IDATA                                            23 00970
C                                                                       23 00980
        INTEGER TYPSTR,IVLSTR,LENSTR                                    23 00990
        EXTERNAL TYPSTR,IVLSTR,LENSTR                                   23 01000
C                                                                       23 01010
        INTEGER I,ICODE,J,JCONT,LST                                     23 01020
        REAL A,B,C,D,T1,TI,DTI,XX,DXX                                   23 01030
        CHARACTER*10 ENERGY                                             23 01040
        CHARACTER STR*80,DUM*2                                          23 01050
        LOGICAL FOUND                                                   23 01060
C                                                                       23 01070
C  Character strings required to decode "2 E" records                   23 01080
        CHARACTER*4 ECSTR(5,2)                                          23 01090
        DATA ((ECSTR(J,I),I=1,2),J=1,5)/'K=','K =','L=','L =',          23 01100
     2   'M=','M =','M+=','M+ =','N+=','N+ ='/                          23 01110
C                                                                       23 01120
C  Possible character strings for average energy                        23 01130
        CHARACTER*6 AVESTR(3)                                           23 01140
        DATA AVESTR/'EAV=','EAV =','EAV AP'/                            23 01150
C                                                                       23 01160
         TI=0.                                                          23 01170
         DTI=0.                                                         23 01180
C  Does positron occur?                                                 23 01190
C    NE is the total number of E records                                23 01200
         NE=NE+1                                                        23 01210
C%%%%%MIRD                                                              23 01220
         IF(MIRD)THEN                                                   23 01230
            CALL WRITMP(MIRDTM,NREC,CARD)                               23 01240
            EREC(NE)=NREC                                               23 01250
            IF(NLEV .GE. 1)THEN                                         23 01260
               ELTO(NE)=LREC(NLEV)                                      23 01270
            ELSE                                                        23 01280
               ELTO(NE)=-1                                              23 01290
            ENDIF                                                       23 01300
         ENDIF                                                          23 01310
C^^^^^MIRD                                                              23 01320
         IF(SPECTR)THEN                                                 23 01330
            IZDP(NE)=IZD                                                23 01340
            ADP(NE)=AD                                                  23 01350
         ENDIF                                                          23 01360
        IF(CARD(79:79) .NE. 'U')THEN                                    23 01370
           ITYPP(NE)=0                                                  23 01380
        ELSE                                                            23 01390
           ITYPP(NE)=IVLSTR(CARD(78:78))                                23 01400
           IF(ITYPP(NE) .GT. 2)ITYPP(NE)=0                              23 01410
        ENDIF                                                           23 01420
C%%%%%ENDFB                                                             23 01430
         IF(ENDF)THEN                                                   23 01440
            RTYP2(NE)=RTYP                                              23 01450
            TYP2(NE)=REAL(ITYPP(NE)+1)                                  23 01460
         ENDIF                                                          23 01470
C^^^^^ENDFB                                                             23 01480
         EECA(NE)=Q/1000.-ELEV                                          23 01490
         DEECA(NE)=SQRT((1.0E-6)*DQ**2+DELEV**2)                        23 01500
C%%%%%ENDFB                                                             23 01510
        IF(ENDF)THEN                                                    23 01520
           CALL CNVU2S(EECA(NE),DEECA(NE),ENERGY,10,DUM,2)              23 01530
           CALL SQZSTR(ENERGY,' ')                                      23 01540
           ES2(NE)=EECA(NE)                                             23 01550
           DES2(NE)=DEECA(NE)                                           23 01560
        ENDIF                                                           23 01570
C^^^^^ENDFB                                                             23 01580
        CALL UNCER1(CARD(32:41),DECAI(NE),ECAI(NE),NMESS)               23 01590
         IF(CARD(40:41) .EQ. 'AP')THEN                                  23 01600
            CALL MESSAG(NMESS,5,'DI=0 SET')                             23 01610
            DECAI(NE)=0.                                                23 01620
         ENDIF                                                          23 01630
         IF(CARD(40:40) .EQ. 'G')THEN                                   23 01640
            IF(BNORM .LT. 1.)THEN                                       23 01650
               CALL MESSAG(NMESS,5,'DI=0 SET')                          23 01660
               DECAI(NE)=0.                                             23 01670
            ELSE                                                        23 01680
               CALL LOWLMT(ECAI(NE),DECAI(NE),NMESS)                    23 01690
            ENDIF                                                       23 01700
         ENDIF                                                          23 01710
         IF (CARD(40:40) .EQ. 'L')CALL UPLIMT(ECAI(NE),DECAI(NE),NMESS) 23 01720
         IF(CARD(77:77) .EQ. '&')CALL UNDIVD(ECAI(NE),DECAI(NE),NMESS)  23 01730
C%%%%%ENDFB                                                             23 01740
         IF(ENDF)THEN                                                   23 01750
            RS2(NE)=ECAI(NE)                                            23 01760
            DRS2(NE)=DECAI(NE)                                          23 01770
         ENDIF                                                          23 01780
C^^^^^ENDFB                                                             23 01790
         IF(CARD(22:29) .EQ. ' ')THEN                                   23 01800
C                  Without positron                                     23 01810
            KLASS(NE)=2                                                 23 01820
            PINT(NE)=0.                                                 23 01830
            DPINT(NE)=0.                                                23 01840
         ELSE                                                           23 01850
C                  With positron                                        23 01860
C  NK1 is the number of E records which have positrons                  23 01870
            NK1=NK1+1                                                   23 01880
            KLASS(NE)=1                                                 23 01890
            CALL UNCER1(CARD(22:31),DPINT(NE),PINT(NE),NMESS)           23 01900
            IF(CARD(30:31) .EQ. 'AP')THEN                               23 01910
               CALL MESSAG(NMESS,5,'DI=0 SET')                          23 01920
               DPINT(NE)=0.                                             23 01930
            ENDIF                                                       23 01940
            IF(CARD(30:30) .EQ. 'G')THEN                                23 01950
               IF(BNORM .LT. 1.)THEN                                    23 01960
                  CALL MESSAG(NMESS,5,'DI=0 SET')                       23 01970
                  DPINT(NE)=0.                                          23 01980
               ELSE                                                     23 01990
                  CALL LOWLMT(PINT(NE),DPINT(NE),NMESS)                 23 02000
               ENDIF                                                    23 02010
            ENDIF                                                       23 02020
            IF (CARD(30:30) .EQ. 'L')                                   23 02030
     2        CALL UPLIMT(PINT(NE),DPINT(NE),NMESS)                     23 02040
            IF(CARD(77:77) .EQ. '&')                                    23 02050
     2        CALL UNDIVD(PINT(NE),DPINT(NE),NMESS)                     23 02060
C%%%%%ENDFB                                                             23 02070
            IF(ENDF)THEN                                                23 02080
               RIS2(NE)=PINT(NE)                                        23 02090
               DRIS2(NE)=DPINT(NE)                                      23 02100
            ENDIF                                                       23 02110
C^^^^^ENDFB                                                             23 02120
         ENDIF                                                          23 02130
C                                                                       23 02140
         EBP(NE)=ARATIO*(EECA(NE) - 1022.)                              23 02150
         DEBP(NE)= ARATIO*DEECA(NE)                                     23 02160
C                                                                       23 02170
         IF (EBP(NE).LE.0. .AND. KLASS(NE) .EQ. 1)THEN                  23 02180
            KLASS(NE)=2                                                 23 02190
            IF(NK1 .GT. 0)NK1=NK1-1                                     23 02200
         ENDIF                                                          23 02210
C                                                                       23 02220
         CALL UNCER1(CARD(65:76),DTI,TI,NMESS)                          23 02230
         IF(CARD(75:76) .EQ. 'AP')THEN                                  23 02240
            CALL MESSAG(NMESS,5,'DI=0 SET')                             23 02250
            DTI=0.                                                      23 02260
         ENDIF                                                          23 02270
         IF(CARD(75:75) .EQ. 'G')THEN                                   23 02280
            IF(BNORM .LT. 1.)THEN                                       23 02290
               CALL MESSAG(NMESS,5,'DI=0 SET')                          23 02300
               DTI=0.                                                   23 02310
            ELSE                                                        23 02320
               CALL LOWLMT(TI,DTI,NMESS)                                23 02330
            ENDIF                                                       23 02340
         ENDIF                                                          23 02350
         IF (CARD(75:75) .EQ. 'L')CALL UPLIMT(TI,DTI,NMESS)             23 02360
         IF(CARD(77:77) .EQ. '&')CALL UNDIVD(TI,DTI,NMESS)              23 02370
C                                                                       23 02380
            IF(TI .NE. 0.)THEN                                          23 02390
               IF(ECAI(NE) .EQ. 0. .AND. PINT(NE) .EQ. 0.)THEN          23 02400
                  IF(EBP(NE) .LE. 50.)THEN                              23 02410
                     ECAI(NE)=TI                                        23 02420
                     DECAI(NE)=DTI                                      23 02430
                     CALL MESSAG(NMESS,1,'IE=TI SET')                   23 02440
                     IF(KLASS(NE) .EQ. 2)THEN                           23 02450
                        KLASS(NE)=2                                     23 02460
                        IF(NK1 .GT. 0)NK1=NK1-1                         23 02470
                     ENDIF                                              23 02480
                  ELSE                                                  23 02490
                     IF(EBP(NE) .GE. 9000.)THEN                         23 02500
                        PINT(NE)=TI                                     23 02510
                        DPINT(NE)=DTI                                   23 02520
                        CALL MESSAG(NMESS,1,'IB=TI SET')                23 02530
                        IF(KLASS(NE) .NE. 1)THEN                        23 02540
                           KLASS(NE)=1                                  23 02550
                           NK1=NK1+1                                    23 02560
                        ENDIF                                           23 02570
                     ELSE                                               23 02580
                        CALL WARNNG(NWARN,'IB & IE NOT GIVEN')          23 02590
                     ENDIF                                              23 02600
                  ENDIF                                                 23 02610
               ENDIF                                                    23 02620
               DTI=SQRT((BNORM*DTI)**2+(DBNORM*TI)**2)                  23 02630
               TI=BNORM*TI                                              23 02640
            ELSE                                                        23 02650
               TI=BNORM*(ECAI(NE)+PINT(NE))                             23 02660
               DTI=SQRT((BNORM**2)*(DECAI(NE)**2+DPINT(NE)**2)+         23 02670
     2           (DBNORM*(ECAI(NE)+PINT(NE)))**2)                       23 02680
               IF(TI .EQ. 0.)CALL WARNNG(NWARN,'NO INTENSITIES GIVEN')  23 02690
            ENDIF                                                       23 02700
C                                                                       23 02710
            DECAI(NE)=SQRT((BNORM*DECAI(NE))**2+(DBNORM*ECAI(NE))**2)   23 02720
            ECAI(NE)=BNORM*ECAI(NE)                                     23 02730
C                                                                       23 02740
            DPINT(NE)=SQRT((BNORM*DPINT(NE))**2+(DBNORM*DPINT(NE))**2)  23 02750
            PINT(NE)=BNORM* PINT(NE)                                    23 02760
C                                                                       23 02770
         TPI=TPI+PINT(NE)                                               23 02780
         SUMI(2)=SUMI(2)+TI                                             23 02790
         DSUMI(2)=DSUMI(2)+DTI**2                                       23 02800
         SUMIE(9)=SUMIE(9)+TI*EECA(NE)                                  23 02810
         IF (TI .EQ. 0.)SUMIE(9)=SUMIE(9)+EECA(NE)*(PINT(NE)+ECAI(NE))  23 02820
         A=ECAI(NE)                                                     23 02830
         IF (A.EQ.0.)A=TI-PINT(NE)                                      23 02840
         IF (A.LT.0.)A=0.                                               23 02850
         SUMIE(7)=SUMIE(7)+A*EECA(NE)                                   23 02860
         B=DECAI(NE)                                                    23 02870
         IF (B.EQ.0.) B=DTI                                             23 02880
         IF (A.EQ.0.) B=0.                                              23 02890
         DSUMIE(7)=DSUMIE(7)+(B*EECA(NE))**2+(A*DEECA(NE))**2           23 02900
C                  Read second E record                                 23 02910
         DO 100  I=1,5                                                  23 02920
            EC(NE,I)=0.                                                 23 02930
            DEC(NE,I)=0.                                                23 02940
100      CONTINUE                                                       23 02950
         EVP(NE)=0.                                                     23 02960
150   CONTINUE                                                          23 02970
         READ(IDATA,FMT='(A)') CARD2                                    23 02980
         WRITE(IREPT,FMT='(1H ,A)') CARD2                               23 02990
         IF (CARD2(7:7) .NE. ' ')THEN                                   23 03000
C%%%%%ENDFB                                                             23 03010
            IF(ENDF)CALL RADCOM(CARD2,ENERGY,JCONT,NMESS)               23 03020
C^^^^^ENDFB                                                             23 03030
            GO TO 150                                                   23 03040
         ENDIF                                                          23 03050
         IF(CARD2 .EQ. ' ')THEN                                         23 03060
            CARD=CARD2                                                  23 03070
            IF(NE .LE. 0)RETURN 2                                       23 03080
            IF(EVP(NE) .NE. 0.)RETURN 1                                 23 03090
            DO 160 I=1,5                                                23 03100
               IF(EC(NE,I) .NE. 0.)RETURN 1                             23 03110
160         CONTINUE                                                    23 03120
            RETURN 2                                                    23 03130
         ENDIF                                                          23 03140
         IF(CARD2(8:8) .NE. 'E' .OR. CARD2(6:6) .EQ. ' '                23 03150
     2     .OR. CARD2(6:6) .EQ. '1')THEN                                23 03160
            IF(NE .LE. 0)THEN                                           23 03170
               RETURN 2                                                 23 03180
            ENDIF                                                       23 03190
            IF(EVP(NE) .NE. 0.)RETURN                                   23 03200
            DO 170 I=1,5                                                23 03210
               IF(EC(NE,I) .NE. 0.)RETURN                               23 03220
170         CONTINUE                                                    23 03230
            RETURN 2                                                    23 03240
         ENDIF                                                          23 03250
         IF (TI .EQ. 0.) SUMIE(9)=SUMIE(9)+EECA(NE)*(PINT(NE)+ECAI(NE)) 23 03260
         STR=CARD2(1:5)                                                 23 03270
         CALL SQZSTR(STR,' ')                                           23 03280
         LST=LENSTR(STR)                                                23 03290
         IF ((LST.NE.0) .AND. (STR .NE. OLDSTR)) THEN                   23 03300
            CARD=CARD2                                                  23 03310
            RETURN 1                                                    23 03320
         ENDIF                                                          23 03330
        FOUND=.FALSE.                                                   23 03340
C%%%%%MIRD                                                              23 03350
         IF(MIRD)CALL WRITMP(MIRDTM,NREC,CARD2)                         23 03360
C^^^^^                                                                  23 03370
        DO 400 I=1,5                                                    23 03380
           DO 350 J=1,2                                                 23 03390
              CALL READ(CARD2(10:80),ECSTR(I,J),XX,DXX,ICODE)           23 03400
              IF(ICODE .NE. 0)THEN                                      23 03410
                  IF(EC(NE,I) .NE. 0.)THEN                              23 03420
                     CALL WARNNG(NWARN,'CONFLICTS WITH PREVIOUS '//     23 03430
     2                 ECSTR(I,J))                                      23 03440
                  ELSE                                                  23 03450
                     FOUND=.TRUE.                                       23 03460
                     EC(NE,I)=XX                                        23 03470
                     DEC(NE,I)=DXX                                      23 03480
                  ENDIF                                                 23 03490
               ENDIF                                                    23 03500
350        CONTINUE                                                     23 03510
400     CONTINUE                                                        23 03520
        IF(FOUND)THEN                                                   23 03530
           IF (EC(NE,3).LE.EC(NE,4) .AND. EC(NE,3).NE.0. .AND.          23 03540
     2       EC(NE,5).EQ.0.) THEN                                       23 03550
              EC(NE,5)=EC(NE,4)-EC(NE,3)                                23 03560
              DEC(NE,5)=DEC(NE,4)**2+DEC(NE,3)**2                       23 03570
           ENDIF                                                        23 03580
           A=0.                                                         23 03590
           B=0.                                                         23 03600
           IF (TI .EQ. 0.)THEN                                          23 03610
              TI=ECAI(NE)+PINT(NE)                                      23 03620
              DTI=SQRT(DECAI(NE)**2+DPINT(NE)**2)                       23 03630
           ENDIF                                                        23 03640
           T1=TI*EC(NE,1)                                               23 03650
           TERMK1(NDK)=TERMK1(NDK)+T1                                   23 03660
           A=DTRMK1(NDK)**2                                             23 03670
           B=T1**2                                                      23 03680
           IF (EC(NE,1).NE.0.)THEN                                      23 03690
              C=(DEC(NE,1)/EC(NE,1))**2                                 23 03700
           ELSE                                                         23 03710
              C=0.                                                      23 03720
           ENDIF                                                        23 03730
           IF (TI.NE.0.)THEN                                            23 03740
              D=(DTI/TI)**2                                             23 03750
           ELSE                                                         23 03760
              D=0.                                                      23 03770
           ENDIF                                                        23 03780
           DTRMK1(NDK)=SQRT(A+B*(C+D))                                  23 03790
           T1=TI*EC(NE,2)                                               23 03800
           TERML1(NDK)=TERML1(NDK)+T1                                   23 03810
           A= DTRML1(NDK)**2                                            23 03820
           B=T1**2                                                      23 03830
           IF (EC(NE,2).NE.0.)THEN                                      23 03840
              C=(DEC(NE,2)/EC(NE,2))**2                                 23 03850
           ELSE                                                         23 03860
              C=0.                                                      23 03870
           ENDIF                                                        23 03880
           DTRML1(NDK)=SQRT(A+B*(C+D))                                  23 03890
           DO 200  I=1,5                                                23 03900
              IF (EC(NE,I).NE.0.)THEN                                   23 03910
                 C=(DEC(NE,I)/EC(NE,I))**2                              23 03920
              ELSE                                                      23 03930
                 C=0.                                                   23 03940
              ENDIF                                                     23 03950
              EC(NE,I)=TI*EC(NE,I)                                      23 03960
C Correct neutrino energy SUMIE(7) and total energy SUMIE(9)            23 03970
C   for atomic vacancies which appear later as X rays                   23 03980
              A=BE(NDK,I)*EC(NE,I)                                      23 03990
              SUMIE(7)=SUMIE(7)-A                                       23 04000
              SUMIE(9)=SUMIE(9)-A                                       23 04010
              DEC(NE,I)=EC(NE,I)*SQRT(C+D)                              23 04020
200        CONTINUE                                                     23 04030
        ENDIF                                                           23 04040
        DO 250 I=1,3                                                    23 04050
           CALL READ(CARD2(10:80),AVESTR(I),XX,DXX,ICODE)               23 04060
           IF(ICODE .NE. 0)THEN                                         23 04070
              IF(EVP(NE) .NE. 0.)THEN                                   23 04080
                 CALL WARNNG(NWARN,                                     23 04090
     2             'CONFLICTS WITH PREVIOUS '//AVESTR(I))               23 04100
                 GOTO 250                                               23 04110
              ELSE                                                      23 04120
                 IF(I .EQ. 3)THEN                                       23 04130
                    CALL MESSAG(NMESS,5,'DE=0 SET')                     23 04140
                    DXX=0.                                              23 04150
                 ENDIF                                                  23 04160
                 EVP(NE)=XX                                             23 04170
                 DEVP(NE)=DXX                                           23 04180
              ENDIF                                                     23 04190
              GOTO 300                                                  23 04200
           ENDIF                                                        23 04210
250     CONTINUE                                                        23 04220
300     CONTINUE                                                        23 04230
         IF(EVP(NE) .GT. EBP(NE) .AND. EBP(NE) .GT. 0.)THEN             23 04240
            CALL WARNNG(NWARN,'<EB+> GREATER THAN EB+ OR IB+=0')        23 04250
         ELSE                                                           23 04260
            DSUMIE(2)=DSUMIE(2)+(PINT(NE)*DEVP(NE))**2                  23 04270
     2                 +(DPINT(NE)*EVP(NE))**2                          23 04280
            AVPEX=AVPEX+EVP(NE)*PINT(NE)                                23 04290
            DAVPX=DAVPX+(DEVP(NE)*PINT(NE))**2+(EVP(NE)*DPINT(NE))**2   23 04300
C                                                                       23 04310
C   Save average neutrino energy                                        23 04320
C                                                                       23 04330
            IF(EBP(NE) .GT. 0.)THEN                                     23 04340
               A=EBP(NE)-EVP(NE)                                        23 04350
               SUMIE(7)=SUMIE(7)+A*PINT(NE)                             23 04360
               DSUMIE(7)=DSUMIE(7)+(PINT(NE)*DEBP(NE))**2               23 04370
     2           +(DPINT(NE)*A)**2                                      23 04380
            ENDIF                                                       23 04390
         ENDIF                                                          23 04400
         A=0.                                                           23 04410
         B=0.                                                           23 04420
         IF (KLASS(NE).EQ.1)THEN                                        23 04430
            IF (.NOT. MIRD .AND. PINT(NE).LT.RIMIN)THEN                 23 04440
               IF(NK1 .GT. 0)NK1=NK1-1                                  23 04450
               NOMIT(2)=NOMIT(2)+1                                      23 04460
               EOMIT(2)=EOMIT(2)+EVP(NE)*PINT(NE)                       23 04470
               OMIT(2)=OMIT(2)+PINT(NE)                                 23 04480
               KLASS(NE)=2                                              23 04490
            ENDIF                                                       23 04500
         ENDIF                                                          23 04510
         IF (.NOT. MIRD .AND. TI.LT.RIMIN)THEN                          23 04520
            NOMIT(5)=NOMIT(5)+1                                         23 04530
            OMIT(5)=OMIT(5)+EC(NE,1)+EC(NE,2)+EC(NE,3)+EC(NE,4)         23 04540
     2        +EC(NE,5)                                                 23 04550
            IF(NE .GT. 0)NE=NE-1                                        23 04560
         ENDIF                                                          23 04570
         GOTO 150                                                       23 04580
         END                                                            23 04590
C                                                                       24 00010
        SUBROUTINE                                                      24 00020
     2    GAMPRO(NWARN,NMESS,ENDF,MIRD,*,*,OLDSTR,RTYP)                 24 00030
C                                                                       24 00040
C       Processes GAMMA records, comments, and continuations            24 00050
C                                                                       24 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************24 00070
C*                           Present Code                               24 00080
C*                           ------------                               24 00090
C*  MESSAG  RADCOM  READ    UNCER1  UNDIVD  UPLIMT  WARNNG              24 00100
C*                                                                      24 00110
C*                           F77STR  4(2)                               24 00120
C*                           ------------                               24 00130
C*  LENSTR  SQZSTR                                                      24 00140
C*                                                                      24 00150
C*                        FORTRAN 77 Supplied                           24 00160
C*                        -------------------                           24 00170
C*  ABS     INDEX   SQRT                                                24 00180
C*                                                                      24 00190
C***********************************************************************24 00200
        INTEGER NWARN,NMESS                                             24 00210
        REAL RTYP                                                       24 00220
        CHARACTER OLDSTR*(*)                                            24 00230
        LOGICAL ENDF,MIRD                                               24 00240
C                                                                       24 00250
        INTEGER GMA,MAXDCY                                              24 00260
        PARAMETER (GMA=999,MAXDCY=4)                                    24 00270
C                                                                       24 00280
        INTEGER IDECAY(GMA)                                             24 00290
        REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5),  24 00300
     2    E2I,DE2I                                                      24 00310
        COMMON /GDATA/ EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY           24 00320
C                                                                       24 00330
C%%%%%MIRD                                                              24 00340
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      24 00350
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               24 00360
C                                                                       24 00370
      INTEGER AM,NLMAX                                                  24 00380
      PARAMETER (AM=99,NLMAX=2000)                                      24 00390
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          24 00400
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 24 00410
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       24 00420
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          24 00430
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   24 00440
      INTEGER IDREC(MAXDCY)                                             24 00450
      INTEGER NLEV,NREC                                                 24 00460
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   24 00470
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 24 00480
     3  IDREC                                                           24 00490
      REAL RTYPG(GMA)                                                   24 00500
      COMMON /GFROM/RTYPG                                               24 00510
C^^^^^MIRD                                                              24 00520
C                                                                       24 00530
        INTEGER NA,NB,NE,NK1,NG                                         24 00540
        COMMON /COUNTS/ NA,NB,NE,NK1,NG                                 24 00550
C                                                                       24 00560
        REAL TERMK(MAXDCY),TERMK1(MAXDCY),TERML(MAXDCY),TERML1(MAXDCY), 24 00570
     2    DTERMK(MAXDCY),DTERML(MAXDCY)                                 24 00580
        COMMON /XCOM/ TERMK,TERMK1,TERML,TERML1,DTERMK,DTERML           24 00590
C                                                                       24 00600
        CHARACTER*80 CARD,CARD2                                         24 00610
        COMMON /CARDS/CARD,CARD2                                        24 00620
C                                                                       24 00630
        REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                    24 00640
        COMMON /AVGS/ SUMIE,DSUMIE,SUMI,DSUMI                           24 00650
C                                                                       24 00660
        REAL RNORM,DRNORM,TNORM,DTNORM                                  24 00670
        COMMON /NORMAL/RNORM,DRNORM,TNORM,DTNORM                        24 00680
C                                                                       24 00690
        INTEGER METNUM,LEVNUM                                           24 00700
        REAL ELEV,DELEV                                                 24 00710
        COMMON /LEVELS/ELEV,DELEV,METNUM,LEVNUM                         24 00720
C%%%%%ENDFB                                                             24 00730
        INTEGER KCOMNT,NDK                                              24 00740
        COMMON /ENDCNT/KCOMNT,NDK                                       24 00750
        INTEGER NSTYP0                                                  24 00760
        REAL ES0(GMA),DES0(GMA),RS0(GMA),DRS0(GMA),RICC(GMA),DRICC(GMA),24 00770
     2    RICK(GMA),DRICK(GMA),RICL(GMA),DRICL(GMA),RIS(GMA),DRIS(GMA), 24 00780
     3    RTYP0(GMA),AVE0,DAVE0                                         24 00790
        COMMON /STYP0/ES0,DES0,RS0,DRS0,RICC,DRICC,RICK,DRICK,RICL,     24 00800
     2    DRICL,RIS,DRIS,RTYP0,AVE0,DAVE0,NSTYP0                        24 00810
C^^^^^ENDFB                                                             24 00820
        INTEGER IREPT,IDATA                                             24 00830
        COMMON /RPTUNT/IREPT                                            24 00840
        COMMON /DATUNT/IDATA                                            24 00850
C                                                                       24 00860
        INTEGER TYPSTR,LENSTR                                           24 00870
        EXTERNAL TYPSTR,LENSTR                                          24 00880
C                                                                       24 00890
        INTEGER INDEX                                                   24 00900
        REAL ABS,SQRT                                                   24 00910
        INTRINSIC ABS,INDEX,SQRT                                        24 00920
C                                                                       24 00930
        INTEGER I,IC,ICODE,J,JCONT,JJ,LST                               24 00940
        REAL CC(5),DCC(5),X(6),CCT,DCCT,TI,DTI,XX,DXX                   24 00950
      REAL DIFF,TOL                                                     24 00960
        CHARACTER ENERGY*10,STR1*20,STR*5                               24 00970
        LOGICAL DIDTRM(5),EXPER(5),FROMTI                               24 00980
C                                                                       24 00990
C  Character strings required to decode "2 G" records                   24 01000
        CHARACTER*5 CCTSTR(5),CCSTR(5,4)                                24 01010
        DATA (CCTSTR(I),I=1,5)/'K/T=','L/T=','M/T=','N+/T=','M+/T='/    24 01020
        DATA ((CCSTR(J,I),I=1,2),J=1,5)/'KC=','KC =','LC=','LC =',      24 01030
     2   'MC=','MC =','NC+=','NC+ =','MC+=','MC+ ='/                    24 01040
C            Must still check obsolete codes                            24 01050
        DATA ((CCSTR(J,I),I=3,4),J=4,5)/'N+=','N+ =','M+=','M+ ='/      24 01060
C                                                                       24 01070
C                                                                       24 01080
100     NG=NG+1                                                         24 01090
        FROMTI=.FALSE.                                                  24 01100
        DO 150  I=1,5                                                   24 01110
           ICE(NG,I)=0.                                                 24 01120
           DICE(NG,I)=0.                                                24 01130
           X(I)=0.                                                      24 01140
           DCC(I)=0.                                                    24 01150
           CC(I)=0.                                                     24 01160
           DIDTRM(I)=.FALSE.                                            24 01170
150     CONTINUE                                                        24 01180
        X(6)=0.                                                         24 01190
        IDECAY(NG)=NDK                                                  24 01200
C%%%%%ENDFB                                                             24 01210
        IF(ENDF)THEN                                                    24 01220
           RTYP0(NG)=RTYP                                               24 01230
           RICC(NG)=0.                                                  24 01240
           DRICC(NG)=0.                                                 24 01250
           RICK(NG)=0.                                                  24 01260
           DRICK(NG)=0.                                                 24 01270
           RICL(NG)=0.                                                  24 01280
           DRICL(NG)=0.                                                 24 01290
        ENDIF                                                           24 01300
C^^^^^ENDFB                                                             24 01310
        CALL UNCER1(CARD(10:21),DEG(NG),EG(NG),NMESS)                   24 01320
C%%%%%MIRD                                                              24 01330
         IF(MIRD)THEN                                                   24 01340
            CALL WRITMP(MIRDTM,NREC,CARD)                               24 01350
            GREC(NG)=NREC                                               24 01360
            IF(NLEV .GE. 1)THEN                                         24 01370
               GLFROM(NG)=LREC(NLEV)                                    24 01380
            ELSE                                                        24 01390
               GLFROM(NG)=-1                                            24 01400
            ENDIF                                                       24 01410
            RTYPG(NG)=RTYP                                              24 01420
C           Find level fed.  Logic based on that of GTOL                24 01430
            IF(NLEV .GE. 2)THEN                                         24 01440
               TOL=10.                                                  24 01450
               GLTO(NG)=-1                                              24 01460
               DO 160 I=1,NLEV-1                                        24 01470
                  IF(LREC(I) .GT. IDREC(NDK))THEN                       24 01480
                     DIFF=ABS(LENGY(NLEV)-LENGY(I)-EG(NG))              24 01490
                     IF(DIFF .LT. TOL)THEN                              24 01500
                        GLTO(NG)=LREC(I)                                24 01510
                        TOL=DIFF                                        24 01520
                     ENDIF                                              24 01530
                  ENDIF                                                 24 01540
160            CONTINUE                                                 24 01550
               IF(GLTO(NG) .EQ. -1)                                     24 01560
     2           CALL WARNNG(NWARN,'GAMMA COULD NOT BE PLACED')         24 01570
            ELSE                                                        24 01580
               GLTO(NG)=-1                                              24 01590
            ENDIF                                                       24 01600
         ENDIF                                                          24 01610
C^^^^^MIRD                                                              24 01620
        IF(EG(NG) .EQ. 0.)CALL WARNNG(NWARN,'GAMMA ENERGY MISSING')     24 01630
        CALL UNCER1(CARD(22:31),DIG(NG),IG(NG),NMESS)                   24 01640
        IF(IG(NG) .GT. 0.)THEN                                          24 01650
           IF(CARD(30:31) .EQ. 'AP')THEN                                24 01660
              CALL MESSAG(NMESS,5,'DI=0 SET')                           24 01670
              DIG(NG)=0.                                                24 01680
           ENDIF                                                        24 01690
           IF(CARD(30:30) .EQ. 'G')THEN                                 24 01700
              CALL MESSAG(NMESS,5,'DI=0 SET')                           24 01710
              DIG(NG)=0.                                                24 01720
           ENDIF                                                        24 01730
           IF(CARD(30:30) .EQ. 'L') CALL UPLIMT(IG(NG),DIG(NG),NMESS)   24 01740
           IF(CARD(77:77) .EQ. '&')CALL UNDIVD(IG(NG),DIG(NG),NMESS)    24 01750
        ENDIF                                                           24 01760
        IF(ENDF)THEN                                                    24 01770
C%%%%%ENDFB                                                             24 01780
           ENERGY=CARD(10:19)                                           24 01790
           CALL SQZSTR(ENERGY,' ')                                      24 01800
           ES0(NG)=EG(NG)                                               24 01810
           DES0(NG)=DEG(NG)                                             24 01820
           RS0(NG)=IG(NG)                                               24 01830
           DRS0(NG)=DIG(NG)                                             24 01840
C^^^^^ENDFB                                                             24 01850
        ENDIF                                                           24 01860
        DIG(NG)=SQRT((RNORM**2)*(DIG(NG)**2)+(DRNORM**2)*(IG(NG)**2))   24 01870
        IG(NG)=RNORM*IG(NG)                                             24 01880
        CALL UNCER1(CARD(65:76),DTI,TI,NMESS)                           24 01890
        IF(IG(NG) .EQ. 0. .AND. TI .EQ. 0.)                             24 01900
     2    CALL WARNNG(NWARN,'NO INTENSITY GIVEN')                       24 01910
        IF(TI .GT. 0.)THEN                                              24 01920
           IF(CARD(75:76) .EQ. 'AP')THEN                                24 01930
            CALL MESSAG(NMESS,5,'DI=0 SET')                             24 01940
            DTI=0.                                                      24 01950
         ENDIF                                                          24 01960
           IF(CARD(75:75) .EQ. 'G')THEN                                 24 01970
            CALL MESSAG(NMESS,5,'DI=0 SET')                             24 01980
            DTI=0.                                                      24 01990
         ENDIF                                                          24 02000
           IF(CARD(75:75) .EQ. 'L')CALL UPLIMT(TI,DTI,NMESS)            24 02010
           IF(CARD(77:77) .EQ. '&')CALL UNDIVD(TI,DTI,NMESS)            24 02020
        ENDIF                                                           24 02030
        CALL UNCER1(CARD(56:64),DCCT,CCT,NMESS)                         24 02040
        IF(ENDF)THEN                                                    24 02050
C%%%%%ENDFB                                                             24 02060
           RICC(NG)=CCT                                                 24 02070
C               Add 3% uncertainty for theory                           24 02080
           DRICC(NG)=SQRT(DCCT**2 +(0.03*CCT)**2)                       24 02090
C^^^^^ENDFB                                                             24 02100
        ENDIF                                                           24 02110
        IF(TI .GT. 0. .AND. INDEX(CARD(10:80),'E0') .EQ. 0)THEN         24 02120
            IF (IG(NG) .EQ. 0.) THEN                                    24 02130
               FROMTI=.TRUE.                                            24 02140
               IG(NG)=TNORM*TI/(CCT+1.0)                                24 02150
               DIG(NG)=SQRT((TNORM*DTI)**2+(TI*DTNORM)**2+              24 02160
     2           (TI*TNORM*DCCT/(1.+CCT))**2)/(1.+CCT)                  24 02170
               IF(ENDF)THEN                                             24 02180
C%%%%%ENDFB                                                             24 02190
                  RS0(NG)=TI/(CCT+1.)                                   24 02200
                  DRS0(NG)=SQRT(DTI**2+(TI*DCCT/(1.+CCT))**2)/(1.+CCT)  24 02210
C^^^^^ENDFB                                                             24 02220
               ENDIF                                                    24 02230
               IF (CCT .EQ. 0.0)                                        24 02240
     2            CALL MESSAG(NMESS,4,'RI=TI SET')                      24 02250
            ELSE                                                        24 02260
               FROMTI=.FALSE.                                           24 02270
            ENDIF                                                       24 02280
        ENDIF                                                           24 02290
        IF (ELEV .LE. 0.0) THEN                                         24 02300
           SUMIE(5)=SUMIE(5)+EG(NG)*IG(NG)                              24 02310
           SUMI(5)=SUMI(5)+IG(NG)                                       24 02320
           DSUMI(5)=DSUMI(5)+DIG(NG)**2                                 24 02330
           DSUMIE(5)=DSUMIE(5)+(EG(NG)*DIG(NG))**2+(IG(NG)*DEG(NG))**2  24 02340
        ENDIF                                                           24 02350
        SUMI(4)=SUMI(4)+IG(NG)                                          24 02360
        DSUMI(4)=DSUMI(4)+DIG(NG)**2                                    24 02370
C                 Read second GAMMA card for ordinary case              24 02380
200     CONTINUE                                                        24 02390
        READ(IDATA,FMT='(A)') CARD2                                     24 02400
        WRITE(IREPT,FMT='(1H ,A)')CARD2                                 24 02410
        IF(CARD2(6:8) .EQ. '  G')THEN                                   24 02420
           CARD=CARD2                                                   24 02430
           DO 129 I=1,5                                                 24 02440
              IF(ICE(NG,I) .NE. 0. .OR. CC(I) .NE. 0.)THEN              24 02450
                 GOTO 100                                               24 02460
              ENDIF                                                     24 02470
129        CONTINUE                                                     24 02480
           RETURN 2                                                     24 02490
        ENDIF                                                           24 02500
        IF (CARD2(7:7) .NE. ' ') THEN                                   24 02510
C%%%%%ENDFB                                                             24 02520
           IF (ENDF)CALL RADCOM(CARD2,ENERGY,JCONT,NMESS)               24 02530
C^^^^^ENDFB                                                             24 02540
           GO TO 200                                                    24 02550
        ENDIF                                                           24 02560
        IF (CARD2 .EQ. ' ')THEN                                         24 02570
           CARD=CARD2                                                   24 02580
           DO 250 I=1,5                                                 24 02590
              IF(ICE(NG,I) .NE. 0. .OR. CC(I) .NE. 0.)RETURN 1          24 02600
250        CONTINUE                                                     24 02610
           RETURN 2                                                     24 02620
        ENDIF                                                           24 02630
        IF (CARD2(8:8) .NE. 'G' .OR.                                    24 02640
     2    CARD2(6:6) .EQ. '1' .OR. CARD2(6:6) .EQ. ' ') THEN            24 02650
           DO 300 I=1,5                                                 24 02660
              IF(ICE(NG,I) .NE. 0. .OR. CC(I) .NE. 0.)THEN              24 02670
                 CARD=CARD2                                             24 02680
                 RETURN                                                 24 02690
              ENDIF                                                     24 02700
300        CONTINUE                                                     24 02710
           RETURN 2                                                     24 02720
        ENDIF                                                           24 02730
        STR=CARD2(1:5)                                                  24 02740
        CALL SQZSTR(STR,' ')                                            24 02750
        LST=LENSTR(STR)                                                 24 02760
        IF ((LST .NE. 0) .AND. (STR .NE. OLDSTR)) THEN                  24 02770
            CARD=CARD2                                                  24 02780
            RETURN 1                                                    24 02790
         ENDIF                                                          24 02800
C                  Get conversion coefficients from second record       24 02810
C%%%%%MIRD                                                              24 02820
         IF(MIRD)THEN                                                   24 02830
            CALL WRITMP(MIRDTM,NREC,CARD2)                              24 02840
C           Check for final level                                       24 02850
            CALL READ(CARD2(10:80),'FL=',XX,DXX,ICODE)                  24 02860
            IF(ICODE .NE. 0)THEN                                        24 02870
               DO 305 I=1,NLEV-1                                        24 02880
                  IF((LREC(I) .GT. IDREC(NDK))                          24 02890
     2              .AND. (ABS(XX-LENGY(I)) .LT. 0.001))                24 02900
     2              GLTO(NG)=LREC(I)                                    24 02910
305            CONTINUE                                                 24 02920
            ENDIF                                                       24 02930
         ENDIF                                                          24 02940
C^^^^^MIRD                                                              24 02950
         IF (TI .NE. 0.0)THEN                                           24 02960
            CALL READ(CARD2(10:80),'/T=',XX,DXX,ICODE)                  24 02970
            IF (ICODE .NE. 0) THEN                                      24 02980
               FROMTI=.TRUE.                                            24 02990
               DO 310 I=1,5                                             24 03000
                  EXPER(I)=.FALSE.                                      24 03010
                  CALL READ(CARD2(10:80),CCTSTR(I),XX,DXX,ICODE)        24 03020
                  IF(ICODE .NE. 0)THEN                                  24 03030
                     IF(ICE(NG,I) .NE. 0.)THEN                          24 03040
                        CALL WARNNG(NWARN,'CONFLICTS WITH PREVIOUS '//  24 03050
     2                    CCTSTR(I))                                    24 03060
                     ELSE                                               24 03070
                        DICE(NG,I)=SQRT((XX*DTI)**2+(TI*DXX)**2)        24 03080
                        ICE(NG,I)=XX*TI                                 24 03090
                        IF(ICODE .GT. 1)THEN                            24 03100
                           IF(CARD2(ICODE-1:ICODE-1) .EQ. 'E')          24 03110
     2                       EXPER(I)=.TRUE.                            24 03120
                        ENDIF                                           24 03130
                     ENDIF                                              24 03140
                  ENDIF                                                 24 03150
310            CONTINUE                                                 24 03160
               IF (ENDF)THEN                                            24 03170
C^^^^^ENDFB                                                             24 03180
                  IF(RS0(NG) .LE. 0.)RS0(NG)=1.0E-10                    24 03190
                  RICK(NG)=ICE(NG,1)/RS0(NG)                            24 03200
                  RICL(NG)=ICE(NG,2)/RS0(NG)                            24 03210
                  DRICK(NG)=DICE(NG,1)/RS0(NG)                          24 03220
                  DRICL(NG)=DICE(NG,2)/RS0(NG)                          24 03230
                  RIS(NG)=TI-RS0(NG)                                    24 03240
                  DRIS(NG)=DTI**2+DRS0(NG)**2                           24 03250
                  DO 320 I=1,5                                          24 03260
                     RIS(NG)=RIS(NG)-ICE(NG,I)                          24 03270
                     DRIS(NG)=DRIS(NG)+DICE(NG,I)**2                    24 03280
320               CONTINUE                                              24 03290
                  IF(RIS(NG).LE. 0.)THEN                                24 03300
                     RIS(NG)=0.                                         24 03310
                     DRIS(NG)=0.                                        24 03320
                  ELSE                                                  24 03330
                     DRIS(NG)=SQRT(DRIS(NG))                            24 03340
                  ENDIF                                                 24 03350
C^^^^^ENDFB                                                             24 03360
               ENDIF                                                    24 03370
               DTI=SQRT((TNORM**2)*(DTI**2)+(DTNORM**2)*(TI**2))        24 03380
               TI=TI*TNORM                                              24 03390
               IF(TI .GT. 0.)THEN                                       24 03400
                  X(6)=DTI*DTI/(TI*TI)                                  24 03410
               ELSE                                                     24 03420
                  X(6)=0.                                               24 03430
               ENDIF                                                    24 03440
               DO 330 I=1,5                                             24 03450
                  DICE(NG,I)=SQRT((TNORM*DICE(NG,I))**2+                24 03460
     2              (ICE(NG,I)*DTNORM)**2)                              24 03470
                  ICE(NG,I)=TNORM*ICE(NG,I)                             24 03480
330            CONTINUE                                                 24 03490
            ELSE                                                        24 03500
               FROMTI=.FALSE.                                           24 03510
            ENDIF                                                       24 03520
         ENDIF                                                          24 03530
         IF(IG(NG) .GT. 0. .AND. .NOT. FROMTI)THEN                      24 03540
            DO 340 I=1,5                                                24 03550
               EXPER(I)=.FALSE.                                         24 03560
               IF(I .GE. 4)THEN                                         24 03570
                  JJ=4                                                  24 03580
               ELSE                                                     24 03590
                  JJ=2                                                  24 03600
               ENDIF                                                    24 03610
               DO 335 J=1,JJ                                            24 03620
                  CALL READ(CARD2(10:80),CCSTR(I,J),XX,DXX,ICODE)       24 03630
                  IF(ICODE .NE. 0) THEN                                 24 03640
                     IF(J .GE. 3)THEN                                   24 03650
                        IC=ICODE+10-2                                   24 03660
                        IF(CARD2(IC:IC) .NE. ':'                        24 03670
     2                    .AND. CARD2(IC:IC) .NE. '/')THEN              24 03680
                           CALL MESSAG(NMESS,1,                         24 03690
     2                       'OBSOLETE CODE '//CCSTR(I,J))              24 03700
                           IF(ICE(NG,I) .NE. 0.)THEN                    24 03710
                              CALL WARNNG(NWARN,                        24 03720
     2                          'CONFLICTS WITH PREVIOUS '//CCSTR(I,J)) 24 03730
                           ELSE                                         24 03740
                              CC(I)=XX                                  24 03750
                              DCC(I)=DXX                                24 03760
                              IF(ICODE .GT. 1)THEN                      24 03770
                                 IF(CARD2(ICODE-1:ICODE-1) .EQ. 'E')    24 03780
     2                           EXPER(I)=.TRUE.                        24 03790
                              ENDIF                                     24 03800
                           ENDIF                                        24 03810
                        ENDIF                                           24 03820
                     ELSE                                               24 03830
                        IF(ICE(NG,I) .NE. 0.)THEN                       24 03840
                           CALL WARNNG(NWARN,                           24 03850
     2                       'CONFLICTS WITH PREVIOUS '//CCSTR(I,J))    24 03860
                        ELSE                                            24 03870
                           CC(I)=XX                                     24 03880
                           DCC(I)=DXX                                   24 03890
                           IF(ICODE .GT. 1)THEN                         24 03900
                              IF(CARD2(ICODE-1:ICODE-1) .EQ. 'E')       24 03910
     2                          EXPER(I)=.TRUE.                         24 03920
                           ENDIF                                        24 03930
                        ENDIF                                           24 03940
                     ENDIF                                              24 03950
                  ENDIF                                                 24 03960
335            CONTINUE                                                 24 03970
340         CONTINUE                                                    24 03980
         ENDIF                                                          24 03990
C                                                                       24 04000
C   Add 3% uncertainty in ICC for uncertainty in theory                 24 04010
C                                                                       24 04020
           DO 350 I=1,5                                                 24 04030
              IF(.NOT. EXPER(I))THEN                                    24 04040
                 IF(FROMTI)THEN                                         24 04050
                    DICE(NG,I)=SQRT((0.03*ICE(NG,I))**2+DICE(NG,I)**2)  24 04060
                 ELSE                                                   24 04070
                    DCC(I)=SQRT((0.03*CC(I))**2+DCC(I)**2)              24 04080
                 ENDIF                                                  24 04090
              ENDIF                                                     24 04100
350        CONTINUE                                                     24 04110
C%%%%%ENDFB                                                             24 04120
        IF(ENDF .AND.                                                   24 04130
     2    .NOT.(FROMTI .OR. (RICK(NG) .GT. 0. .OR. RICL(NG) .GT. 0.)))  24 04140
     3    THEN                                                          24 04150
           RICK(NG)=CC(1)                                               24 04160
           RICL(NG)=CC(2)                                               24 04170
           DRICK(NG)=DCC(1)                                             24 04180
           DRICL(NG)=DCC(2)                                             24 04190
        ENDIF                                                           24 04200
C^^^^^ENDFB                                                             24 04210
C                  Get conversion electron intensities and sum the K and24 04220
C                  L intensities in TERMK and TERML                     24 04230
        IF(.NOT. FROMTI)THEN                                            24 04240
           DO 400  I=1,5                                                24 04250
              ICE(NG,I)=CC(I)*IG(NG)                                    24 04260
400        CONTINUE                                                     24 04270
           IF (IG(NG) .GT. 0.)THEN                                      24 04280
              X(6)=DIG(NG)*DIG(NG)/(IG(NG)*IG(NG))                      24 04290
           ELSE                                                         24 04300
              X(6)=0.                                                   24 04310
           ENDIF                                                        24 04320
        ENDIF                                                           24 04330
C                  UNCERTAINTIES                                        24 04340
         DO 450  I=1,5                                                  24 04350
            X(I)=0.                                                     24 04360
            IF(CC(I).NE.0.)X(I)=(DCC(I)/CC(I))**2                       24 04370
            DICE(NG,I)=ICE(NG,I)*SQRT(X(I)+X(6))                        24 04380
450      CONTINUE                                                       24 04390
        IF(.NOT. DIDTRM(1))THEN                                         24 04400
           TERMK(NDK)=TERMK(NDK)+ICE(NG,1)                              24 04410
           DTERMK(NDK)=SQRT(DTERMK(NDK)**2+DICE(NG,1)**2)               24 04420
           DIDTRM(1)=.TRUE.                                             24 04430
        ENDIF                                                           24 04440
        IF(.NOT. DIDTRM(2))THEN                                         24 04450
           TERML(NDK)=TERML(NDK)+ICE(NG,2)                              24 04460
           DTERML(NDK)=SQRT(DTERML(NDK)**2+DICE(NG,2)**2)               24 04470
           DIDTRM(2)=.TRUE.                                             24 04480
        ENDIF                                                           24 04490
        GOTO 200                                                        24 04500
        END                                                             24 04510
C                                                                       25 00010
        SUBROUTINE                                                      25 00020
     2    GETPRM(CARD,ENDF,NUDAT,RIMIN,IALLG,WEIGHT,MAT,MAXEC,NMESS)    25 00030
C                                                                       25 00040
C  Decodes the parameter record                                         25 00050
C                                                                       25 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************25 00070
C*                           Present Code                               25 00080
C*                           ------------                               25 00090
C*  MESSAG  READ                                                        25 00100
C*                                                                      25 00110
C***********************************************************************25 00120
        INTEGER IALLG,MAT,MAXEC,NMESS                                   25 00130
        REAL RIMIN,WEIGHT                                               25 00140
        CHARACTER*(*) CARD                                              25 00150
        LOGICAL ENDF,NUDAT                                              25 00160
C                                                                       25 00170
        INTEGER ICODE                                                   25 00180
        REAL X1,DX1                                                     25 00190
C                                                                       25 00200
        CALL READ(CARD,'RIMIN=',X1,DX1,ICODE)                           25 00210
        IF (ICODE .NE. 0) THEN                                          25 00220
           RIMIN=X1                                                     25 00230
           IALLG=0                                                      25 00240
        ENDIF                                                           25 00250
        CALL READ(CARD,'MAT=',X1,DX1,ICODE)                             25 00260
        IF (ICODE .NE. 0)THEN                                           25 00270
           MAT=INT(X1 - 0.5)                                            25 00280
           IF(.NOT. ENDF)                                               25 00290
     2       CALL MESSAG(NMESS,2,'MAT FOUND BUT NOT ENDF')              25 00300
        ENDIF                                                           25 00310
        CALL READ(CARD,'ALLGAM',X1,DX1,ICODE)                           25 00320
        IF (ICODE .NE. 0) IALLG=1                                       25 00330
        CALL READ(CARD,'MAXEC=',X1,DX1,ICODE)                           25 00340
        IF(ICODE .NE. 0)MAXEC=INT(X1)                                   25 00350
        CALL READ(CARD,'WEIGHT=',X1,DX1,ICODE)                          25 00360
        IF (ICODE .NE. 0)THEN                                           25 00370
           IF(.NOT. ENDF .AND. .NOT. NUDAT)THEN                         25 00380
              WEIGHT=X1                                                 25 00390
           ELSE                                                         25 00400
C%%%%%ENDFB&NUDATA                                                      25 00410
              CALL MESSAG(NMESS,4,'WEIGHT IGNORED')                     25 00420
              WEIGHT=1.                                                 25 00430
C^^^^^ENDFB&NUDATA                                                      25 00440
           ENDIF                                                        25 00450
        ENDIF                                                           25 00460
        RETURN                                                          25 00470
        END                                                             25 00480
C                                                                       26 00010
      SUBROUTINE GETT12(STR,T,DT)                                       26 00020
C     Gets the half-life (in seconds) from the input string             26 00030
      CHARACTER*(*) STR                                                 26 00040
      REAL T,DT                                                         26 00050
C                                                                       26 00060
      REAL TFACT(5),TMULT                                               26 00070
      CHARACTER*1 TPREF(7),TUNITS(6)                                    26 00080
      DATA TFACT/1.,60.,3600.,8.64E4,3.15576E7/                         26 00090
      DATA TPREF/'M','U','N','P','F','A',' '/                           26 00100
      DATA TUNITS/'S','M','H','D','Y',' '/                              26 00110
      CHARACTER*10 TSTR                                                 26 00120
      CHARACTER*6 DTSTR                                                 26 00130
      INTEGER I,IU,IUNIT,IPRFIX,J,K                                     26 00140
      CHARACTER*1 CH,CH1                                                26 00150
C                                                                       26 00160
      INTEGER INDEX,INDEXF,LEN,LENSTR                                   26 00170
      EXTERNAL INDEXF,LENSTR                                            26 00180
      INTRINSIC INDEX,LEN                                               26 00190
C                                                                       26 00200
      T=0.                                                              26 00210
      DT=0.                                                             26 00220
      IF(LEN(STR) .LE. 3)RETURN                                         26 00230
      IF(LEN(STR) .GT. 10)THEN                                          26 00240
         TSTR=STR(1:10)                                                 26 00250
         DTSTR=STR(11:)                                                 26 00260
      ELSE                                                              26 00270
         TSTR=STR                                                       26 00280
      ENDIF                                                             26 00290
      DO 200 IU=1,5                                                     26 00300
         I=INDEX(TSTR,TUNITS(IU))                                       26 00310
         IF(I .NE. 0)THEN                                               26 00320
            IUNIT=IU                                                    26 00330
            IF(I .NE. LENSTR(TSTR))THEN                                 26 00340
               DO 100 J=1,5                                             26 00350
                  K=INDEXF(TSTR,I+1,TUNITS(J))                          26 00360
                  IF(K .NE. 0)THEN                                      26 00370
                     IUNIT=J                                            26 00380
                     I=K                                                26 00390
                  ENDIF                                                 26 00400
100            CONTINUE                                                 26 00410
            ENDIF                                                       26 00420
            IF(TSTR(I-1:I-1) .NE. ' ')THEN                              26 00430
               I=I-1                                                    26 00440
               DO 110 IPRFIX=1,7                                        26 00450
                  IF(TSTR(I:I) .EQ. TPREF(IPRFIX))GOTO 150              26 00460
110            CONTINUE                                                 26 00470
            ELSE                                                        26 00480
               IPRFIX=0                                                 26 00490
            ENDIF                                                       26 00500
150         CONTINUE                                                    26 00510
            IF(IPRFIX .EQ. 7)RETURN                                     26 00520
            TSTR=TSTR(1:I-1)                                            26 00530
            CALL SQZSTR(TSTR,' ')                                       26 00540
            CALL SQZSTR(DTSTR,' ')                                      26 00550
            CALL CNVS2U(TSTR,DTSTR,T,DT)                                26 00560
            T=T*TFACT(IUNIT)*10.**(-3*IPRFIX)                           26 00570
            DT=DT*TFACT(IUNIT)*10.**(-3*IPRFIX)                         26 00580
         ENDIF                                                          26 00590
200   CONTINUE                                                          26 00600
      RETURN                                                            26 00610
      END                                                               26 00620
C                                                                       27 00010
        SUBROUTINE NORPRO(CARD,NDK,NCARD,ENDF,MIRD,NWARN,NMESS,WEIGHT,  27 00020
     2    RTYP)                                                         27 00030
C                                                                       27 00040
C  Processes the normalization record                                   27 00050
C                                                                       27 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************27 00070
C*                           Present Code                               27 00080
C*                           ------------                               27 00090
C*  MESSAG  UNCER1  WARNNG                                              27 00100
C*                                                                      27 00110
C*                           F77STR  4(2)                               27 00120
C*                           ------------                               27 00130
C*  LENSTR  SQZSTR                                                      27 00140
C*                                                                      27 00150
C*                        FORTRAN 77 Supplied                           27 00160
C*                        -------------------                           27 00170
C*  SQRT                                                                27 00180
C*                                                                      27 00190
C***********************************************************************27 00200
        INTEGER NDK,NMESS,NWARN                                         27 00210
        REAL WEIGHT,RTYP                                                27 00220
        CHARACTER*(*) CARD                                              27 00230
        LOGICAL NCARD,ENDF,MIRD                                         27 00240
C                                                                       27 00250
        INTEGER MAXDCY                                                  27 00260
        PARAMETER (MAXDCY=4)                                            27 00270
C                                                                       27 00280
        REAL RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN            27 00290
        COMMON /NORMAL/RNORM,DRNORM,TNORM,DTNORM,BNORM,DBNORM,BRN,DBRN  27 00300
C%%%%%ENDFB                                                             27 00310
        REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),    27 00320
     2    ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10)               27 00330
        COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN        27 00340
C^^^^^ENDFB                                                             27 00350
C%%%%%MIRD                                                              27 00360
      REAL MBR(MAXDCY),MDBR(MAXDCY)                                     27 00370
      COMMON /MIRDBR/MBR,MDBR                                           27 00380
C^^^^^MIRD                                                              27 00390
        INTEGER LENSTR                                                  27 00400
        EXTERNAL LENSTR                                                 27 00410
C                                                                       27 00420
        REAL SQRT                                                       27 00430
        INTRINSIC SQRT                                                  27 00440
C                                                                       27 00450
        INTEGER I                                                       27 00460
        CHARACTER*20 STR                                                27 00470
C                                                                       27 00480
        IF(CARD(10:80) .EQ. ' ')THEN                                    27 00490
           CALL WARNNG(NWARN,'BLANK NORMALIZATION RECORD')              27 00500
           RETURN                                                       27 00510
        ELSE                                                            27 00520
           NCARD=.TRUE.                                                 27 00530
        ENDIF                                                           27 00540
        CALL UNCER1(CARD(10:21),DRNORM,RNORM,NMESS)                     27 00550
        IF (RNORM .EQ. 0.) THEN                                         27 00560
           CALL WARNNG(NWARN,'NR=1 ASSUMED')                            27 00570
           RNORM=1.                                                     27 00580
        ENDIF                                                           27 00590
        CALL UNCER1(CARD(22:31),DTNORM,TNORM,NMESS)                     27 00600
C                                                                       27 00610
C  Use same normalization for TI as for RI if nothing else is given     27 00620
        IF (TNORM .LE. 0.) THEN                                         27 00630
           CALL MESSAG(NMESS,3,'NT=NR ASSUMED')                         27 00640
           TNORM=RNORM                                                  27 00650
           DTNORM=DRNORM                                                27 00660
        ENDIF                                                           27 00670
C                                                                       27 00680
        CALL UNCER1(CARD(32:41),DBRN,BRN,NMESS)                         27 00690
        IF (BRN.LE.0.) THEN                                             27 00700
           CALL WARNNG(NWARN,'BR=1 ASSUMED')                            27 00710
           BRN=1.                                                       27 00720
        ENDIF                                                           27 00730
        IF(BRN .GT. 1.)THEN                                             27 00740
           CALL WARNNG(NWARN,'BR>1 FOUND.  RESET TO 1.')                27 00750
           BRN=1.                                                       27 00760
        ENDIF                                                           27 00770
        IF(CARD(20:21) .EQ. 'AP' .OR. CARD(40:41) .EQ. 'AP')            27 00780
     2    CALL WARNNG(NWARN,'DNR OR DBR APPROXIMATE')                   27 00790
        IF(CARD(20:20) .EQ. 'G' .OR. CARD(40:40) .EQ. 'G')              27 00800
     2    CALL WARNNG(NWARN,'LOWER LIMIT ON NR OR BR')                  27 00810
        IF(CARD(20:20) .EQ. 'L' .OR. CARD(40:40) .EQ. 'L')              27 00820
     2    CALL WARNNG(NWARN,'UPPER LIMIT ON NR OR BR')                  27 00830
        STR=CARD(50:55)                                                 27 00840
        IF(LENSTR(STR) .LE. 2)THEN                                      27 00850
           STR=CARD(42:51)                                              27 00860
        ELSE                                                            27 00870
           CALL SQZSTR(STR,' ')                                         27 00880
           IF(LENSTR(STR) .LE. 2)THEN                                   27 00890
              STR=CARD(42:49)//STR(1:2)                                 27 00900
           ELSE                                                         27 00910
              CALL WARNNG(NWARN,'DNB HAS TOO MANY CHARACTERS:'//STR)    27 00920
              STR=CARD(42:49)//'  '                                     27 00930
           ENDIF                                                        27 00940
        ENDIF                                                           27 00950
        CALL UNCER1(STR,DBNORM,BNORM,NMESS)                             27 00960
        IF (BNORM .EQ. 0. .AND. (RTYP .EQ. 2. .OR. RTYP .EQ. 1.)) THEN  27 00970
           CALL WARNNG(NWARN,'NB=1/BR ASSUMED')                         27 00980
           DBNORM=0.                                                    27 00990
           BNORM=1./BRN                                                 27 01000
        ENDIF                                                           27 01010
        BRN=BRN*WEIGHT                                                  27 01020
        DBRN=DBRN*WEIGHT                                                27 01030
        IF (BRN .NE. 1.)THEN                                            27 01040
           DRNORM=SQRT((RNORM**2)*(DBRN**2)+(DRNORM**2)*(BRN**2))       27 01050
           RNORM=BRN*RNORM                                              27 01060
           DTNORM=SQRT((TNORM**2)*(DBRN**2)+(DTNORM**2)*(BRN**2))       27 01070
           TNORM=BRN*TNORM                                              27 01080
           DBNORM=SQRT((BNORM**2)*(DBRN**2)+(DBNORM**2)*(BRN**2))       27 01090
           BNORM=BRN*BNORM                                              27 01100
        ENDIF                                                           27 01110
C%%%%%ENDFB                                                             27 01120
        IF(ENDF)THEN                                                    27 01130
           ENDBR(NDK)=BRN                                               27 01140
           ENDDBR(NDK)=DBRN                                             27 01150
           ENDN(NDK,1)=RNORM                                            27 01160
           ENDDN(NDK,1)=DRNORM                                          27 01170
           DO 100 I=2,3                                                 27 01180
              ENDN(NDK,I)=BNORM                                         27 01190
              ENDDN(NDK,I)=DBNORM                                       27 01200
100        CONTINUE                                                     27 01210
           ENDN(NDK,5)=BRN                                              27 01220
           ENDDN(NDK,5)=DBRN                                            27 01230
        ENDIF                                                           27 01240
C^^^^^ENDFB                                                             27 01250
C%%%%%MIRD                                                              27 01260
      IF(MIRD)THEN                                                      27 01270
         MBR(NDK)=BRN                                                   27 01280
         MDBR(NDK)=DBRN                                                 27 01290
      ENDIF                                                             27 01300
C^^^^^MIRD                                                              27 01310
        RETURN                                                          27 01320
        END                                                             27 01330
C                                                                       28 00010
        SUBROUTINE                                                      28 00020
     2    PARPRO(PCARD,ENDF,MIRD,MERGE,ARATIO,AQR,DEAC,Q,DQ,QIS,DQIS,   28 00030
     2    RTYP,LPAR,NMESS,NWARN)                                        28 00040
C                                                                       28 00050
C       Processes PARENT record or, in the case of IT decay, the last   28 00060
C       LEVEL record encountered                                        28 00070
C                                                                       28 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************28 00090
C*                           Present Code                               28 00100
C*                           ------------                               28 00110
C*  AZ      MESSAG  SPNPAR  UNCER1  WARNNG                              28 00120
C*                                                                      28 00130
C*                           F77STR  4(2)                               28 00140
C*                           ------------                               28 00150
C*  ADDSTR  DELSTR  LENSTR  SQZSTR  TYPSTR                              28 00160
C*                                                                      28 00170
C*                           NSDCNV  2(03)                              28 00180
C*                           -------------                              28 00190
C*  CNVS2U                                                              28 00200
C*                                                                      28 00210
C*                        FORTRAN 77 Supplied                           28 00220
C*                        -------------------                           28 00230
C*  SQRT                                                                28 00240
C*                                                                      28 00250
C***********************************************************************28 00260
        INTEGER MERGE,LPAR,NMESS,NWARN                                  28 00270
        REAL ARATIO,AQR,DEAC,Q,DQ,RTYP,QIS,DQIS                         28 00280
        LOGICAL PCARD,ENDF,MIRD                                         28 00290
C%%%%%ENDFB                                                             28 00300
        REAL ZA,TSEC,DTSEC,SPIN,PARITY                                  28 00310
        COMMON /ENDGEN/ZA,TSEC,DTSEC,SPIN,PARITY                        28 00320
C                                                                       28 00330
        CHARACTER PAR*2                                                 28 00340
        COMMON /ENDCOM/ PAR                                             28 00350
C^^^^^ENDFB                                                             28 00360
C                                                                       28 00370
C%%%%%MIRD                                                              28 00380
      REAL MTSEC,MDTSEC                                                 28 00390
      CHARACTER MTIM*10,MDTIM*6,MPARNT*5,MMETA*2                        28 00400
      COMMON /PARINF/MTSEC,MDTSEC,MTIM,MDTIM,MPARNT,MMETA               28 00410
C^^^^^MIRD                                                              28 00420
        INTEGER ICOMNT                                                  28 00430
        CHARACTER*80 HEAD,LABEL,COMENT(10)                              28 00440
        COMMON /HEADS1/  HEAD,LABEL,COMENT                              28 00450
        COMMON /HEADS2/  ICOMNT                                         28 00460
C                                                                       28 00470
        CHARACTER*80 CARD                                               28 00480
        COMMON /CARDS/CARD                                              28 00490
C                                                                       28 00500
        CHARACTER*80 STR,STR2                                           28 00510
C                                                                       28 00520
        INTEGER TYPSTR,LENSTR                                           28 00530
        EXTERNAL TYPSTR,LENSTR                                          28 00540
C                                                                       28 00550
        REAL SQRT                                                       28 00560
        INTRINSIC SQRT                                                  28 00570
C                                                                       28 00580
        INTEGER IQ,ICH,ITYP,I,IC,ICD,IZ,ILOG                            28 00590
C                                                                       28 00600
C%%%%%ENDFB                                                             28 00610
         IF(ENDF)CALL SPNPAR(CARD(22:39),SPIN,PARITY,NMESS)             28 00620
C^^^^^ENDFB                                                             28 00630
         PCARD=.TRUE.                                                   28 00640
         CALL AZ(CARD(1:5),ZA,IZ,PAR)                                   28 00650
C%%%%%MIRD                                                              28 00660
      IF(MIRD)MPARNT=CARD(1:5)                                          28 00670
C^^^^^MIRD                                                              28 00680
         ZA=ZA+1000.*IZ                                                 28 00690
         IF(RTYP .NE. 3.) CALL UNCER1(CARD(65:76),DQ,Q,NMESS)           28 00700
         IF(DQ .EQ. 0. .AND. Q .NE. 0.)CALL MESSAG(NMESS,2,'DQ=0')      28 00710
         CALL UNCER1(CARD(10:21),DQIS,QIS,NMESS)                        28 00720
C%%%%%MIRD                                                              28 00730
C^^^^^MIRD                                                              28 00740
      IF(MIRD)THEN                                                      28 00750
         IF(QIS .EQ. 0.)THEN                                            28 00760
            MMETA=' '                                                   28 00770
         ELSE                                                           28 00780
            IF(CARD(78:79) .NE. ' ')THEN                                28 00790
               MMETA=CARD(78:79)                                        28 00800
            ELSE                                                        28 00810
               MMETA='M'                                                28 00820
            ENDIF                                                       28 00830
         ENDIF                                                          28 00840
      ENDIF                                                             28 00850
         IF ((RTYP .NE. 3.0) .AND. (Q .EQ. 0.0))THEN                    28 00860
            CALL WARNNG(NWARN,'NO Q FOUND')                             28 00870
            PCARD=.FALSE.                                               28 00880
            RETURN                                                      28 00890
         ENDIF                                                          28 00900
         Q=1000.*Q                                                      28 00910
         IF(QIS .GT. 0.) THEN                                           28 00920
            QIS=1000.*QIS+.5                                            28 00930
            Q=Q+QIS                                                     28 00940
         ENDIF                                                          28 00950
         DQ=1000.*SQRT(DQ*DQ+DQIS*DQIS)                                 28 00960
         AQR=Q*ARATIO/1000.                                             28 00970
         DEAC=DQ*ARATIO/1000.                                           28 00980
         STR=CARD(40:49)                                                28 00990
         IF(STR .EQ. ' ')THEN                                           28 01000
            CALL WARNNG(NWARN,'NO T1/2 FOUND')                          28 01010
         ELSE                                                           28 01020
C%%%%%MIRD                                                              28 01030
            IF(MIRD)THEN                                                28 01040
               CALL GETT12(CARD(40:55),MTSEC,MDTSEC)                    28 01050
               IF(MTSEC .EQ. 0.)THEN                                    28 01060
                  CALL WARNNG(NWARN,'T1/2 NOT TRANSLATED')              28 01070
                  MTIM=' '                                              28 01080
                  MDTIM=' '                                             28 01090
               ELSE                                                     28 01100
                  MTIM=CARD(40:49)                                      28 01110
                  MDTIM=CARD(50:55)                                     28 01120
               ENDIF                                                    28 01130
            ENDIF                                                       28 01140
C^^^^^MIRD                                                              28 01150
C%%%%%ENDFB                                                             28 01160
            IF(ENDF)THEN                                                28 01170
               CALL GETT12(CARD(40:55),TSEC,DTSEC)                      28 01180
               IF(TSEC .EQ. 0.)                                         28 01190
     2           CALL WARNNG(NWARN,'T1/2 NOT TRANSLATED')               28 01200
            ENDIF                                                       28 01210
C^^^^^ENDFB                                                             28 01220
            CALL LBSUP(STR)                                             28 01230
            STR2=CARD(50:55)                                            28 01240
            CALL LBSUP(STR2)                                            28 01250
            CALL ADDSTR(STR,LENSTR(STR)+2,STR2)                         28 01260
            CALL ADDSTR(STR,LENSTR(STR)+1,')')                          28 01270
            CALL ADDSTR(STR,1,'(')                                      28 01280
            LABEL(LPAR+2:LPAR+LENSTR(STR)+3)=STR                        28 01290
            HEAD(LPAR+2:LPAR+LENSTR(STR)+3)=STR                         28 01300
         ENDIF                                                          28 01310
         IF (MERGE .EQ. 1) THEN                                         28 01320
            DO 400 I=1,ICOMNT                                           28 01330
               IF (LABEL(1:LPAR) .EQ. COMENT(I)(1:LPAR))                28 01340
     2           COMENT(I)(LPAR+2:LPAR+LENSTR(STR)+3)=STR               28 01350
400         CONTINUE                                                    28 01360
         ENDIF                                                          28 01370
        RETURN                                                          28 01380
        END                                                             28 01390
C-----  Auxillary Routines Used In Processing ENSDF Records             29 00010
      SUBROUTINE AZ(STR,A,Z,NEL)                                        29 00020
C                                                                       29 00030
C  Reads STR to obtain the A and the chemical symbol directly           29 00040
C    and then uses IZEL to get Z.                                       29 00050
C                                                                       29 00060
C                                                                       29 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************29 00080
C*                           F77STR  4(2)                               29 00090
C*                           ------------                               29 00100
C*  INTSCN  IVLSTR                                                      29 00110
C*                                                                      29 00120
C*                           NSDCNV  2(03)                              29 00130
C*                           -------------                              29 00140
C*  IZEL    KNVI2S                                                      29 00150
C*                                                                      29 00160
C***********************************************************************29 00170
      CHARACTER*(*) STR,NEL                                             29 00180
      INTEGER Z                                                         29 00190
      REAL A                                                            29 00200
C                                                                       29 00210
      INTEGER INTSCN,IVLSTR                                             29 00220
      EXTERNAL INTSCN,IZEL,IVLSTR,KNVI2S                                29 00230
C                                                                       29 00240
      INTEGER K2,IA                                                     29 00250
C                                                                       29 00260
      A=0.                                                              29 00270
      Z=0                                                               29 00280
      NEL=' '                                                           29 00290
      K2=INTSCN(STR,1,.FALSE.,IA)                                       29 00300
      IF(K2 .LE. 4)THEN                                                 29 00310
         A=REAL(IA)                                                     29 00320
         NEL=STR(K2:)                                                   29 00330
         CALL IZEL(NEL,Z)                                               29 00340
      ELSE                                                              29 00350
         A=REAL(IVLSTR(STR(1:3)))                                       29 00360
         Z=IVLSTR(STR(4:))                                              29 00370
         CALL KNVI2S(Z,NEL,0)                                           29 00380
         Z=Z+100                                                        29 00390
      ENDIF                                                             29 00400
      RETURN                                                            29 00410
      END                                                               29 00420
C                                                                       30 00010
      SUBROUTINE CHKALF(STR,ISTR)                                       30 00020
C                                                                       30 00030
C  NNDC MEDNEW PROGRAM, CHKALF Subroutine [5-SEP-85]                    30 00040
C                                                                       30 00050
C  Checks for the first occurrence of an alphabetic character (except   30 00060
C   ".", "E", "+", and "-") and reports the location.                   30 00070
C                                                                       30 00080
C  ISTR=0 if no alphabetic characters found                             30 00090
C      =location of first alphabetic character otherwise                30 00100
C                                                                       30 00110
C                                                                       30 00120
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************30 00130
C*                           F77STR  4(2)                               30 00140
C*                           ------------                               30 00150
C*  LENSTR  SQZSTR                                                      30 00160
C*                                                                      30 00170
C***********************************************************************30 00180
      INTEGER ISTR                                                      30 00190
      CHARACTER STR*(*)                                                 30 00200
C                                                                       30 00210
      INTEGER LENSTR,TYPSTR                                             30 00220
      EXTERNAL LENSTR,TYPSTR                                            30 00230
C                                                                       30 00240
      CHARACTER*1 IDOT,IE,IPLUS,IMINUS                                  30 00250
      DATA IDOT,IE,IPLUS,IMINUS/'.','E','+','-'/                        30 00260
C                                                                       30 00270
      INTEGER I,J,ITYP                                                  30 00280
      CHARACTER*1 ICH                                                   30 00290
C                                                                       30 00300
      ISTR=0                                                            30 00310
      IF (LENSTR(STR) .LE. 0) RETURN                                    30 00320
      DO 100 I=1,LENSTR(STR)                                            30 00330
         J=I                                                            30 00340
         ITYP=TYPSTR(STR(J:J))                                          30 00350
         IF (.NOT. ((ITYP .EQ. 1) .OR. (ITYP .EQ. 0))) THEN             30 00360
            ICH=STR(J:J)                                                30 00370
            IF (.NOT. ((ICH .EQ. IDOT) .OR. (ICH .EQ. IE))) THEN        30 00380
               IF (.NOT. ((ICH .EQ. IPLUS) .OR. (ICH .EQ. IMINUS))) THEN30 00390
                   ISTR=J                                               30 00400
                   RETURN                                               30 00410
               ENDIF                                                    30 00420
            ENDIF                                                       30 00430
         ENDIF                                                          30 00440
100   CONTINUE                                                          30 00450
      RETURN                                                            30 00460
      END                                                               30 00470
C                                                                       31 00010
        SUBROUTINE LOWLMT(I,DI,NMESS)                                   31 00020
C                                                                       31 00030
C  Assume I=(100+I)/2, DI=(100-I)/2 if a lower limit is indicated       31 00040
C                                                                       31 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************31 00060
C*                           Present Code                               31 00070
C*                           ------------                               31 00080
C*  MESSAG                                                              31 00090
C*                                                                      31 00100
C***********************************************************************31 00110
        INTEGER NMESS                                                   31 00120
        REAL I,DI                                                       31 00130
C                                                                       31 00140
        DI=(100.-I)/2.                                                  31 00150
        I=(100.+I)/2.                                                   31 00160
        CALL MESSAG(NMESS,1,'I=(100+I)/2,DI=(100-I)/2 SET')             31 00170
        RETURN                                                          31 00180
        END                                                             31 00190
C                                                                       32 00010
      SUBROUTINE READ(CARD,STR,X,DX,ISTR)                               32 00020
C                                                                       32 00030
C  Based on ORNL-NDP MEDLIST PROGRAM, READ subroutine                   32 00040
C    [Revised 5-SEP-85 to check for non-numeric characters]             32 00050
C                                                                       32 00060
C  Scans the character string CARD for the character string STR and a   32 00070
C    "$".  Characters between the match for STR  and "$" (or end of     32 00080
C    CARD) are decoded into a number X and its uncertainty DX.          32 00090
C                                                                       32 00100
C  ISTR=0 if STR is not contained in CARD                               32 00110
C      =location of STR otherwise                                       32 00120
C                                                                       32 00130
C                                                                       32 00140
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************32 00150
C*                           Present Code                               32 00160
C*                           ------------                               32 00170
C*  CHKALF                                                              32 00180
C*                                                                      32 00190
C*                           F77STR  4(2)                               32 00200
C*                           ------------                               32 00210
C*  DELSTR  LENSTR  SQZSTR  SUPALF                                      32 00220
C*                                                                      32 00230
C*                           NSDCNV  2(03)                              32 00240
C*                           -------------                              32 00250
C*  CNVS2U                                                              32 00260
C*                                                                      32 00270
C*                        FORTRAN 77 Supplied                           32 00280
C*                        -------------------                           32 00290
C*  INDEX                                                               32 00300
C*                                                                      32 00310
C***********************************************************************32 00320
      INTEGER ISTR                                                      32 00330
      REAL X,DX                                                         32 00340
      CHARACTER*(*) CARD,STR                                            32 00350
C                                                                       32 00360
      INTEGER LENSTR                                                    32 00370
      EXTERNAL LENSTR                                                   32 00380
C                                                                       32 00390
      INTEGER INDEX                                                     32 00400
      INTRINSIC INDEX                                                   32 00410
C                                                                       32 00420
      INTEGER IBL,ICODE,IDOL,IL,NCH                                     32 00430
      CHARACTER*80 TEST,AX*16,DAX*8                                     32 00440
C                                                                       32 00450
      X=0.                                                              32 00460
      DX=0.                                                             32 00470
      TEST=CARD                                                         32 00480
      NCH=LENSTR(STR)                                                   32 00490
      ISTR=INDEX(TEST,STR(:NCH))                                        32 00500
      IF (ISTR .EQ. 0)  RETURN                                          32 00510
C     If character preceding string is a "/", ratio not value           32 00520
      IF(ISTR .GT. 1)THEN                                               32 00530
         IF(TEST(ISTR-1:ISTR-1) .EQ. '/')THEN                           32 00540
            ISTR=0                                                      32 00550
            RETURN                                                      32 00560
         ENDIF                                                          32 00570
      ENDIF                                                             32 00580
      CALL DELSTR(TEST,1,ISTR+NCH-1)                                    32 00590
      IDOL=INDEX(TEST,'$')                                              32 00600
      IF (IDOL .NE. 0) TEST=TEST(1:IDOL-1)                              32 00610
      IL=LENSTR(TEST)                                                   32 00620
      CALL CHKALF(TEST,ICODE)                                           32 00630
      IF(ICODE .NE. 0) THEN                                             32 00640
         CALL DELSTR(TEST,ICODE,IL)                                     32 00650
         IL=LENSTR(TEST)                                                32 00660
      ENDIF                                                             32 00670
C                                                                       32 00680
C  Delete leading blanks                                                32 00690
100   IF (IL .EQ. 0)  RETURN                                            32 00700
      IF (TEST(1:1) .EQ. ' ') THEN                                      32 00710
         CALL DELSTR(TEST,1,1)                                          32 00720
         IL=IL-1                                                        32 00730
         GO TO 100                                                      32 00740
      ENDIF                                                             32 00750
C                                                                       32 00760
      IBL=INDEX(TEST,' ')                                               32 00770
      IF (IBL .EQ. 0)  IBL=IL+1                                         32 00780
      AX=TEST(1:IBL-1)                                                  32 00790
      CALL DELSTR(TEST,1,IBL)                                           32 00800
      IF (LENSTR(TEST) .NE. 0) THEN                                     32 00810
         CALL SUPALF(TEST)                                              32 00820
         CALL SQZSTR(TEST,' ')                                          32 00830
C  Note deliberate truncation of string                                 32 00840
         DAX=TEST                                                       32 00850
      ENDIF                                                             32 00860
C                                                                       32 00870
      CALL CNVS2U(AX,DAX,X,DX)                                          32 00880
      RETURN                                                            32 00890
      END                                                               32 00900
C                                                                       33 00010
      SUBROUTINE UNCER1(CARD,DX,X,NMESS)                                33 00020
C                                                                       33 00030
C  Obtains number and uncertainty from standard ENSDF field             33 00040
C                                                                       33 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************33 00060
C*                           Present Code                               33 00070
C*                           ------------                               33 00080
C*  MESSAG                                                              33 00090
C*                                                                      33 00100
C*                           F77STR  4(2)                               33 00110
C*                           ------------                               33 00120
C*  IVLSTR  LENSTR  SQZSTR                                              33 00130
C*                                                                      33 00140
C*                           NSDCNV  2(03)                              33 00150
C*                           -------------                              33 00160
C*  CNVS2U                                                              33 00170
C*                                                                      33 00180
C***********************************************************************33 00190
      INTEGER NMESS                                                     33 00200
      CHARACTER*(*) CARD                                                33 00210
      REAL X,DX                                                         33 00220
C                                                                       33 00230
      CHARACTER A*12,DA*2                                               33 00240
C                                                                       33 00250
      INTEGER LENSTR,TYPSTR                                             33 00260
      EXTERNAL LENSTR,TYPSTR                                            33 00270
C                                                                       33 00280
      X=0.                                                              33 00290
      DX=0.                                                             33 00300
      A=CARD(:LEN(CARD)-2)                                              33 00310
      CALL SQZSTR(A,' ')                                                33 00320
      IF(LENSTR(A) .GT. 0)THEN                                          33 00330
         IF(TYPSTR(A(1:LENSTR(A))) .NE. 2)THEN                          33 00340
            DA=CARD(LEN(CARD)-1:)                                       33 00350
            CALL CNVS2U(A,DA,X,DX)                                      33 00360
         ELSE                                                           33 00370
            CALL MESSAG(NMESS,1,'ENERGY MISSING')                       33 00380
         ENDIF                                                          33 00390
      ENDIF                                                             33 00400
      RETURN                                                            33 00410
      END                                                               33 00420
C                                                                       34 00010
        SUBROUTINE UNDIVD(I,DI,NMESS)                                   34 00020
C                                                                       34 00030
C  Assume I=(I+DI)/2 if the undivided intensity is given                34 00040
C                                                                       34 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************34 00060
C*                           Present Code                               34 00070
C*                           ------------                               34 00080
C*  MESSAG                                                              34 00090
C*                                                                      34 00100
C***********************************************************************34 00110
        INTEGER NMESS                                                   34 00120
        REAL I,DI                                                       34 00130
C                                                                       34 00140
        I=(I+DI)/2                                                      34 00150
        DI=I                                                            34 00160
        CALL MESSAG(NMESS,3,'I=DI=(I+DI)/2 SET')                        34 00170
        RETURN                                                          34 00180
        END                                                             34 00190
C                                                                       35 00010
        SUBROUTINE UPLIMT(I,DI,NMESS)                                   35 00020
C                                                                       35 00030
C  Assume I=I/2 if an upper limit is indicated                          35 00040
C                                                                       35 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************35 00060
C*                           Present Code                               35 00070
C*                           ------------                               35 00080
C*  MESSAG                                                              35 00090
C*                                                                      35 00100
C***********************************************************************35 00110
        INTEGER NMESS                                                   35 00120
        REAL I,DI                                                       35 00130
C                                                                       35 00140
        I=I/2.                                                          35 00150
        DI=I                                                            35 00160
        CALL MESSAG(NMESS,3,'I=DI=(I+DI)/2 SET')                        35 00170
        RETURN                                                          35 00180
        END                                                             35 00190
C-----                                                                  36 00010
C=====                                                                  36 00020
C===== Auxillary Data Input Processing Routines                         36 00030
      SUBROUTINE READAT(ZMA,NMESS)                                      36 00040
C                                                                       36 00050
C  Read atomic properties from disk storage---creates DIRECT ACCESS     36 00060
C    file for use in RADLST                                             36 00070
C                                                                       36 00080
C  Based on ORNL-NDP MEDLIST PROGRAM, READAT Subroutine [24-MAY-77]     36 00090
C                                                                       36 00100
C                                                                       36 00110
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************36 00120
C*                           Present Code                               36 00130
C*                           ------------                               36 00140
C*  UNCER1  ZERO8                                                       36 00150
C*                                                                      36 00160
C*                           F77STR  4(2)                               36 00170
C*                           ------------                               36 00180
C*  LENSTR                                                              36 00190
C*                                                                      36 00200
C***********************************************************************36 00210
        INTEGER ZMA,NMESS                                               36 00220
C                                                                       36 00230
        INTEGER ITRMOU,IDATA,IATOM,IATOMB                               36 00240
        COMMON /TTYUNT/ITRMOU                                           36 00250
        COMMON /DATUNT/IDATA,IATOM                                      36 00260
        COMMON /BINDAT/IATOMB                                           36 00270
C                                                                       36 00280
        INTEGER LENSTR                                                  36 00290
        EXTERNAL LENSTR                                                 36 00300
C                                                                       36 00310
      INTEGER IZ,I,NFLAG                                                36 00320
      REAL ET(6),DET(6),WKX,DWKX,WLX,DWLX,BEKX,DBEKX,BELX,DBELX,BEMX,   36 00330
     2  DBEMX,BEHX,DBEHX,BTOAX,DBTOAX,A2A1X,DA2A1X,DNKLX,ENKLX          36 00340
      CHARACTER*80 CARD                                                 36 00350
C                                                                       36 00360
   98 READ (IATOM,FMT='(I3,A)',END=200)  IZ,CARD(1:77)                  36 00370
      IF(IZ .LT. 0) RETURN                                              36 00380
      IF(IZ .GT. ZMA) THEN                                              36 00390
         WRITE(ITRMOU,*) ' CHECK PARAMETER "ZMA": IZ=',IZ               36 00400
         RETURN                                                         36 00410
      ENDIF                                                             36 00420
      CALL ZERO8(6,ET)                                                  36 00430
      CALL ZERO8(6,DET)                                                 36 00440
      WKX=0.                                                            36 00450
      DWKX=0.                                                           36 00460
      WLX=0.                                                            36 00470
      DWLX=0.                                                           36 00480
      BEKX=0.                                                           36 00490
      DBEKX=0.                                                          36 00500
      BELX=0.                                                           36 00510
      DBELX=0.                                                          36 00520
      BEMX=0.                                                           36 00530
      DBEMX=0.                                                          36 00540
      BEHX=0.                                                           36 00550
      DBEHX=0.                                                          36 00560
      BTOAX=0.                                                          36 00570
      DBTOAX=0.                                                         36 00580
      A2A1X=0.                                                          36 00590
      DA2A1X=0.                                                         36 00600
      NFLAG=0                                                           36 00610
      IF(LENSTR(CARD(7:77)) .EQ. 0)THEN                                 36 00620
         READ(IATOM,15) CARD                                            36 00630
15       FORMAT(A)                                                      36 00640
      ELSE                                                              36 00650
         CALL UNCER1(CARD(7:15),DWKX,WKX,NMESS)                         36 00660
         CALL UNCER1(CARD(16:24),DWLX,WLX,NMESS)                        36 00670
         CALL UNCER1(CARD(25:33),DNKLX,ENKLX,NMESS)                     36 00680
         CALL UNCER1(CARD(34:44),DBEKX,BEKX,NMESS)                      36 00690
         CALL UNCER1(CARD(45:55),DBELX,BELX,NMESS)                      36 00700
         CALL UNCER1(CARD(56:66),DBEMX,BEMX,NMESS)                      36 00710
         CALL UNCER1(CARD(67:77),DBEHX,BEHX,NMESS)                      36 00720
         READ(IATOM,15) CARD                                            36 00730
         CALL UNCER1(CARD(10:19),DBTOAX,BTOAX,NMESS)                    36 00740
         CALL UNCER1(CARD(20:29),DA2A1X,A2A1X,NMESS)                    36 00750
         READ(CARD,FMT='(29X,F7.0,F6.0,23X,F4.0,1X,F5.0)')              36 00760
     2     ET(1),ET(2),ET(5),ET(6)                                      36 00770
         CALL UNCER1(CARD(44:54),DET(3),ET(3),NMESS)                    36 00780
         CALL UNCER1(CARD(55:65),DET(4),ET(4),NMESS)                    36 00790
         NFLAG=1                                                        36 00800
      ENDIF                                                             36 00810
        WRITE(IATOMB,REC=IZ) NFLAG,WKX,DWKX,WLX,DWLX,ENKLX,DNKLX,       36 00820
     2    BEKX,DBEKX,BELX,DBELX,BEMX,DBEMX,BEHX,DBEHX,BTOAX,DBTOAX,     36 00830
     2    A2A1X,DA2A1X,(ET(I),DET(I),I=1,6)                             36 00840
      GO TO 98                                                          36 00850
  200 RETURN                                                            36 00860
      END                                                               36 00870
C                                                                       37 00010
        SUBROUTINE READMS(IMASS,IMASSB)                                 37 00020
C                                                                       37 00030
C  Read Wapstra masses from Disk storage---Creates DIRECT ACCESS        37 00040
C    file for use in RADLST                                             37 00050
C                                                                       37 00060
C                                                                       37 00070
        INTEGER IMASS,IMASSB                                            37 00080
C                                                                       37 00090
        INTEGER IREC,IZA                                                37 00100
        REAL AMASS                                                      37 00110
C                                                                       37 00120
        IREC=1                                                          37 00130
100     IREC=IREC+1                                                     37 00140
        READ(IMASS,FMT='(I6,F13.3)',END=1000)IZA,AMASS                  37 00150
        WRITE(IMASSB,REC=IREC)IZA,AMASS                                 37 00160
        GOTO 100                                                        37 00170
C                                                                       37 00180
C  Store record count in first record                                   37 00190
1000    CONTINUE                                                        37 00200
        IREC=IREC-1                                                     37 00210
        WRITE(IMASSB,REC=1)IREC                                         37 00220
        RETURN                                                          37 00230
        END                                                             37 00240
C=====                                                                  38 00010
C===== Terminal Dialog and Initialization Routines                      38 00020
        SUBROUTINE DIALOG(VERNO,ENSDF,ENDF,NUDAT,ATOMIC,WMASSB,WMASSS,  38 00030
     1    SPECTR,BREMS,MIRD)                                            38 00040
C                                                                       38 00050
C  Terminal dialog to set defaults and open I/O files                   38 00060
C                                                                       38 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************38 00080
C*                           Present Code                               38 00090
C*                           ------------                               38 00100
C*  SLAVER                                                              38 00110
C*                        FORTRAN 77 Supplied                           38 00120
C*                        -------------------                           38 00130
C*  INQUIRE  OPEN                                                       38 00140
C*                                                                      38 00150
C***********************************************************************38 00160
        CHARACTER VERNO*(*)                                             38 00170
        LOGICAL ENSDF,ENDF,NUDAT,ATOMIC,SPECTR,WMASSB,WMASSS,BREMS,MIRD 38 00180
                                                                        38 00190
C                                                                       38 00200
        INTEGER ITRMOU,ITRMIN,IREPT,IENSDF,INUDAT,IENDF,IDATA,IATOM,    38 00210
     2    IMASS,IATOMB,IMASSB,MIRDTM,MIRDRP,MIRDPL                      38 00220
        COMMON /TTYUNT/ITRMOU,ITRMIN                                    38 00230
        COMMON /RPTUNT/IREPT,IENSDF                                     38 00240
        COMMON /OUTUNT/INUDAT,IENDF                                     38 00250
        COMMON /DATUNT/IDATA,IATOM,IMASS                                38 00260
        COMMON /BINDAT/IATOMB,IMASSB                                    38 00270
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               38 00280
C                                                                       38 00290
        CHARACTER*50 LINE                                               38 00300
        LOGICAL SLAVE                                                   38 00310
C                                                                       38 00320
        CHARACTER*4 FORM                                                38 00330
C+++MDC+++                                                              38 00340
C...DVF,VAX                                                             38 00350
C/        FORM='(A$)'                                                   38 00360
C...ANS,IPC                                                             38 00370
        FORM='(A)'                                                      38 00380
C---MDC---                                                              38 00390
C                                                                       38 00400
C  Device assignments --- See main program for description              38 00410
        ITRMIN=5                                                        38 00420
        ITRMOU=6                                                        38 00430
        IREPT=20                                                        38 00440
        IDATA=21                                                        38 00450
        IENSDF=22                                                       38 00460
        IENDF=23                                                        38 00470
        INUDAT=24                                                       38 00480
        IATOMB=25                                                       38 00490
        IATOM=26                                                        38 00500
        IMASSB=27                                                       38 00510
        IMASS=28                                                        38 00520
      MIRDTM=29                                                         38 00530
      MIRDRP=30                                                         38 00540
      MIRDPL=31                                                         38 00550
C                                                                       38 00560
C  Default settings for output files or special calculations            38 00570
C                                                                       38 00580
        ENSDF=.TRUE.                                                    38 00590
C         Will report nuclear and atomic radiations                     38 00600
        ENDF=.FALSE.                                                    38 00610
C         Will not create an ENDF-B/V type file of radiations           38 00620
        NUDAT=.FALSE.                                                   38 00630
C         Will not create file for input to VAX database                38 00640
        SPECTR=.FALSE.                                                  38 00650
C         Will not calculate continua from Beta+- or internal           38 00660
C           Bremsstrahlung                                              38 00670
        BREMS=.FALSE.                                                   38 00680
C         Will not calculate continua from internal Bremsstrahlung      38 00690
        MIRD=.FALSE.                                                    38 00700
C         Will not create a MIRD-like report                            38 00710
C                                                                       38 00720
C  Check on which output files should be created or if special          38 00730
C    calculations are to be done                                        38 00740
C                                                                       38 00750
        SLAVE=.FALSE.                                                   38 00760
C+++MDC+++                                                              38 00770
C...VAX                                                                 38 00780
C/C  See if this program is being spawned                               38 00790
C/        CALL SLAVER(SLAVE,ENSDF,ENDF,NUDAT,ATOMIC,WMASSB,WMASSS,      38 00800
C/     2    SPECTR,BREMS,MIRD)                                          38 00810
C---MDC---                                                              38 00820
C                                                                       38 00830
        IF(SLAVE)RETURN                                                 38 00840
C                                                                       38 00850
        WRITE(ITRMOU,FMT='(8H RADLST ,A)')VERNO                         38 00860
100   CONTINUE                                                          38 00870
C%%%%%MEDOUT                                                            38 00880
        LINE=' '                                                        38 00890
        WRITE(ITRMOU,FORM)' OUTPUT RADIATION LISTING (Y/N)? '           38 00900
1       FORMAT(A1)                                                      38 00910
        READ(ITRMIN,1) LINE                                             38 00920
        IF(LINE(1:1) .EQ. 'N' .OR. LINE(1:1) .EQ. 'n') ENSDF=.FALSE.    38 00930
C^^^^^MEDOUT                                                            38 00940
C%%%%%ENDFB                                                             38 00950
        LINE=' '                                                        38 00960
        WRITE(ITRMOU,FORM)' OUTPUT ENDF-LIKE FILE (N/Y)? '              38 00970
        READ(ITRMIN,1) LINE                                             38 00980
        IF(LINE(1:1) .EQ. 'Y' .OR. LINE(1:1) .EQ. 'y') ENDF=.TRUE.      38 00990
C^^^^^ENDFB                                                             38 01000
C%%%%%NUDATA                                                            38 01010
        LINE=' '                                                        38 01020
        WRITE(ITRMOU,FORM)' OUTPUT FILE FOR NUDAT (N/Y)? '              38 01030
        READ(ITRMIN,1) LINE                                             38 01040
        IF(LINE(1:1) .EQ. 'Y' .OR. LINE(1:1) .EQ. 'y') NUDAT=.TRUE.     38 01050
C^^^^^NUDATA                                                            38 01060
C%%%%%MIRD                                                              38 01070
        LINE=' '                                                        38 01080
        WRITE(ITRMOU,FORM)' OUTPUT MIRD LISTING (N/Y)? '                38 01090
        READ(ITRMIN,1) LINE                                             38 01100
        IF(LINE(1:1) .EQ. 'Y' .OR. LINE(1:1) .EQ. 'y')THEN              38 01110
         IF(ENSDF .OR. NUDAT)THEN                                       38 01120
            TYPE *,' ***** Conflict in options *****'                   38 01130
            TYPE *,'       MIRD not compatible with regular report'     38 01140
            TYPE *,'       or NUDAT'                                    38 01150
            GOTO 100                                                    38 01160
         ELSE                                                           38 01170
            MIRD=.TRUE.                                                 38 01180
         ENDIF                                                          38 01190
        ENDIF                                                           38 01200
C^^^^^MEDOUT                                                            38 01210
        IF(.NOT. NUDAT)THEN                                             38 01220
C%%%%%SPECTRA                                                           38 01230
           LINE=' '                                                     38 01240
           WRITE(ITRMOU,FORM)' CALCULATE CONTINUA (N/Y)? '              38 01250
           READ(ITRMIN,1) LINE                                          38 01260
           IF(LINE(1:1) .EQ. 'Y' .OR. LINE(1:1) .EQ. 'y') SPECTR=.TRUE. 38 01270
           IF(SPECTR)THEN                                               38 01280
C%%%%%BREMST                                                            38 01290
              LINE=' '                                                  38 01300
              WRITE(ITRMOU,FORM)' CALCULATE BREMSSTRAHLUNG (N/Y)? '     38 01310
              READ(ITRMIN,1) LINE                                       38 01320
              IF(LINE(1:1) .EQ. 'Y' .OR. LINE(1:1) .EQ. 'y')            38 01330
     2          BREMS=.TRUE.                                            38 01340
C^^^^^BREMST                                                            38 01350
           ENDIF                                                        38 01360
C^^^^^SPECTRA                                                           38 01370
        ENDIF                                                           38 01380
C                                                                       38 01390
C  Get file specifications                                              38 01400
C                                                                       38 01410
        LINE=' '                                                        38 01420
        WRITE(ITRMOU,FMT='(//)')                                        38 01430
        WRITE(ITRMOU,FORM)' INPUT DATA SET FILE (DEF: RADLST.INP): '    38 01440
        READ(ITRMIN,2) LINE                                             38 01450
2       FORMAT(A50)                                                     38 01460
        IF (LINE .EQ. ' ') LINE='RADLST.INP'                            38 01470
C+++MDC+++                                                              38 01480
C...IPC,ANS                                                             38 01490
        OPEN(UNIT=IDATA,FILE=LINE,ACCESS='SEQUENTIAL',STATUS='OLD')     38 01500
C...VAX,DVF                                                             38 01510
C/        OPEN(UNIT=IDATA,FILE=LINE,ACCESS='SEQUENTIAL',STATUS='OLD',   38 01520
C/     2    READONLY)                                                   38 01530
C---MDC---                                                              38 01540
        WRITE(ITRMOU,FORM)                                              38 01550
     2    ' OUTPUT RADLST REPORT FILE (DEF: RADLST.RPT): '              38 01560
        READ(ITRMIN,2) LINE                                             38 01570
        IF (LINE .EQ. ' ') LINE='RADLST.RPT'                            38 01580
        OPEN(UNIT=IREPT,FILE=LINE,ACCESS='SEQUENTIAL',                  38 01590
     2    STATUS='UNKNOWN',RECL=133)                                    38 01600
C                                                                       38 01610
C  Open DIRECT ACCESS (BINARY) file for atomic data storage             38 01620
C    and, if necessary, sequential input file of atomic data            38 01630
C                                                                       38 01640
        INQUIRE(FILE='ATOMIC.DAT',EXIST=ATOMIC)                         38 01650
        IF(ATOMIC)THEN                                                  38 01660
C          Binary file for atomic data found                            38 01670
C+++MDC+++                                                              38 01680
C...IPC,ANS                                                             38 01690
           OPEN(UNIT=IATOMB,ACCESS='DIRECT',RECL=31,                    38 01700
     2       FORM='UNFORMATTED',FILE='ATOMIC.DAT',STATUS='OLD')         38 01710
C...VAX,DVF                                                             38 01720
C/           OPEN(UNIT=IATOMB,ACCESS='DIRECT',RECL=31,                  38 01730
C/     2       FORM='UNFORMATTED',FILE='ATOMIC.DAT',STATUS='OLD',       38 01740
C/     3       READONLY)                                                38 01750
C---MDC---                                                              38 01760
        ELSE                                                            38 01770
C          Binary file for atomic data not found                        38 01780
           WRITE(ITRMOU,FORM)                                           38 01790
     2       ' INPUT RADLST DATA TABLE (DEF: MEDNEW.DAT): '             38 01800
           READ(ITRMIN,2) LINE                                          38 01810
           IF (LINE .EQ. ' ') LINE='MEDNEW.DAT'                         38 01820
C+++MDC+++                                                              38 01830
C...IPC,ANS                                                             38 01840
           OPEN(UNIT=IATOM,FILE=LINE,ACCESS='SEQUENTIAL',               38 01850
     2       STATUS='OLD')                                              38 01860
C...VAX,DVF                                                             38 01870
C/           OPEN(UNIT=IATOM,FILE=LINE,ACCESS='SEQUENTIAL',             38 01880
C/     2       STATUS='OLD',READONLY)                                   38 01890
C---MDC---                                                              38 01900
           OPEN(UNIT=IATOMB,ACCESS='DIRECT',RECL=31,                    38 01910
     2       FORM='UNFORMATTED',FILE='ATOMIC.DAT',STATUS='NEW')         38 01920
        ENDIF                                                           38 01930
C                                                                       38 01940
C  Open DIRECT ACCESS (BINARY) file for Wapstra mass storage            38 01950
C    and, if necessary, sequential input file of mass data              38 01960
C                                                                       38 01970
        INQUIRE(FILE='WAPSTB.DAT',EXIST=WMASSB)                         38 01980
        IF(WMASSB)THEN                                                  38 01990
C          Binary file for atomic data found                            38 02000
C+++MDC+++                                                              38 02010
C...IPC,ANS                                                             38 02020
           OPEN(UNIT=IMASSB,ACCESS='DIRECT',RECL=2,                     38 02030
     2       FORM='UNFORMATTED',FILE='WAPSTB.DAT',STATUS='OLD')         38 02040
C...VAX,DVF                                                             38 02050
C/           OPEN(UNIT=IMASSB,ACCESS='DIRECT',RECL=2,                   38 02060
C/     2       FORM='UNFORMATTED',FILE='WAPSTB.DAT',STATUS='OLD',       38 02070
C/     3       READONLY)                                                38 02080
C---MDC---                                                              38 02090
        ELSE                                                            38 02100
C          Binary file for Wapstra masses not found                     38 02110
           WRITE(ITRMOU,FORM)                                           38 02120
     2       ' INPUT MASSES DATA TABLE (DEF: RADMAS.DAT): '             38 02130
           READ(ITRMIN,2) LINE                                          38 02140
           IF (LINE .EQ. ' ') LINE='RADMAS.DAT'                         38 02150
           INQUIRE(FILE=LINE,EXIST=WMASSS)                              38 02160
           IF(WMASSS)THEN                                               38 02170
C+++MDC+++                                                              38 02180
C...IPC,ANS                                                             38 02190
              OPEN(UNIT=IMASS,FILE=LINE,ACCESS='SEQUENTIAL',            38 02200
     2          STATUS='OLD')                                           38 02210
C...VAX,DVF                                                             38 02220
C/              OPEN(UNIT=IMASS,FILE=LINE,ACCESS='SEQUENTIAL',          38 02230
C/     2          STATUS='OLD',READONLY)                                38 02240
C---MDC---                                                              38 02250
              OPEN(UNIT=IMASSB,ACCESS='DIRECT',RECL=2,                  38 02260
     2          FORM='UNFORMATTED',FILE='WAPSTB.DAT',STATUS='NEW')      38 02270
           ENDIF                                                        38 02280
        ENDIF                                                           38 02290
C                                                                       38 02300
C%%%%%MEDOUT                                                            38 02310
        IF(ENSDF) THEN                                                  38 02320
           LINE=' '                                                     38 02330
           WRITE(ITRMOU,FORM)                                           38 02340
     2       ' OUTPUT ENSDF REPORT FILE (DEF: ENSDF.RPT): '             38 02350
           READ(ITRMIN,2) LINE                                          38 02360
           IF (LINE .EQ. ' ') LINE='ENSDF.RPT'                          38 02370
           OPEN(UNIT=IENSDF,FILE=LINE,ACCESS='SEQUENTIAL',              38 02380
     2       STATUS='UNKNOWN')                                          38 02390
        ENDIF                                                           38 02400
C^^^^^MEDOUT                                                            38 02410
C%%%%%ENDFB                                                             38 02420
        IF(ENDF) THEN                                                   38 02430
           LINE=' '                                                     38 02440
           WRITE(ITRMOU,FORM)                                           38 02450
     2       ' OUTPUT GENERATED ENDF FILE (DEF: ENDF.RAW): '            38 02460
           READ(ITRMIN,2) LINE                                          38 02470
           IF (LINE .EQ. ' ') LINE='ENDF.RAW'                           38 02480
C+++MDC+++                                                              38 02490
C...IPC,ANS                                                             38 02500
           OPEN(UNIT=IENDF,FILE=LINE,ACCESS='SEQUENTIAL',               38 02510
     2       STATUS='UNKNOWN')                                          38 02520
C...VAX,DVF                                                             38 02530
C/           OPEN(UNIT=IENDF,FILE=LINE,ACCESS='SEQUENTIAL',             38 02540
C/     2       STATUS='UNKNOWN',CARRIAGECONTROL='LIST')                 38 02550
C---MDC---                                                              38 02560
        ENDIF                                                           38 02570
C^^^^^ENDFB                                                             38 02580
C%%%%%NUDATA                                                            38 02590
        IF(NUDAT) THEN                                                  38 02600
           LINE=' '                                                     38 02610
           WRITE(ITRMOU,FORM)                                           38 02620
     2       ' OUTPUT GENERATED NUDAT FILE (DEF: NUDAT.OUT): '          38 02630
           READ(ITRMIN,2) LINE                                          38 02640
           IF (LINE .EQ. ' ') LINE='NUDAT.OUT'                          38 02650
C+++MDC+++                                                              38 02660
C...IPC,ANS                                                             38 02670
           OPEN(UNIT=INUDAT,FILE=LINE,ACCESS='SEQUENTIAL',              38 02680
     2       STATUS='UNKNOWN')                                          38 02690
C...VAX,DVF                                                             38 02700
C/           OPEN(UNIT=INUDAT,FILE=LINE,ACCESS='SEQUENTIAL',            38 02710
C/     2       STATUS='UNKNOWN',CARRIAGECONTROL='LIST')                 38 02720
C---MDC---                                                              38 02730
        ENDIF                                                           38 02740
C^^^^^NUDATA                                                            38 02750
C                                                                       38 02760
C%%%%%MIRD                                                              38 02770
        IF(MIRD) THEN                                                   38 02780
           LINE=' '                                                     38 02790
           WRITE(ITRMOU,FORM)                                           38 02800
     2       ' OUTPUT MIRD REPORT FILE (DEF: MIRD.RPT): '               38 02810
           READ(ITRMIN,2) LINE                                          38 02820
           IF (LINE .EQ. ' ') LINE='MIRD.RPT'                           38 02830
C+++MDC+++                                                              38 02840
C...IPC,ANS                                                             38 02850
           OPEN(UNIT=MIRDRP,FILE=LINE,ACCESS='SEQUENTIAL',              38 02860
     2       STATUS='UNKNOWN')                                          38 02870
C...VAX,DVF                                                             38 02880
C/           OPEN(UNIT=MIRDRP,FILE=LINE,ACCESS='SEQUENTIAL',            38 02890
C/     2       STATUS='UNKNOWN',CARRIAGECONTROL='LIST')                 38 02900
C---MDC---                                                              38 02910
           LINE=' '                                                     38 02920
           WRITE(ITRMOU,FORM)                                           38 02930
     2       ' OUTPUT MIRD PLOTTING FILE (DEF: MIRD.PLT): '             38 02940
           READ(ITRMIN,2) LINE                                          38 02950
           IF (LINE .EQ. ' ') LINE='MIRD.PLT'                           38 02960
C+++MDC+++                                                              38 02970
C...IPC,ANS                                                             38 02980
           OPEN(UNIT=MIRDPL,FILE=LINE,ACCESS='SEQUENTIAL',              38 02990
     2       STATUS='UNKNOWN')                                          38 03000
C...VAX,DVF                                                             38 03010
C/           OPEN(UNIT=MIRDPL,FILE=LINE,ACCESS='SEQUENTIAL',            38 03020
C/     2       STATUS='UNKNOWN',CARRIAGECONTROL='LIST')                 38 03030
C---MDC---                                                              38 03040
           OPEN(UNIT=MIRDTM,FILE='MIRDTMP.DAT',ACCESS='DIRECT',         38 03050
     2       STATUS='UNKNOWN',RECL=20)                                  38 03060
        ENDIF                                                           38 03070
C^^^^^MIRD                                                              38 03080
        WRITE(ITRMOU,FMT='(//)')                                        38 03090
        RETURN                                                          38 03100
        END                                                             38 03110
C                                                                       39 00010
C+++MDC+++                                                              39 00020
C...VAX                                                                 39 00030
C/        SUBROUTINE SLAVER(SLAVE,ENSDF,ENDF,NUDAT,ATOMIC,              39 00040
C/     2    WMASSB,WMASSS,SPECTR,BREMS,MIRD)                            39 00050
C/C  Sets up logic and files when program is to be spawned from         39 00060
C/C    another program on the VAX                                       39 00070
C/C                                                                     39 00080
C/C***************** SUBROUTINES AND FUNCTIONS CALLED ******************39 00090
C/C*                        FORTRAN 77 Supplied                         39 00100
C/C*                        -------------------                         39 00110
C/C*  GET_FOREIGN*  INDEX   INQUIRE  OPEN                               39 00120
C/C*                                                                    39 00130
C/C*  *Non-standard ANSI-77                                             39 00140
C/C*                                                                    39 00150
C/C*********************************************************************39 00160
C/        INTEGER ITRMOU,ITRMIN,IREPT,IENSDF,INUDAT,IENDF,IDATA,IATOM,  39 00170
C/     2    IMASS,IATOMB,IMASSB,MIRDTM,MIRDRP,MIRDPL                    39 00180
C/        COMMON /TTYUNT/ITRMOU,ITRMIN                                  39 00190
C/        COMMON /RPTUNT/IREPT,IENSDF                                   39 00200
C/        COMMON /OUTUNT/INUDAT,IENDF                                   39 00210
C/        COMMON /DATUNT/IDATA,IATOM,IMASS                              39 00220
C/        COMMON /BINDAT/IATOMB,IMASSB                                  39 00230
C/      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                             39 00240
C/C                                                                     39 00250
C/        CHARACTER*50 FILE(10)                                         39 00260
C/        CHARACTER*255 MASTER                                          39 00270
C/        INTEGER I,IBEGIN,IEND,J                                       39 00280
C/        LOGICAL ENSDF,ENDF,NUDAT,ATOMIC,WMASSB,WMASSS,SLAVE,          39 00290
C/     2    SPECTR,BREMS,MIRD                                           39 00300
C/C                                                                     39 00310
C/        INTEGER INDEX                                                 39 00320
C/        INTRINSIC INDEX                                               39 00330
C/C                                                                     39 00340
C/        MASTER=' '                                                    39 00350
C/        CALL LIB$GET_FOREIGN(MASTER)                                  39 00360
C/        IF(MASTER .EQ. ' ')THEN                                       39 00370
C/           SLAVE=.FALSE.                                              39 00380
C/           RETURN                                                     39 00390
C/        ENDIF                                                         39 00400
C/        SLAVE=.TRUE.                                                  39 00410
C/C                                                                     39 00420
C/C  Decode string passed from program spawning job                     39 00430
C/C    MASTER(1:6) gives files to be output.                            39 00440
C/C      Remainder of string delimited by "/" and gives I/O file        39 00450
C/C      names.  NUL files or defaults are indicated by "#".            39 00460
C/C      String needs to be complete only up to the last                39 00470
C/C      non-default filename to be passed.                             39 00480
C/C                                                                     39 00490
C/C    Order of files expected:                                         39 00500
C/C      File  Unit   Default Name  Description                         39 00510
C/C      ----  -----  ------------  ------------------------------      39 00520
C/C        1   IDATA  RADLST.INP    Input file in ENSDF format          39 00530
C/C        2   IREPT  RADLST.RPT    Report of processing                39 00540
C/C        3   IATOM  MEDNEW.DAT    Input file of atomic data           39 00550
C/C        4   IENSDF ENSDF.RPT     Formatted output of radiations      39 00560
C/C        5   IENDF  ENDF.RAW      Radiations in ENDF/B format         39 00570
C/C        6   INUDAT NUDAT.OUT     Radiations for input to DB          39 00580
C/C        7   IMASS  RADMAS.DAT    Input file of Wapstra masses        39 00590
C/C        8   MIRDRP MIRD.RPT      Radiations in MIRD formatted output 39 00600
C/C        9   MIRDTM MIRDTMP.DAT   Temporary storage file              39 00610
C/C       10   MIRDPL MIRD.PLT      ENSDF-like file for use in plotting 39 00620
C/C                                                                     39 00630
C/C  Set up LOGIC variables                                             39 00640
C/        ENSDF=.FALSE.                                                 39 00650
C/C         Do not report nuclear and atomic radiations                 39 00660
C/        ENDF=.FALSE.                                                  39 00670
C/C         Do not create an ENDF-B/V type file of radiations           39 00680
C/        NUDAT=.FALSE.                                                 39 00690
C/C         Do not create file for input to VAX database                39 00700
C/        SPECTR=.FALSE.                                                39 00710
C/C         Do not calculate continua                                   39 00720
C/        BREMS=.FALSE.                                                 39 00730
C/C         Do not calculate internal Bremsstrahlung                    39 00740
C/        MIRD=.FALSE.                                                  39 00750
C/C         Do not output in MIRD-like format                           39 00760
C/C%%%%%MEDOUT                                                          39 00770
C/        IF(MASTER(1:1) .EQ. 'Y')ENSDF=.TRUE.                          39 00780
C/C^^^^^MEDOUT                                                          39 00790
C/C%%%%%ENDFB                                                           39 00800
C/        IF(MASTER(2:2) .EQ. 'Y')ENDF=.TRUE.                           39 00810
C/C^^^^^ENDFB                                                           39 00820
C/C%%%%%NUDATA                                                          39 00830
C/        IF(MASTER(3:3) .EQ. 'Y')NUDAT=.TRUE.                          39 00840
C/C^^^^^NUDATA                                                          39 00850
C/C%%%%%SPECTRA                                                         39 00860
C/        IF(.NOT. NUDAT)THEN                                           39 00870
C/           IF(MASTER(4:4) .EQ. 'Y')SPECTR=.TRUE.                      39 00880
C/C%%%%%BREMST                                                          39 00890
C/           IF(SPECTR .AND. MASTER(5:5) .EQ. 'Y')BREMS=.TRUE.          39 00900
C/C^^^^^BREMST                                                          39 00910
C/        ENDIF                                                         39 00920
C/C^^^^^SPECTRA                                                         39 00930
C/C%%%%%MIRD                                                            39 00940
C/      IF(MASTER(6:6) .EQ. 'Y')THEN                                    39 00950
C/         IF(ENSDF .OR. NUDAT)THEN                                     39 00960
C/            TYPE *,' ***** Conflict in options *****'                 39 00970
C/            TYPE *,'       '//MASTER(1:6)                             39 00980
C/            TYPE *,'            ^ ignored'                            39 00990
C/         ELSE                                                         39 01000
C/            MIRD=.TRUE.                                               39 01010
C/         ENDIF                                                        39 01020
C/      ENDIF                                                           39 01030
C/C^^^^^MIRD                                                            39 01040
C/C  Stop processing if incorrect format                                39 01050
C/        IF(MASTER(7:7) .NE. '/' .AND. MASTER(7:) .NE. ' ')THEN        39 01060
C/           WRITE(ITRMOU,*) ' ERROR ON INPUT STRING FROM PARENT'       39 01070
C/           STOP                                                       39 01080
C/        ENDIF                                                         39 01090
C/C                                                                     39 01100
C/C  Set default file names                                             39 01110
C/        FILE(1)='RADLST.INP'                                          39 01120
C/        FILE(2)='RADLST.RPT'                                          39 01130
C/        FILE(3)='MEDNEW.DAT'                                          39 01140
C/C%%%%%MEDOUT                                                          39 01150
C/        FILE(4)='ENSDF.RPT'                                           39 01160
C/C^^^^^MEDOUT                                                          39 01170
C/C%%%%%ENDFB                                                           39 01180
C/        FILE(5)='ENDF.RAW'                                            39 01190
C/C^^^^^ENDFB                                                           39 01200
C/C%%%%%NUDATA                                                          39 01210
C/        FILE(6)='NUDAT.OUT'                                           39 01220
C/C^^^^^NUDATA                                                          39 01230
C/        FILE(7)='RADMAS.DAT'                                          39 01240
C/C%%%%%MIRD                                                            39 01250
C/        FILE(8)='MIRD.RPT'                                            39 01260
C/        FILE(9)='MIRDTMP.DAT'                                         39 01270
C/        FILE(10)='MIRD.PLT'                                           39 01280
C/C^^^^^                                                                39 01290
C/C                                                                     39 01300
C/C  Check input for new file names                                     39 01310
C/        IBEGIN=8                                                      39 01320
C/        DO I=1,10                                                     39 01330
C/           IF(MASTER(IBEGIN:) .EQ. ' ')GOTO 150                       39 01340
C/           IEND=INDEX(MASTER(IBEGIN:),'/')                            39 01350
C/           IF(IEND .EQ. 0)THEN                                        39 01360
C/              DO J=255,IBEGIN,-1                                      39 01370
C/                 IF(MASTER(J:J) .NE. ' ')THEN                         39 01380
C/                    IEND=J+1                                          39 01390
C/                    GOTO 95                                           39 01400
C/                 ENDIF                                                39 01410
C/              ENDDO                                                   39 01420
C/              GOTO 150                                                39 01430
C/           ELSE                                                       39 01440
C/              IEND=IBEGIN+IEND-1                                      39 01450
C/           ENDIF                                                      39 01460
C/95         CONTINUE                                                   39 01470
C/           IF(MASTER(IBEGIN:IEND-1) .NE. '#')                         39 01480
C/     2       FILE(I)=MASTER(IBEGIN:IEND-1)                            39 01490
C/           IBEGIN=IEND+1                                              39 01500
C/        ENDDO                                                         39 01510
C/150     CONTINUE                                                      39 01520
C/C                                                                     39 01530
C/C  Open files --- Note differences in STATUS from OPEN'S in           39 01540
C/C    DIALOG due to automatic nature of spawning process               39 01550
C/        WRITE(ITRMOU,2) 'INPUT '//FILE(1)                             39 01560
C/2       FORMAT(' OPENING:  ',A)                                       39 01570
C/        OPEN(UNIT=IDATA,FILE=FILE(1),ACCESS='SEQUENTIAL',             39 01580
C/     2    STATUS='OLD',ERR=200,READONLY)                              39 01590
C/        WRITE(ITRMOU,2) 'OUTPUT '//FILE(2)                            39 01600
C/        OPEN(UNIT=IREPT,FILE=FILE(2),ACCESS='SEQUENTIAL',             39 01610
C/     2    STATUS='NEW',RECL=165)                                      39 01620
C/C                                                                     39 01630
C/C  Open DIRECT ACCESS (BINARY) file for atomic data                   39 01640
C/C    storage and, if necessary, sequential input file of atomic data  39 01650
C/C                                                                     39 01660
C/        INQUIRE(FILE='ATOMIC.DAT',EXIST=ATOMIC)                       39 01670
C/        IF(ATOMIC)THEN                                                39 01680
C/C          Binary file for atomic data found                          39 01690
C/           OPEN(UNIT=IATOMB,ACCESS='DIRECT',RECL=31,                  39 01700
C/     2       FORM='UNFORMATTED',FILE='ATOMIC.DAT',STATUS='OLD',       39 01710
C/     3       READONLY)                                                39 01720
C/        ELSE                                                          39 01730
C/C          Binary file for atomic data not found                      39 01740
C/           WRITE(ITRMOU,2) 'INPUT '//FILE(3)                          39 01750
C/           OPEN(UNIT=IATOM,FILE=FILE(3),ACCESS='SEQUENTIAL',          39 01760
C/     2       STATUS='OLD',ERR=200,READONLY)                           39 01770
C/           OPEN(UNIT=IATOMB,ACCESS='DIRECT',RECL=31,                  39 01780
C/     2       FORM='UNFORMATTED',FILE='ATOMIC.DAT',STATUS='NEW')       39 01790
C/        ENDIF                                                         39 01800
C/C                                                                     39 01810
C/C  Open DIRECT ACCESS (BINARY) file for Wapstra mass data             39 01820
C/C    storage and, if necessary, sequential input file of atomic data  39 01830
C/C                                                                     39 01840
C/        INQUIRE(FILE='WAPSTB.DAT',EXIST=WMASSB)                       39 01850
C/        IF(WMASSB)THEN                                                39 01860
C/C          Binary file for mass data found                            39 01870
C/           OPEN(UNIT=IMASSB,ACCESS='DIRECT',RECL=2,                   39 01880
C/     2       FORM='UNFORMATTED',FILE='WAPSTB.DAT',STATUS='OLD',       39 01890
C/     3       READONLY)                                                39 01900
C/        ELSE                                                          39 01910
C/C          Binary file for atomic data not found                      39 01920
C/           INQUIRE(FILE=FILE(7),EXIST=WMASSS)                         39 01930
C/           IF(WMASSS)THEN                                             39 01940
C/              WRITE(ITRMOU,2) 'INPUT '//FILE(7)                       39 01950
C/              OPEN(UNIT=IMASS,FILE=FILE(7),ACCESS='SEQUENTIAL',       39 01960
C/     2          STATUS='OLD',READONLY)                                39 01970
C/              OPEN(UNIT=IMASSB,ACCESS='DIRECT',RECL=2,                39 01980
C/     2          FORM='UNFORMATTED',FILE='WAPSTB.DAT',STATUS='NEW')    39 01990
C/           ENDIF                                                      39 02000
C/        ENDIF                                                         39 02010
C/C%%%%%MEDOUT                                                          39 02020
C/        IF(ENSDF)THEN                                                 39 02030
C/           WRITE(ITRMOU,2) 'OUTPUT '//FILE(4)                         39 02040
C/           OPEN(UNIT=IENSDF,FILE=FILE(4),ACCESS='SEQUENTIAL',         39 02050
C/     2       STATUS='NEW')                                            39 02060
C/        ENDIF                                                         39 02070
C/C^^^^^MEDOUT                                                          39 02080
C/C%%%%%ENDFB                                                           39 02090
C/        IF(ENDF)THEN                                                  39 02100
C/           WRITE(ITRMOU,2) 'OUTPUT '//FILE(5)                         39 02110
C/           OPEN(UNIT=IENDF,FILE=FILE(5),ACCESS='SEQUENTIAL',          39 02120
C/     2       STATUS='NEW')                                            39 02130
C/        ENDIF                                                         39 02140
C/C^^^^^ENDFB                                                           39 02150
C/C%%%%%NUDATA                                                          39 02160
C/        IF(NUDAT)THEN                                                 39 02170
C/           WRITE(ITRMOU,2) 'OUTPUT '//FILE(6)                         39 02180
C/           OPEN(UNIT=INUDAT,FILE=FILE(6),ACCESS='SEQUENTIAL',         39 02190
C/     2       STATUS='NEW',CARRIAGECONTROL='LIST')                     39 02200
C/        ENDIF                                                         39 02210
C/C^^^^^NUDATA                                                          39 02220
C/C%%%%%MIRD                                                            39 02230
C/      IF(MIRD)THEN                                                    39 02240
C/         WRITE(ITRMOU,2)'OUTPUT '//FILE(8)                            39 02250
C/         OPEN(UNIT=MIRDRP,FILE=FILE(8),ACCESS='SEQUENTIAL',           39 02260
C/     2     STATUS='NEW',CARRIAGECONTROL='LIST')                       39 02270
C/         WRITE(ITRMOU,2)'TEMP   '//FILE(9)                            39 02280
C/         OPEN(UNIT=MIRDTM,FILE=FILE(9),ACCESS='DIRECT',               39 02290
C/     2     STATUS='NEW',RECL=20)                                      39 02300
C/         WRITE(ITRMOU,2)'OUTPUT '//FILE(10)                           39 02310
C/         OPEN(UNIT=MIRDPL,FILE=FILE(10),ACCESS='SEQUENTIAL',          39 02320
C/     2     STATUS='NEW',CARRIAGECONTROL='LIST')                       39 02330
C/      ENDIF                                                           39 02340
C/C^^^^^                                                                39 02350
C/        RETURN                                                        39 02360
C/C                                                                     39 02370
C/C  Stop processing if any input file not found                        39 02380
C/200     CONTINUE                                                      39 02390
C/        WRITE(ITRMOU,*) ' FILE NOT FOUND'                             39 02400
C/        STOP                                                          39 02410
C/C                                                                     39 02420
C/        END                                                           39 02430
C---MDC---                                                              40 00010
C=====                                                                  40 00020
C=====Output Routines for Radiation Listings                            40 00030
C%%%%%MEDOUT                                                            40 00040
      SUBROUTINE MEDOUT(NDK,NTOP,MAXEC,Z,E,DE,RI,DRI,EX,DEX,KSAVE,IPOST,40 00050
     2  BREMS)                                                          40 00060
C                                                                       40 00070
C  Outputs radiations from ENSDF data sets in a FORTRAN-formatted file  40 00080
C                                                                       40 00090
      INTEGER NDK,NTOP,MAXEC,Z,KSAVE(NTOP),IPOST(NTOP)                  40 00100
      REAL E(NTOP),DE(NTOP),RI(NTOP),DRI(NTOP),EX(NTOP),DEX(NTOP)       40 00110
      LOGICAL BREMS                                                     40 00120
C                                                                       40 00130
      INTEGER GMA,AM,MAXDCY,NGRMAX                                      40 00140
      PARAMETER (GMA=999,AM=99,MAXDCY=4,NGRMAX=30)                      40 00150
C                                                                       40 00160
      INTEGER NTB                                                       40 00170
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 40 00180
     2  AVBEX,DAVBX                                                     40 00190
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,NTB40 00200
C                                                                       40 00210
      INTEGER NTP,KLASS(AM)                                             40 00220
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      40 00230
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,40 00240
     3  AVPEX,DAVPX                                                     40 00250
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,40 00260
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP                           40 00270
C                                                                       40 00280
      INTEGER NA,NB,NE,NK1,NG                                           40 00290
      COMMON /COUNTS/ NA,NB,NE,NK1,NG                                   40 00300
C                                                                       40 00310
      INTEGER NOMIT(5)                                                  40 00320
      REAL  EOMIT(5),OMIT(5),RIMIN                                      40 00330
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT                             40 00340
C                                                                       40 00350
      INTEGER ICOMNT                                                    40 00360
      CHARACTER*80 HEAD,LABEL,COMENT(10)                                40 00370
      COMMON /HEADS1/  HEAD,LABEL,COMENT                                40 00380
      COMMON /HEADS2/  ICOMNT                                           40 00390
C                                                                       40 00400
      INTEGER IREPT,IENSDF                                              40 00410
      COMMON /RPTUNT/IREPT,IENSDF                                       40 00420
C%%%%%SPECTR                                                            40 00430
      INTEGER NGRIDM,NGRIDP                                             40 00440
      REAL EBMS(NGRMAX),RIBMS(NGRMAX),DRIBMS(NGRMAX),                   40 00450
     2  EBARMS(NGRMAX),DEBRMS(NGRMAX),EBPS(NGRMAX),RIBPS(NGRMAX),       40 00460
     2  DRIBPS(NGRMAX),EBARPS(NGRMAX),DEBRPS(NGRMAX)                    40 00470
      COMMON /BMSPCT/NGRIDM,EBMS,RIBMS,DRIBMS,EBARMS,DEBRMS             40 00480
      COMMON /BPSPCT/NGRIDP,EBPS,RIBPS,DRIBPS,EBARPS,DEBRPS             40 00490
C%%%%%BREMST                                                            40 00500
      INTEGER NGRIDI                                                    40 00510
      REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),    40 00520
     2  DEBRIS(NGRMAX),SUMEB,DSUMEB                                     40 00530
      COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS,SUMEB,DSUMEB40 00540
C^^^^^BREMST                                                            40 00550
C^^^^^SPECTR                                                            40 00560
      INTEGER IPTE,IPTR                                                 40 00570
      COMMON/POINTS/IPTE,IPTR                                           40 00580
C                                                                       40 00590
      INTEGER I,IP,ISPACE,J,K,KS,L,NHIGH,NLOW,IPE,NTEMP                 40 00600
      REAL GOMIT,EPT,RPT                                                40 00610
      CHARACTER ARI*10,DARI*2,NUM*3                                     40 00620
      CHARACTER OUTE*15,OUTEX*15,OUTI*12,DOSE*8                         40 00630
      CHARACTER*10 BIN,BIN1,BIN2                                        40 00640
C                                                                       40 00650
C  Formats for Auger and conversion electrons                           40 00660
      CHARACTER*36 FORMEL(-2:5)                                         40 00670
      DATA FORMEL/                                                      40 00680
     2  '(8H AUGER-L,3X,2X,A15,1X,A12,1X,A8)',                          40 00690
     3  '(8H AUGER-K,3X,2X,A15,1X,A12,1X,A8)','(1H )',                  40 00700
     4  '(8H CE- K -,A3,2X,A15,1X,A12,1X,A8)',                          40 00710
     5  '(8H CE- L -,A3,2X,A15,1X,A12,1X,A8)',                          40 00720
     6  '(8H CE- M -,A3,2X,A15,1X,A12,1X,A8)',                          40 00730
     7  '(8H CE-NOP-,A3,2X,A15,1X,A12,1X,A8)',                          40 00740
     8  '(8H CE-MNO-,A3,2X,A15,1X,A12,1X,A8)'/                          40 00750
C                                                                       40 00760
C  Formats for B- and B+                                                40 00770
      CHARACTER*62 FORMB(4)                                             40 00780
      DATA FORMB/                                                       40 00790
     2  '(9H TOTAL B-/7X,3HAVG,1X,2X,A15,1X,A12,1X,A8)',                40 00800
     3  '(9H TOTAL B+/7X,3HAVG,1X,2X,A15,1X,A12,1X,A8)',                40 00810
     4  '(3H B-,A3,1X,3HMAX,1X,2X,A15/7X,3HAVG,1X,2X,A15,1X,A12,1X,A8)',40 00820
     5  '(3H B+,A3,1X,3HMAX,1X,2X,A15/7X,3HAVG,1X,2X,A15,1X,A12,1X,A8)'/40 00830
C                                                                       40 00840
C  Formats for photon output                                            40 00850
      CHARACTER*37 FORMPH(-4:1)                                         40 00860
      DATA FORMPH/                                                      40 00870
     2  '(11H X-RAY  L  ,2X,A15,1X,A12,1X,A8)',                         40 00880
     3  '(11H X-RAY  KB ,2X,A15,1X,A12,1X,A8)',                         40 00890
     4  '(11H X-RAY  KA2,2X,A15,1X,A12,1X,A8)',                         40 00900
     5  '(11H X-RAY  KA1,2X,A15,1X,A12,1X,A8)',                         40 00910
     6  '(11H K X-RAY   ,2X,A15,1X,A12,1X,A8)',                         40 00920
     7  '(4H  G ,A3,4X,  2X,A15,1X,A12,1X,A8)'/                         40 00930
C                                                                       40 00940
C  Formats for EC output                                                40 00950
        CHARACTER*24 FORMEC(6)                                          40 00960
        DATA FORMEC/                                                    40 00970
     2    '(9H EC- K  -,I3,1X,A15)','(9H EC- L  -,I3,1X,A15)',          40 00980
     3    '(9H EC- M  -,I3,1X,A15)','(9H EC-MNOP-,I3,1X,A15)',          40 00990
     4    '(9H EC-NOP -,I3,1X,A15)','(9H EC-TOTL-,I3,1X,A15)'/          40 01000
C                                                                       40 01010
        REAL ALOG10                                                     40 01020
        INTRINSIC ALOG10                                                40 01030
C                                                                       40 01040
C  Skip space for next list and print headings                          40 01050
      WRITE (IENSDF,'(1H0////)')                                        40 01060
      WRITE(IENSDF,4) LABEL                                             40 01070
      IF(ICOMNT .NE. 0)WRITE(IENSDF,4) (COMENT(I),I=1,ICOMNT)           40 01080
      WRITE(IENSDF,3)                                                   40 01090
C                                                                       40 01100
C  Get decimal position for aligning output                             40 01110
        IF(NE .LE. 0)THEN                                               40 01120
           NTEMP=NTOP                                                   40 01130
        ELSE                                                            40 01140
           NTEMP=6*NG+NK1+NB+2*NDK+4*NDK+NA                             40 01150
        ENDIF                                                           40 01160
        EPT=0.                                                          40 01170
        RPT=0.                                                          40 01180
        DO 100 I=1,NTEMP                                                40 01190
           EPT=AMAX1(EPT,E(I))                                          40 01200
           EPT=AMAX1(EPT,EX(I))                                         40 01210
           RPT=AMAX1(RPT,RI(I))                                         40 01220
100     CONTINUE                                                        40 01230
        IF(EPT .NE. 0.)THEN                                             40 01240
           IPTE=INT(ALOG10(EPT))                                        40 01250
        ELSE                                                            40 01260
           IPTE=0                                                       40 01270
        ENDIF                                                           40 01280
        IF(IPTE .LE. 0)THEN                                             40 01290
           IPTE=2                                                       40 01300
        ELSE                                                            40 01310
           IPTE=IPTE+2                                                  40 01320
        ENDIF                                                           40 01330
        IF(RPT .NE. 0.)THEN                                             40 01340
           IPTR=INT(ALOG10(RPT))                                        40 01350
        ELSE                                                            40 01360
           IPTR=0                                                       40 01370
        ENDIF                                                           40 01380
        IF(IPTR .LE. 0)THEN                                             40 01390
           IPTR=2                                                       40 01400
        ELSE                                                            40 01410
           IPTR=IPTR+2                                                  40 01420
        ENDIF                                                           40 01430
C                                                                       40 01440
C  Print Auger and conversion electron data                             40 01450
      IF(NG+NE .GT. 0) THEN                                             40 01460
         ISPACE=0                                                       40 01470
         NLOW=1                                                         40 01480
         NHIGH=5*NG + 2*NDK                                             40 01490
         DO 110 I=NLOW,NHIGH                                            40 01500
            IF ((E(I) .GE. 10.**(-12)) .AND. (RI(I) .GE. RIMIN)) THEN   40 01510
               IF(IPOST(I) .LE. 0)THEN                                  40 01520
                  K=IPOST(I)                                            40 01530
                  NUM=' '                                               40 01540
               ELSE                                                     40 01550
                  KS=KSAVE(I)/10                                        40 01560
                  CALL NUMSTR(KS,NUM)                                   40 01570
                  K=KSAVE(I)-10*KS                                      40 01580
               ENDIF                                                    40 01590
               CALL LISLN1(I,E,DE,RI,DRI,FORMEL(K),NUM)                 40 01600
               ISPACE=1                                                 40 01610
            ENDIF                                                       40 01620
110      CONTINUE                                                       40 01630
         IF (ISPACE.EQ.1)  WRITE(IENSDF,*) ' '                          40 01640
      ENDIF                                                             40 01650
C                                                                       40 01660
C  Print Alpha data                                                     40 01670
      IF (NA .GT. 0) THEN                                               40 01680
         NLOW=5*NG+2*NDK+1                                              40 01690
         IF ((NG+NE).EQ. 0) NLOW=1                                      40 01700
         NHIGH=NLOW+NA-1                                                40 01710
         J=0                                                            40 01720
         DO 150 I=NLOW,NHIGH                                            40 01730
            J=J+1                                                       40 01740
            CALL NUMSTR(J,NUM)                                          40 01750
            CALL LISLN1(I,E,DE,RI,DRI,                                  40 01760
     2        '(4H  A ,A3,4X,2X,A15,1X,A12,1X,A8)',NUM)                 40 01770
150      CONTINUE                                                       40 01780
      ENDIF                                                             40 01790
      IF(OMIT(1) .GT. .01)  WRITE(IENSDF,1) NOMIT(1),'A','A',OMIT(1)    40 01800
C                                                                       40 01810
      IF (NA.NE.0) WRITE(IENSDF,*) ' '                                  40 01820
C  Print B- and B+ data                                                 40 01830
      IF ((NG+NE) .GT. 0)THEN                                           40 01840
         NLOW=5*NG+2*NDK +1+NA                                          40 01850
      ELSE                                                              40 01860
         NLOW=1  +NA                                                    40 01870
      ENDIF                                                             40 01880
      NHIGH=NLOW-1                                                      40 01890
      IF (NB .GT. 0) THEN                                               40 01900
         IF(NB .EQ. 1)THEN                                              40 01910
            CALL LISLN2(NLOW,E,DE,EX,DEX,RI,DRI,FORMB(3),'1')           40 01920
            NHIGH=NLOW                                                  40 01930
         ELSE                                                           40 01940
            NHIGH=NLOW+NB - 1                                           40 01950
            DO 200 I=NLOW,NHIGH                                         40 01960
               IF(I .EQ. NTB)THEN                                       40 01970
                  K=1                                                   40 01980
                  NUM=' '                                               40 01990
               ELSE                                                     40 02000
                  K=3                                                   40 02010
                  IP=I-NLOW+1                                           40 02020
                  CALL NUMSTR(IP,NUM)                                   40 02030
               ENDIF                                                    40 02040
               CALL LISLN2(I,E,DE,EX,DEX,RI,DRI,FORMB(K),NUM)           40 02050
200         CONTINUE                                                    40 02060
         ENDIF                                                          40 02070
      ENDIF                                                             40 02080
      NLOW=NHIGH+1                                                      40 02090
      IF (NK1 .GT. 0) THEN                                              40 02100
         IF(NK1 .EQ. 1)THEN                                             40 02110
            CALL LISLN2(NLOW,E,DE,EX,DEX,RI,DRI,FORMB(4),'1')           40 02120
            NHIGH=NLOW                                                  40 02130
         ELSE                                                           40 02140
            NHIGH=NLOW+NK1-1                                            40 02150
            DO 250 I=NLOW,NHIGH                                         40 02160
               IF(I .EQ. NTP)THEN                                       40 02170
                  K=2                                                   40 02180
                  NUM=' '                                               40 02190
               ELSE                                                     40 02200
                  K=4                                                   40 02210
                  IP=I-NLOW+1                                           40 02220
                  CALL NUMSTR(IP,NUM)                                   40 02230
               ENDIF                                                    40 02240
               CALL LISLN2(I,E,DE,EX,DEX,RI,DRI,FORMB(K),NUM)           40 02250
250         CONTINUE                                                    40 02260
         ENDIF                                                          40 02270
      ENDIF                                                             40 02280
      IF(OMIT(2).GT..01) WRITE(IENSDF,1) NOMIT(2),'B','B',OMIT(2)       40 02290
      IF ((NB+NK1).NE.0) WRITE(IENSDF,*) ' '                            40 02300
C  Print Gamma and X-ray data                                           40 02310
      IF(NG+NE .GT. 0) THEN                                             40 02320
         NLOW=5*NG+NK1+NB+2*NDK +1+NA                                   40 02330
         NHIGH=NLOW+NG+4*NDK-1                                          40 02340
         DO 300 I=NLOW,NHIGH                                            40 02350
            IF(RI(I) .GE. RIMIN) THEN                                   40 02360
               IF(IPOST(I) .GT. 0) THEN                                 40 02370
C                 Gammas                                                40 02380
                  CALL NUMSTR(KSAVE(I),NUM)                             40 02390
                  IP=1                                                  40 02400
               ELSE                                                     40 02410
C                 X rays--KA1,KA2,KB,L                                  40 02420
                  NUM=' '                                               40 02430
                  IF (Z.LT.20) THEN                                     40 02440
                     IP=0                                               40 02450
                  ELSE                                                  40 02460
                     IP=IPOST(I)                                        40 02470
                  ENDIF                                                 40 02480
               ENDIF                                                    40 02490
               CALL LISLN1(I,E,DE,RI,DRI,FORMPH(IP),NUM)                40 02500
            ENDIF                                                       40 02510
300      CONTINUE                                                       40 02520
      ENDIF                                                             40 02530
      IF (OMIT(4).GT.0.01) WRITE(IENSDF,1) NOMIT(4),'G','G',OMIT(4)     40 02540
      IF(NK1 .GT. 0) THEN                                               40 02550
         GOMIT=2.*TPI                                                   40 02560
         IF(GOMIT.GT..01)WRITE(IENSDF,                                  40 02570
     2     '(1H ,6X,24HMAXIMUM G+/- INTENSITY =,F6.2,1H%)') GOMIT       40 02580
      ENDIF                                                             40 02590
C  Print electron capture intensities--K,L,M,M+,N+,TOTAL                40 02600
      IF ((NE .GT. 0) .AND. (MAXEC .GT. 0)) THEN                        40 02610
         WRITE (IENSDF,'(////1H0,7X,14HEC INTENSITIES)')                40 02620
         J=0                                                            40 02630
         NLOW=6*NG+NK1+NB+2*NDK+4*NDK+1+NA                              40 02640
         NHIGH=NLOW+NE-1                                                40 02650
         DO 350 I=NLOW,NHIGH                                            40 02660
            J=J+1                                                       40 02670
            IF (J .LE. MAXEC)THEN                                       40 02680
               DO 340  L=1,6                                            40 02690
                  K=I+NE*(L-1)                                          40 02700
                  IF (RI(K) .GE. RIMIN)THEN                             40 02710
                     CALL CNVU2S(RI(K),DRI(K),ARI,12,DARI,2)            40 02720
                     CALL DATOUT(RI(K),DRI(K),OUTE,15,IPTE)             40 02730
                     WRITE(IENSDF,FORMEC(L)),J,OUTE                     40 02740
                  ENDIF                                                 40 02750
340            CONTINUE                                                 40 02760
            ENDIF                                                       40 02770
350      CONTINUE                                                       40 02780
         WRITE(IENSDF,'(/)')                                            40 02790
      ENDIF                                                             40 02800
C                                                                       40 02810
C  Output for continua                                                  40 02820
      IF(NGRIDM+NGRIDP+NGRIDI .GT. 0)THEN                               40 02830
         WRITE(IENSDF,FMT='(1H0,16X,A)')'CONTINUUM SPECTRA'             40 02840
         IF(NGRIDM .GT. 0)THEN                                          40 02850
            WRITE(IENSDF,FMT='(1H0,22X,A)')'Beta-'                      40 02860
            WRITE(IENSDF,2)                                             40 02870
            EPT=0.                                                      40 02880
            CALL CONOUT(IENSDF,RIMIN,NGRIDM,EBMS,RIBMS,DRIBMS,          40 02890
     2        EBARMS,DEBRMS,EPT)                                        40 02900
         ENDIF                                                          40 02910
         IF(NGRIDP .GT. 0)THEN                                          40 02920
            WRITE(IENSDF,FMT='(1H0,22X,A)')'Beta+'                      40 02930
            WRITE(IENSDF,2)                                             40 02940
            EPT=0.                                                      40 02950
            CALL CONOUT(IENSDF,RIMIN,NGRIDP,EBPS,RIBPS,DRIBPS,          40 02960
     2        EBARPS,DEBRPS,EPT)                                        40 02970
         ENDIF                                                          40 02980
         IF(BREMS .AND. NGRIDI .GT. 0)THEN                              40 02990
            WRITE(IENSDF,FMT='(1H0,13X,A)')'Internal Bremsstrahlung'    40 03000
            WRITE(IENSDF,2)                                             40 03010
            CALL CONOUT(IENSDF,RIMIN,NGRIDI,EBIS,RIBIS,DRIBIS,          40 03020
     2        EBARIS,DEBRIS,SUMEB)                                      40 03030
            IPE=INT(ALOG10(SUMEB))                                      40 03040
            IF(IPE .LE. 0)THEN                                          40 03050
               IPE=2                                                    40 03060
            ELSE                                                        40 03070
               IPE=IPE+2                                                40 03080
            ENDIF                                                       40 03090
            CALL DATOUT(SUMEB,DSUMEB,OUTE,15,IPE)                       40 03100
            WRITE(IENSDF,FMT='(12H -----------/                         40 03110
     2        12H  Total <E> ,2X,A15)')OUTE                             40 03120
         ENDIF                                                          40 03130
      ENDIF                                                             40 03140
      RETURN                                                            40 03150
C                                                                       40 03160
1     FORMAT(1H0,I8,6H WEAK ,A1,17H'S OMITTED (SUM(I,A1,2H)=,F5.2,2H%)) 40 03170
C                                                                       40 03180
2     FORMAT(12H0    Bin    ,2X,15H      <E>      ,1X,12H  Intensity ,  40 03190
     2 1X,8H (G-Rad /                                                   40 03200
     3       12H    (keV)   ,2X,15H  (keV/Decay)  ,1X,12H     (%)    ,  40 03210
     4 1X,8H uCi-h) /                                                   40 03220
     5       12H -----------,2X,15H---------------,1X,12H------------,  40 03230
     6 1X,8H--------/)                                                  40 03240
C                                                                       40 03250
3     FORMAT(11H0Radiation ,2X,15H     Energy    ,1X,12H  Intensity ,   40 03260
     2 1X,8H (G-Rad /                                                   40 03270
     3       11H    Type   ,2X,15H      (keV)    ,1X,12H     (%)    ,   40 03280
     4 1X,8H uCi-h) /                                                   40 03290
     5       11H ----------,2X,15H---------------,1X,12H------------,   40 03300
     6 1X,8H--------/)                                                  40 03310
C                                                                       40 03320
4     FORMAT(1H ,A)                                                     40 03330
      END                                                               40 03340
C                                                                       41 00010
        SUBROUTINE LISLN1(I,E,DE,RI,DRI,FORM,NUM)                       41 00020
C                                                                       41 00030
C  Formats and outputs a line for electrons, alphas, and gammas in      41 00040
C    the radiations listing                                             41 00050
C                                                                       41 00060
        INTEGER I                                                       41 00070
        REAL E(I),DE(I),RI(I),DRI(I)                                    41 00080
        CHARACTER FORM*(*),NUM*(*)                                      41 00090
C                                                                       41 00100
        INTEGER IREPT,IENSDF                                            41 00110
        COMMON /RPTUNT/IREPT,IENSDF                                     41 00120
C                                                                       41 00130
        INTEGER IPTE,IPTR                                               41 00140
        COMMON/POINTS/IPTE,IPTR                                         41 00150
C                                                                       41 00160
       CHARACTER OUTE*15,OUTI*12,DOSE*8                                 41 00170
C                                                                       41 00180
        CALL DATOUT(E(I),DE(I),OUTE,15,IPTE)                            41 00190
        CALL DATOUT(RI(I),DRI(I),OUTI,12,IPTR)                          41 00200
        CALL DELWRI(E(I),RI(I),DOSE)                                    41 00210
        IF(NUM .EQ. ' ')WRITE(IENSDF,FORM) OUTE,OUTI,DOSE               41 00220
        IF(NUM .NE. ' ')WRITE(IENSDF,FORM) NUM,OUTE,OUTI,DOSE           41 00230
        RETURN                                                          41 00240
        END                                                             41 00250
C                                                                       42 00010
        SUBROUTINE LISLN2(I,E,DE,EX,DEX,RI,DRI,FORM,NUM)                42 00020
C                                                                       42 00030
C  Formats and outputs two lines for beta+- in the radiations listing   42 00040
C                                                                       42 00050
        INTEGER I                                                       42 00060
        REAL E(I),DE(I),EX(I),DEX(I),RI(I),DRI(I)                       42 00070
        CHARACTER FORM*(*),NUM*(*)                                      42 00080
C                                                                       42 00090
        INTEGER IREPT,IENSDF                                            42 00100
        COMMON /RPTUNT/IREPT,IENSDF                                     42 00110
C                                                                       42 00120
        INTEGER IPTE,IPTR                                               42 00130
        COMMON/POINTS/IPTE,IPTR                                         42 00140
C                                                                       42 00150
        CHARACTER OUTE*15,OUTEX*15,OUTI*12,DOSE*8                       42 00160
C                                                                       42 00170
        IF(E(I) .GT. 0.)THEN                                            42 00180
           CALL DATOUT(E(I),DE(I),OUTE,15,IPTE)                         42 00190
        ELSE                                                            42 00200
           OUTE=' '                                                     42 00210
        ENDIF                                                           42 00220
        CALL DATOUT(EX(I),DEX(I),OUTEX,15,IPTE)                         42 00230
        CALL DATOUT(RI(I),DRI(I),OUTI,12,IPTR)                          42 00240
        CALL DELWRI(E(I),RI(I),DOSE)                                    42 00250
        IF(NUM .EQ. ' ')WRITE(IENSDF,FORM) OUTE,OUTI,DOSE               42 00260
        IF(NUM .NE. ' ')WRITE(IENSDF,FORM) NUM,OUTEX,OUTE,OUTI,DOSE     42 00270
        RETURN                                                          42 00280
        END                                                             42 00290
C                                                                       43 00010
      SUBROUTINE DELWRI(E,RI,DOSE)                                      43 00020
C                                                                       43 00030
C  Gets dose for MEDOUT                                                 43 00040
C                                                                       43 00050
      REAL E,RI                                                         43 00060
      CHARACTER DOSE*(*)                                                43 00070
C                                                                       43 00080
      REAL DELTA                                                        43 00090
C                                                                       43 00100
      DELTA=E*RI*2.13E-5                                                43 00110
      IF (DELTA .LE. 0.0001) THEN                                       43 00120
         WRITE(DOSE,FMT='(3X,2H 0)')                                    43 00130
         RETURN                                                         43 00140
      ENDIF                                                             43 00150
      IF (DELTA .LT. 0.1) THEN                                          43 00160
         WRITE(DOSE,FMT='(F8.4)')  DELTA                                43 00170
         RETURN                                                         43 00180
      ENDIF                                                             43 00190
      IF(DELTA .LT. 1.0) THEN                                           43 00200
         WRITE (DOSE,FMT='(F7.3)') DELTA                                43 00210
         RETURN                                                         43 00220
      ENDIF                                                             43 00230
      WRITE (DOSE,FMT='(F6.2)') DELTA                                   43 00240
      RETURN                                                            43 00250
      END                                                               43 00260
C-----   Continua Output for Radiations Listing                         44 00010
C%%%%%SPECTR                                                            44 00020
        SUBROUTINE CONOUT(IENSDF,RIMIN,NGRID,EGRID,RI,DRI,EBAR,DEBAR,E) 44 00030
C                                                                       44 00040
C  Outputs the continua                                                 44 00050
C                                                                       44 00060
        INTEGER IENSDF,NGRID                                            44 00070
        REAL RIMIN,EGRID(NGRID),RI(NGRID),DRI(NGRID),EBAR(NGRID),       44 00080
     2    DEBAR(NGRID)                                                  44 00090
C                                                                       44 00100
        INTEGER LENSTR                                                  44 00110
        EXTERNAL LENSTR                                                 44 00120
C                                                                       44 00130
        REAL ALOG10                                                     44 00140
        INTRINSIC ALOG10                                                44 00150
C                                                                       44 00160
        INTEGER I,K,IC,I1,I2,IJ,J,L1,L2,L,IPE,IPR                       44 00170
        REAL TEMP,DTEMP,ETEMP,DETMP,E,R                                 44 00180
        CHARACTER OUTE*15,OUTI*12,DOSE*8                                44 00190
        CHARACTER*11 BIN,BIN1,BIN2,STR                                  44 00200
C                                                                       44 00210
C  Get decimal position for aligning output                             44 00220
        R=0.                                                            44 00230
        DO 100 I=1,NGRID                                                44 00240
           E=AMAX1(E,EBAR(I))                                           44 00250
           R=AMAX1(R,RI(I))                                             44 00260
100     CONTINUE                                                        44 00270
        IPE=INT(ALOG10(E))                                              44 00280
        IF(IPE .LE. 0)THEN                                              44 00290
           IPE=2                                                        44 00300
        ELSE                                                            44 00310
           IPE=IPE+2                                                    44 00320
        ENDIF                                                           44 00330
        IPR=INT(ALOG10(R))                                              44 00340
        IF(IPR .LE. 0)THEN                                              44 00350
           IPR=2                                                        44 00360
        ELSE                                                            44 00370
           IPR=IPR+2                                                    44 00380
        ENDIF                                                           44 00390
C  Now output data                                                      44 00400
        DO 600 I=1,NGRID-1                                              44 00410
           IF(EBAR(I) .EQ. 0.)GOTO 600                                  44 00420
           I1=NINT(EGRID(I))                                            44 00430
           I2=NINT(EGRID(I+1))                                          44 00440
           WRITE(BIN1,1)I1                                              44 00450
1          FORMAT(I5)                                                   44 00460
           WRITE(BIN2,1)I2                                              44 00470
           CALL SQZSTR(BIN1,' ')                                        44 00480
           CALL SQZSTR(BIN2,' ')                                        44 00490
           L1=LENSTR(BIN1)                                              44 00500
           L2=LENSTR(BIN2)                                              44 00510
           IF(L1+L2 .LE. 10)THEN                                        44 00520
              BIN=BIN1(1:L1)//'-'//BIN2(1:L2)                           44 00530
              L=(11-LENSTR(BIN))/2                                      44 00540
              IF(L .NE. 0)THEN                                          44 00550
                 STR=BIN                                                44 00560
                 BIN=' '                                                44 00570
                 BIN(L+1:)=STR                                          44 00580
              ENDIF                                                     44 00590
           ELSE                                                         44 00600
              WRITE(BIN,FMT='(E5.0,1H-,E5.0)')                          44 00610
     2          ANINT(EGRID(I)),ANINT(EGRID(I+1))                       44 00620
           ENDIF                                                        44 00630
           CALL DATOUT(EBAR(I),DEBAR(I),OUTE,15,IPE)                    44 00640
           IF(RI(I) .GE. 0.)THEN                                        44 00650
              CALL DATOUT(RI(I),DRI(I),OUTI,12,IPR)                     44 00660
              CALL DELWRI(EBAR(I),100.,DOSE)                            44 00670
           ELSE                                                         44 00680
              OUTI=' Undefined'                                         44 00690
              CALL DELWRI(EBAR(I),100.,DOSE)                            44 00700
           ENDIF                                                        44 00710
           WRITE(IENSDF,FMT='(1X,A11,2X,A15,1X,A12,1X,A8)')             44 00720
     2       BIN,OUTE,OUTI,DOSE                                         44 00730
600     CONTINUE                                                        44 00740
        RETURN                                                          44 00750
        END                                                             44 00760
C^^^^^SPECTR                                                            45 00010
C-----                                                                  45 00020
C^^^^^MEDOUT                                                            45 00030
C=====                                                                  45 00040
C=====  ENDF Storage and Output Routines                                45 00050
C%%%%%ENDFB                                                             45 00060
        SUBROUTINE CMNTCD(CARD,ITYPE,ICONT,ENERGY,JCONT,NMESS)          45 00070
C                                                                       45 00080
C  Stores comments for ENDF/B-VI output                                 45 00090
C                                                                       45 00100
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************45 00110
C*                           Present Code                               45 00120
C*                           ------------                               45 00130
C*  MESSAG                                                              45 00140
C*                           F77STR  4(2)                               45 00150
C*                           ------------                               45 00160
C*  ADDSTR  LENSTR  TYPSTR                                              45 00170
C*                                                                      45 00180
C*                        FORTRAN 77 Supplied                           45 00190
C*                        -------------------                           45 00200
C*  INDEX   MIN0                                                        45 00210
C*                                                                      45 00220
C***********************************************************************45 00230
        INTEGER ICONT,ITYPE,JCONT,NMESS                                 45 00240
        CHARACTER*(*) CARD,ENERGY                                       45 00250
C                                                                       45 00260
        INTEGER PCOMNT,KCOMNT,NDK                                       45 00270
        PARAMETER (PCOMNT=294)                                          45 00280
        CHARACTER KOMENT(PCOMNT)*66,PAR*2                               45 00290
        COMMON /ENDCNT/KCOMNT,NDK                                       45 00300
        COMMON /ENDCOM/ PAR,KOMENT                                      45 00310
C                                                                       45 00320
        INTEGER TYPSTR,LENSTR                                           45 00330
        EXTERNAL TYPSTR,LENSTR                                          45 00340
C                                                                       45 00350
        INTEGER I,L,LEN,LEN2                                            45 00360
        CHARACTER*200 LINE,LINE2                                        45 00370
C                                                                       45 00380
        CHARACTER*36 MESS                                               45 00390
        DATA MESS/'PROGRAM CAPACITY EXCEEDED.  COMMENTS'/               45 00400
C                                                                       45 00410
        INTEGER MIN0                                                    45 00420
        INTRINSIC MIN0                                                  45 00430
C                                                                       45 00440
C     ITYPE  ICONT  SUM    MEANING                                      45 00450
C                                                                       45 00460
C       0      0     0     General comment, first record                45 00470
C       0      1     1     General comment, continuation record         45 00480
C       2      0     2     Specific comment, first record               45 00490
C       2      1     3     Specific comment, continuation record        45 00500
C                                                                       45 00510
C       JCONT=0 ==> No left-over comment                                45 00520
C       JCONT=1 ==> Left-over comment                                   45 00530
C                                                                       45 00540
        LINE=' '                                                        45 00550
        JCONT=1                                                         45 00560
C  The following types of comments are not related directly to data     45 00570
C    output in ENDF format                                              45 00580
        IF(CARD(8:8) .EQ. 'A')THEN                                      45 00590
           IF(INDEX(CARD,'$') .NE. 0)THEN                               45 00600
              LEN=INDEX(CARD,'$')                                       45 00610
           ELSE                                                         45 00620
              LEN=19                                                    45 00630
           ENDIF                                                        45 00640
           IF(INDEX(CARD(1:LEN),'HF') .GT. 0                            45 00650
     2       .AND. INDEX(CARD(1:LEN),',') .LE. 0)RETURN                 45 00660
        ENDIF                                                           45 00670
        IF(CARD(8:8) .EQ. 'B' .OR. CARD(8:8) .EQ. 'E')THEN              45 00680
           IF(INDEX(CARD,'$') .NE. 0)THEN                               45 00690
              LEN=INDEX(CARD,'$')                                       45 00700
           ELSE                                                         45 00710
              LEN=19                                                    45 00720
           ENDIF                                                        45 00730
           IF(INDEX(CARD(1:LEN),'LOGFT') .GT. 0                         45 00740
     2       .AND. INDEX(CARD(1:LEN),',') .LE. 0)RETURN                 45 00750
        ENDIF                                                           45 00760
        IF(CARD(8:8) .EQ. 'G')THEN                                      45 00770
           IF(INDEX(CARD,'$') .NE. 0)THEN                               45 00780
              LEN=INDEX(CARD,'$')                                       45 00790
           ELSE                                                         45 00800
              LEN=19                                                    45 00810
           ENDIF                                                        45 00820
           IF(INDEX(CARD(1:LEN),',') .LE. 0)THEN                        45 00830
              IF(INDEX(CARD(1:LEN),'M') .GT. 0)RETURN                   45 00840
           ELSE                                                         45 00850
              IF(INDEX(CARD(1:INDEX(CARD(1:LEN),',')),'M') .GT. 0 .AND. 45 00860
     2          INDEX(CARD(INDEX(CARD(1:LEN),','):LEN),'M') .GT. 0)     45 00870
     3          RETURN                                                  45 00880
           ENDIF                                                        45 00890
        ENDIF                                                           45 00900
C                                                                       45 00910
        IF(KCOMNT .GE. PCOMNT)THEN                                      45 00920
           KCOMNT=PCOMNT                                                45 00930
           CALL MESSAG(NMESS,1,MESS)                                    45 00940
           RETURN                                                       45 00950
        ENDIF                                                           45 00960
        IF(ITYPE .EQ. 0)THEN                                            45 00970
           IF(CARD(8:8) .EQ. 'L')RETURN                                 45 00980
           KCOMNT=KCOMNT+1                                              45 00990
           IF(KCOMNT .GT. PCOMNT)THEN                                   45 01000
              KCOMNT=PCOMNT                                             45 01010
              CALL MESSAG(NMESS,1,MESS)                                 45 01020
              RETURN                                                    45 01030
           ENDIF                                                        45 01040
           IF(ICONT .EQ. 0)THEN                                         45 01050
              JCONT=0                                                   45 01060
              LINE=CARD(10:80)                                          45 01070
              IF(CARD(8:8) .EQ. 'N')LINE='NORMALIZATION:  '//CARD(10:80)45 01080
              IF(CARD(8:8) .EQ. 'P')LINE='PARENT:  '//CARD(10:80)       45 01090
              IF(CARD(8:8) .EQ. 'G')LINE='GAMMAS:  '//CARD(10:80)       45 01100
              IF(CARD(8:8) .EQ. 'B')LINE='BETAS:  '//CARD(10:80)        45 01110
              IF(CARD(8:8) .EQ. 'E')LINE='ELECTRON-CAPTURE:  '          45 01120
     2          //CARD(10:80)                                           45 01130
              IF(CARD(8:8) .EQ. 'A')LINE='ALPHAS:  '//CARD(10:80)       45 01140
              GOTO 100                                                  45 01150
           ENDIF                                                        45 01160
           IF(ICONT .EQ. 1)THEN                                         45 01170
              IF(JCONT .NE. 0)THEN                                      45 01180
                 KCOMNT=KCOMNT-1                                        45 01190
                 LINE=KOMENT(KCOMNT)                                    45 01200
                 CALL ADDSTR(LINE,LENSTR(LINE)+2,CARD(10:80))           45 01210
              ELSE                                                      45 01220
                 LINE(1:12)=' '                                         45 01230
                 LINE(13:)=CARD(10:80)                                  45 01240
              ENDIF                                                     45 01250
              GOTO 100                                                  45 01260
           ENDIF                                                        45 01270
        ENDIF                                                           45 01280
        IF(ITYPE .EQ. 2)THEN                                            45 01290
           IF(CARD(8:8) .EQ. 'L')RETURN                                 45 01300
           KCOMNT=KCOMNT+1                                              45 01310
           IF(KCOMNT .GT. PCOMNT)THEN                                   45 01320
              KCOMNT=PCOMNT                                             45 01330
              CALL MESSAG(NMESS,1,MESS)                                 45 01340
              RETURN                                                    45 01350
           ENDIF                                                        45 01360
           IF(ICONT .EQ. 0)THEN                                         45 01370
              JCONT=0                                                   45 01380
              IF(TYPSTR(ENERGY) .NE. 0)THEN                             45 01390
                 L=LENSTR(ENERGY)                                       45 01400
                 IF(L .GT. 6)L=6                                        45 01410
                 LINE(1:L)=ENERGY                                       45 01420
                 LINE(L+1:L+5)='-KEV'                                   45 01430
                 LINE(11:)=CARD(8:80)                                   45 01440
              ELSE                                                      45 01450
                 LINE=ENERGY//CARD(8:80)                                45 01460
              ENDIF                                                     45 01470
              GOTO 100                                                  45 01480
           ENDIF                                                        45 01490
           IF(ICONT .EQ. 1)THEN                                         45 01500
              IF(JCONT .NE. 0)THEN                                      45 01510
                 KCOMNT=KCOMNT-1                                        45 01520
                 LINE=KOMENT(KCOMNT)                                    45 01530
                 CALL ADDSTR(LINE,LENSTR(LINE)+2,CARD(10:80))           45 01540
              ELSE                                                      45 01550
                 LINE(1:12)=' '                                         45 01560
                 LINE(13:)=CARD(10:80)                                  45 01570
              ENDIF                                                     45 01580
              GOTO 100                                                  45 01590
           ENDIF                                                        45 01600
        ENDIF                                                           45 01610
        RETURN                                                          45 01620
100     CONTINUE                                                        45 01630
        LEN=LENSTR(LINE)                                                45 01640
        IF(LEN .LE. 0) RETURN                                           45 01650
        IF(LEN .LE. 66) THEN                                            45 01660
           KOMENT(KCOMNT)=LINE(1:LEN)                                   45 01670
           JCONT=1                                                      45 01680
           RETURN                                                       45 01690
        ENDIF                                                           45 01700
C                                                                       45 01710
C  Find break point                                                     45 01720
        KOMENT(KCOMNT)=' '                                              45 01730
        LEN2=MIN0(67,LEN)                                               45 01740
        DO 200 I=LEN2,1,-1                                              45 01750
           IF(LINE(I:I) .EQ. ' ' .AND. I .GT. 12)THEN                   45 01760
              KOMENT(KCOMNT)=LINE(1:I-1)                                45 01770
              LINE2=' '                                                 45 01780
              IF(I .LT. LEN)LINE2(13:)=LINE(I+1:LEN)                    45 01790
              LINE=' '                                                  45 01800
              LINE=LINE2                                                45 01810
              IF(KCOMNT .GE. PCOMNT)THEN                                45 01820
                 KCOMNT=PCOMNT                                          45 01830
                 CALL MESSAG(NMESS,1,MESS)                              45 01840
                 RETURN                                                 45 01850
              ELSE                                                      45 01860
                 KCOMNT=KCOMNT+1                                        45 01870
              ENDIF                                                     45 01880
              GOTO 100                                                  45 01890
           ENDIF                                                        45 01900
200     CONTINUE                                                        45 01910
C                                                                       45 01920
C  No break found                                                       45 01930
        KOMENT(KCOMNT)=LINE(1:66)                                       45 01940
        KCOMNT=KCOMNT+1                                                 45 01950
        IF(KCOMNT .GT. PCOMNT)THEN                                      45 01960
           KCOMNT=PCOMNT                                                45 01970
           CALL MESSAG(NMESS,1,MESS)                                    45 01980
           RETURN                                                       45 01990
        ENDIF                                                           45 02000
        LINE2=' '                                                       45 02010
        LINE2(13:)=LINE(67:LEN)                                         45 02020
        LINE=' '                                                        45 02030
        LINE=LINE2                                                      45 02040
        GOTO 100                                                        45 02050
        END                                                             45 02060
C                                                                       46 00010
        SUBROUTINE ENDSRT(NDK)                                          46 00020
C                                                                       46 00030
C  Sorting and storage routine for ENDF-related spectral data almost    46 00040
C    completely separated from other store and sort routines due to     46 00050
C    the different requirements for ENDF                                46 00060
C                                                                       46 00070
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************46 00080
C*                           Present Code                               46 00090
C*                           ------------                               46 00100
C*  TRADE8                                                              46 00110
C*                        FORTRAN 77 Supplied                           46 00120
C*                        -------------------                           46 00130
C*  SQRT                                                                46 00140
C*                                                                      46 00150
C***********************************************************************46 00160
        INTEGER NDK                                                     46 00170
C                                                                       46 00180
        INTEGER GMA,AM,MAXDCY,NDE,MAXNXA                                46 00190
        PARAMETER (GMA=999,AM=99,MAXDCY=4,NDE=2*MAXDCY+5*GMA,           46 00200
     2    MAXNXA=4*MAXDCY+1)                                            46 00210
C                                                                       46 00220
        INTEGER NA,NB,NE,NK1,NG,NTOP                                    46 00230
        COMMON /COUNTS/ NA,NB,NE,NK1,NG,NTOP                            46 00240
C                                                                       46 00250
        INTEGER NOMIT(5),IALLG                                          46 00260
        REAL EOMIT(5),OMIT(5),RIMIN                                     46 00270
        COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                     46 00280
C                                                                       46 00290
        REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),    46 00300
     2    ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10)               46 00310
        COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN        46 00320
C                                                                       46 00330
C  STYP=0:  Gamma data storage                                          46 00340
        INTEGER NSTYP0                                                  46 00350
        REAL ES0(GMA),DES0(GMA),RS0(GMA),DRS0(GMA),RICC(GMA),DRICC(GMA),46 00360
     2    RICK(GMA),DRICK(GMA),RICL(GMA),DRICL(GMA),RIS(GMA),DRIS(GMA), 46 00370
     3    RTYP0(GMA),AVE0,DAVE0                                         46 00380
        COMMON /STYP0/ES0,DES0,RS0,DRS0,RICC,DRICC,RICK,DRICK,RICL,     46 00390
     2    DRICL,RIS,DRIS,RTYP0,AVE0,DAVE0,NSTYP0                        46 00400
C                                                                       46 00410
C  STYP=1:  Beta- data storage                                          46 00420
        INTEGER NSTYP1                                                  46 00430
        REAL ES1(AM),DES1(AM),RS1(AM),DRS1(AM),RTYP1(AM),TYP1(AM),AVE1, 46 00440
     2    DAVE1                                                         46 00450
        COMMON /STYP1/ES1,DES1,RS1,DRS1,RTYP1,TYP1,AVE1,DAVE1,NSTYP1    46 00460
C                                                                       46 00470
C  STYP=2:  EC(Beta+) data storage                                      46 00480
        INTEGER NSTYP2                                                  46 00490
        REAL ES2(AM),DES2(AM),RS2(AM),DRS2(AM),RIS2(AM),DRIS2(AM),      46 00500
     2    RTYP2(AM),TYP2(AM),AVE2,DAVE2                                 46 00510
        COMMON /STYP2/ES2,DES2,RS2,DRS2,RIS2,DRIS2,RTYP2,TYP2,AVE2,     46 00520
     3    DAVE2,NSTYP2                                                  46 00530
C                                                                       46 00540
C  There is no STYP=3 in ENDF                                           46 00550
C                                                                       46 00560
C  STYP=4:  Alpha data storage                                          46 00570
        INTEGER NSTYP4                                                  46 00580
        REAL ES4(AM),DES4(AM),RS4(AM),DRS4(AM),RTYP4(AM)                46 00590
        COMMON /STYP4/ES4,DES4,RS4,DRS4,RTYP4,NSTYP4                    46 00600
C                                                                       46 00610
C  STYP=5:  Neutron data storage  ***** NOT IMPLEMENTED *****           46 00620
C       COMMON /STYP5/                                                  46 00630
C                                                                       46 00640
C  STYP=6:  Spontaeous Fission data storage  ***** NOT IMPLEMENTED *****46 00650
C       COMMON /STYP6/                                                  46 00660
C                                                                       46 00670
C  STYP=7:  Proton data storage  ***** NOT IMPLEMENTED *****            46 00680
C       COMMON /STYP7/                                                  46 00690
C                                                                       46 00700
C  STYP=8:  Discrete electron data storage                              46 00710
        INTEGER NSTYP8                                                  46 00720
        REAL ES8(NDE),DES8(NDE),RS8(NDE),DRS8(NDE),RTYP8(NDE)           46 00730
        COMMON /STYP8/ES8,DES8,RS8,DRS8,RTYP8,NSTYP8                    46 00740
C                                                                       46 00750
C  STYP=9:  X ray data storage                                          46 00760
        INTEGER NSTYP9                                                  46 00770
        REAL ES9(MAXNXA),DES9(MAXNXA),RS9(MAXNXA),DRS9(MAXNXA),         46 00780
     2    RTYP9(MAXNXA)                                                 46 00790
        COMMON /STYP9/ES9,DES9,RS9,DRS9,RTYP9,NSTYP9                    46 00800
C                                                                       46 00810
        REAL TERMK(MAXDCY),TERMK1(MAXDCY),TERML(MAXDCY),TERML1(MAXDCY), 46 00820
     2    DTERMK(MAXDCY),DTERML(MAXDCY),DTRMK1(MAXDCY),DTRML1(MAXDCY)   46 00830
        COMMON /XCOM/ TERMK,TERMK1,TERML,TERML1,DTERMK,DTERML,DTRMK1,   46 00840
     2    DTRML1                                                        46 00850
C                                                                       46 00860
        REAL WK(MAXDCY),DWK(MAXDCY),WL(MAXDCY),DWL(MAXDCY),ENKL(MAXDCY),46 00870
     2    DENKL(MAXDCY),BTOA(MAXDCY),DBTOA(MAXDCY),A2TOA1(MAXDCY),      46 00880
     3    DEA2A1(MAXDCY),BE(MAXDCY,5),DBE(MAXDCY,5),ET(MAXDCY,6),       46 00890
     4    DET(MAXDCY,6)                                                 46 00900
        COMMON /ELCOM/  WK,DWK,WL,DWL,ENKL,DENKL,BTOA,DBTOA,A2TOA1,     46 00910
     2    DEA2A1,BE,DBE,ET,DET                                          46 00920
C                                                                       46 00930
        REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5)   46 00940
        COMMON /GDATA/EG,DEG,IG,DIG,ICE,DICE                            46 00950
C                                                                       46 00960
        INTEGER I,ISPEC,J,K,L,II,JJ                                     46 00970
        REAL A,B,C,D,D1,D2,D3,D4,D5,DRK1,F,RK1,RK2,RL,X,TEST            46 00980
        LOGICAL RENORM(10)                                              46 00990
C                                                                       46 01000
        DO 100 I=1,10                                                   46 01010
           RENORM(I)=.FALSE.                                            46 01020
100     CONTINUE                                                        46 01030
C  Check to see if renormalization to absolute of the various           46 01040
C    spectra is necessary                                               46 01050
C                                                                       46 01060
        ISPEC=4                                                         46 01070
C         Reset ISPEC as other spectral types are implemented           46 01080
        IF(NDK .GT. 1)THEN                                              46 01090
           DO 150 I=1,NDK-1                                             46 01100
              DO 140 K=I+1,NDK                                          46 01110
                 DO 130 L=1,ISPEC                                       46 01120
                    IF(ENDN(I,L) .NE. ENDN(K,L)) RENORM(L)=.TRUE.       46 01130
130              CONTINUE                                               46 01140
140           CONTINUE                                                  46 01150
150        CONTINUE                                                     46 01160
C  Renormalize STYP=0 if necessary                                      46 01170
           IF(RENORM(1))THEN                                            46 01180
              DO 200 J=1,NDK                                            46 01190
                 DO 190 I=1,NG                                          46 01200
                    IF(RTYPE(J) .EQ. RTYP0(I))THEN                      46 01210
                       DRS0(I)=SQRT((ENDN(J,1)*DRS0(I))**2+             46 01220
     2                   (RS0(I)*ENDDN(J,1))**2)                        46 01230
                       RS0(I)=ENDN(J,1)*RS0(I)                          46 01240
                       IF(DRS0(I) .GT. RS0(I))DRS0(I)=RS0(I)            46 01250
                    ENDIF                                               46 01260
190              CONTINUE                                               46 01270
                 ENDN(J,1)=1.                                           46 01280
                 ENDDN(J,1)=0.                                          46 01290
200           CONTINUE                                                  46 01300
           ENDIF                                                        46 01310
C  Renormalize STYP=1 if necessary                                      46 01320
           IF(RENORM(2))THEN                                            46 01330
              DO 250 J=1,NDK                                            46 01340
                 DO 240 I=1,NB-1                                        46 01350
                    IF(RTYPE(J) .EQ. RTYP1(I))THEN                      46 01360
                       DRS1(I)=SQRT((ENDN(J,2)*DRS1(I))**2+             46 01370
     2                   (RS1(I)*ENDDN(J,2))**2)                        46 01380
                       RS1(I)=ENDN(J,2)*RS1(I)                          46 01390
                       IF(DRS1(I) .GT. RS1(I))DRS1(I)=RS1(I)            46 01400
                    ENDIF                                               46 01410
240              CONTINUE                                               46 01420
                 ENDN(J,2)=1.                                           46 01430
                 ENDDN(J,2)=0.                                          46 01440
250           CONTINUE                                                  46 01450
           ENDIF                                                        46 01460
C  Renormalize STYP=2 if necessary                                      46 01470
           IF(RENORM(3))THEN                                            46 01480
              DO 300 J=1,NDK                                            46 01490
                 DO 290 I=1,NE-1                                        46 01500
                    IF(RTYPE(J) .EQ. RTYP2(I))THEN                      46 01510
                       DRS2(I)=SQRT((ENDN(J,3)*DRS2(I))**2+             46 01520
     2                   (RS2(I)*ENDDN(J,3))**2)                        46 01530
                       RS2(I)=ENDN(J,3)*RS2(I)                          46 01540
                       IF(DRS2(I) .GT. RS2(I))DRS2(I)=RS2(I)            46 01550
                       DRIS2(I)=SQRT((ENDN(J,3)*DRIS2(I))**2+           46 01560
     2                   (RIS2(I)*ENDDN(J,3))**2)                       46 01570
                       RIS2(I)=ENDN(J,3)*RIS2(I)                        46 01580
                       IF(DRIS2(I) .GT. RIS2(I))DRIS2(I)=RIS2(I)        46 01590
                    ENDIF                                               46 01600
290              CONTINUE                                               46 01610
                 ENDN(J,3)=1.                                           46 01620
                 ENDDN(J,3)=0.                                          46 01630
300           CONTINUE                                                  46 01640
           ENDIF                                                        46 01650
C                                                                       46 01660
C  STYPE=4 always has normalization 1                                   46 01670
C                                                                       46 01680
C  Add similar logic as STYP=5-7 are implemented                        46 01690
C                                                                       46 01700
        ENDIF                                                           46 01710
C                                                                       46 01720
C  For ease in bookkeeping discrete electrons and X rays will be        46 01730
C    normalized to one                                                  46 01740
C                                                                       46 01750
        DO 350 I=1,NDK                                                  46 01760
           DO 340 J=9,10                                                46 01770
              ENDN(I,J)=1.                                              46 01780
              ENDDN(I,J)=0.                                             46 01790
340        CONTINUE                                                     46 01800
350     CONTINUE                                                        46 01810
C                                                                       46 01820
C  Sort Beta- by energy                                                 46 01830
C                                                                       46 01840
        IF(NB .GT. 0)THEN                                               46 01850
           IF(NB .GT. 1)THEN                                            46 01860
              NSTYP1=NB-1                                               46 01870
           ELSE                                                         46 01880
              NSTYP1=NB                                                 46 01890
           ENDIF                                                        46 01900
        ENDIF                                                           46 01910
        IF(NSTYP1 .GT. 1)THEN                                           46 01920
           DO 400 II=1,NSTYP1-1                                         46 01930
              I=II                                                      46 01940
              DO 390 JJ=I+1,NSTYP1                                      46 01950
                 J=JJ                                                   46 01960
                 IF(ES1(I) .GT. ES1(J))THEN                             46 01970
                    CALL TRADE8(ES1,I,J)                                46 01980
                    CALL TRADE8(DES1,I,J)                               46 01990
                    CALL TRADE8(RS1,I,J)                                46 02000
                    CALL TRADE8(DRS1,I,J)                               46 02010
                    CALL TRADE8(RTYP1,I,J)                              46 02020
                    CALL TRADE8(TYP1,I,J)                               46 02030
                 ENDIF                                                  46 02040
390           CONTINUE                                                  46 02050
400        CONTINUE                                                     46 02060
        ENDIF                                                           46 02070
C                                                                       46 02080
C  Sort Alpha by energy                                                 46 02090
C                                                                       46 02100
        NSTYP4=NA                                                       46 02110
        IF(NA .GT. 1)THEN                                               46 02120
           DO 450 II=1,NA-1                                             46 02130
              I=II                                                      46 02140
              DO 440 JJ=II+1,NA                                         46 02150
                 J=JJ                                                   46 02160
                 IF(ES4(I) .GT. ES4(J))THEN                             46 02170
                    CALL TRADE8(ES4,I,J)                                46 02180
                    CALL TRADE8(DES4,I,J)                               46 02190
                    CALL TRADE8(RS4,I,J)                                46 02200
                    CALL TRADE8(DRS4,I,J)                               46 02210
                    CALL TRADE8(RTYP4,I,J)                              46 02220
                 ENDIF                                                  46 02230
440           CONTINUE                                                  46 02240
450        CONTINUE                                                     46 02250
        ENDIF                                                           46 02260
C                                                                       46 02270
C  Calculate and store Auger data in STYPE=8                            46 02280
C    Based on logic in subroutine STORE                                 46 02290
C                                                                       46 02300
        NSTYP8=0                                                        46 02310
        IF(NG+NE .GT. 0)THEN                                            46 02320
           DO 500 I=1,NDK                                               46 02330
              IF(TERMK(I) .NE. 0. .OR. TERMK1(I) .NE. 0.)THEN           46 02340
                 NSTYP8=NSTYP8+1                                        46 02350
                 RTYP8(NSTYP8)=RTYPE(I)                                 46 02360
                 ES8(NSTYP8)=ET(I,1)                                    46 02370
                 DES8(NSTYP8)= DET(I,1)                                 46 02380
                 IF(ES8(NSTYP8) .GT. 0.)THEN                            46 02390
                    RS8(NSTYP8)=(TERMK(I)+TERMK1(I))*(1.-WK(I))         46 02400
                    A=DTERMK(I)**2+DTRMK1(I)**2                         46 02410
                    B=(TERMK(I)+TERMK1(I))**2                           46 02420
                    C=DWK(I)**2/((1.-WK(I))**2)                         46 02430
                    IF (B.NE.0.) B=A/B                                  46 02440
                    DRS8(NSTYP8)=RS8(NSTYP8)*SQRT(B+C)                  46 02450
                    IF(DRS8(NSTYP8) .GT. RS8(NSTYP8))                   46 02460
     2                DRS8(NSTYP8)=RS8(NSTYP8)                          46 02470
                 ELSE                                                   46 02480
                    NSTYP8=NSTYP8-1                                     46 02490
                 ENDIF                                                  46 02500
              ENDIF                                                     46 02510
              IF(((TERMK(I) .NE. 0. .OR. TERMK1(I) .NE. 0.)             46 02520
     2          .AND. ENKL(I) .NE. 0.) .OR.                             46 02530
     3          (TERML(I) .NE. 0. .OR. TERML1(I) .NE. 0.))THEN          46 02540
                 NSTYP8=NSTYP8+1                                        46 02550
                 ES8(NSTYP8)=ET(I,2)                                    46 02560
                 DES8(NSTYP8)=DET(I,2)                                  46 02570
                 IF(ES8(NSTYP8) .GT. 0)THEN                             46 02580
                    RTYP8(NSTYP8)=RTYPE(I)                              46 02590
                    A=DTERML(I)**2+DTRML1(I)**2                         46 02600
                    C=DWL(I)**2/((1.-WL(I))**2)                         46 02610
                    B=(ENKL(I)**2)*(DTERMK(I)**2+DTRMK1(I)**2)          46 02620
                    D=((TERMK(I)+TERMK1(I))**2)*DENKL(I)**2             46 02630
                    F=(TERML1(I)+TERML(I)+                              46 02640
     2                (TERMK(I)+TERMK1(I))*ENKL(I))**2                  46 02650
                    RS8(NSTYP8)=(TERML1(I)+TERML(I)+                    46 02660
     2                (TERMK(I)+TERMK1(I))*ENKL(I))*(1.-WL(I))          46 02670
                    IF (F.NE.0.)  F=(A+B+D)/F                           46 02680
                    DRS8(NSTYP8)=RS8(NSTYP8)*SQRT(F+C)                  46 02690
                    IF(DRS8(NSTYP8) .GT. RS8(NSTYP8))                   46 02700
     2                 DRS8(NSTYP8)=RS8(NSTYP8)                         46 02710
                 ELSE                                                   46 02720
                    NSTYP8=NSTYP8-1                                     46 02730
                 ENDIF                                                  46 02740
              ENDIF                                                     46 02750
500        CONTINUE                                                     46 02760
        ENDIF                                                           46 02770
C                                                                       46 02780
C  Calculate and store conversion electron data in STYPE=8              46 02790
C    Based on logic in subroutine STORE                                 46 02800
C                                                                       46 02810
        IF(NG .GT. 0)THEN                                               46 02820
           DO 550 I=1,NG                                                46 02830
              DO 540 J=1,NDK                                            46 02840
                 IF(RTYPE(J) .EQ. RTYP0(I))THEN                         46 02850
                    DO 530 K=1,5                                        46 02860
                       IF(ICE(I,K) .GT. 0.)THEN                         46 02870
                          NSTYP8=NSTYP8+1                               46 02880
                          RTYP8(NSTYP8)=RTYPE(J)                        46 02890
                          ES8(NSTYP8)=EG(I)-BE(J,K)                     46 02900
                          DES8(NSTYP8)=SQRT(DEG(I)**2+DBE(J,K)**2)      46 02910
                          IF(DEG(I) .EQ. 0.)DES8(NSTYP8)=0.             46 02920
                          RS8(NSTYP8)=ICE(I,K)                          46 02930
                          DRS8(NSTYP8)=DICE(I,K)                        46 02940
                          IF(DRS8(NSTYP8) .GT. RS8(NSTYP8))             46 02950
     2                      DRS8(NSTYP8)=RS8(NSTYP8)                    46 02960
                       ENDIF                                            46 02970
530                 CONTINUE                                            46 02980
                 ENDIF                                                  46 02990
540           CONTINUE                                                  46 03000
550        CONTINUE                                                     46 03010
        ENDIF                                                           46 03020
C                                                                       46 03030
C  Calculate and store X ray data in STYPE=9                            46 03040
C    Based on logic in subroutine STORE                                 46 03050
C                                                                       46 03060
        NSTYP9=0                                                        46 03070
        IF(NG+NE .GT. 0)THEN                                            46 03080
           DO 600 I=1,NDK                                               46 03090
              RK1=WK(I)*(TERMK(I)+TERMK1(I))                            46 03100
              IF(RK1 .GT. 0.)THEN                                       46 03110
                 D1=(DTERMK(I)**2+DTRMK1(I)**2)/                        46 03120
     2             (TERMK(I)+TERMK1(I))**2                              46 03130
                 D2=(DWK(I)/WK(I))**2                                   46 03140
                 DRK1=RK1*SQRT(D1+D2)                                   46 03150
                 RK2=RK1/(1.+BTOA(I))                                   46 03160
                 D1=(DRK1/RK1)**2                                       46 03170
                 D2=(DBTOA(I)/(1.+BTOA(I)))**2                          46 03180
                 D4=(DEA2A1(I)/(1.+A2TOA1(I)))**2                       46 03190
                 IF(A2TOA1(I) .NE. 0.)THEN                              46 03200
                    D3=D4/A2TOA1(I)**2                                  46 03210
                 ELSE                                                   46 03220
                    D3=0.                                               46 03230
                 ENDIF                                                  46 03240
                 IF(BTOA(I) .NE. 0.)THEN                                46 03250
                    D5=D2/BTOA(I)**2                                    46 03260
                 ELSE                                                   46 03270
                    D5=0.                                               46 03280
                 ENDIF                                                  46 03290
                 NSTYP9=NSTYP9+1                                        46 03300
                 RS9(NSTYP9)=RK1*BTOA(I)/(1.+BTOA(I))                   46 03310
                 ES9(NSTYP9)=ET(I,5)                                    46 03320
                 IF(ES9(NSTYP9) .EQ. 0. .OR. RS9(NSTYP9) .LT. RIMIN)THEN46 03330
                    NSTYP9=NSTYP9-1                                     46 03340
                 ELSE                                                   46 03350
                    RTYP9(NSTYP9)=RTYPE(I)                              46 03360
                    DRS9(NSTYP9)=RS9(NSTYP9)*SQRT(D1+D5)                46 03370
                    DES9(NSTYP9)=DET(I,5)                               46 03380
                    IF(DRS9(NSTYP9) .GT. RS9(NSTYP9))                   46 03390
     2                DRS9(NSTYP9)=RS9(NSTYP9)                          46 03400
                 ENDIF                                                  46 03410
                 IF(RK2 .GT. 0.)THEN                                    46 03420
                    NSTYP9=NSTYP9+1                                     46 03430
                    RS9(NSTYP9)=RK2/(1.+A2TOA1(I))                      46 03440
                    ES9(NSTYP9)=ET(I,3)                                 46 03450
                    IF(ES9(NSTYP9) .EQ. 0. .OR. RS9(NSTYP9) .LT. RIMIN) 46 03460
     2                THEN                                              46 03470
                       NSTYP9=NSTYP9-1                                  46 03480
                    ELSE                                                46 03490
                       RTYP9(NSTYP9)=RTYPE(I)                           46 03500
                       DRS9(NSTYP9)=RS9(NSTYP9)*SQRT(D1+D2+D4)          46 03510
                       IF(DRS9(NSTYP9) .GT. RS9(NSTYP9))                46 03520
     2                   DRS9(NSTYP9)=RS9(NSTYP9)                       46 03530
                       DES9(NSTYP9)=DET(I,3)                            46 03540
                    ENDIF                                               46 03550
                    IF(NSTYP9 .GT. 0)THEN                               46 03560
                       TEST=RS9(NSTYP9)                                 46 03570
                    ELSE                                                46 03580
                       TEST=0.                                          46 03590
                    ENDIF                                               46 03600
                    IF(RK2 .GT. TEST)THEN                               46 03610
                       NSTYP9=NSTYP9+1                                  46 03620
                       IF(NSTYP9 .GT. 1)THEN                            46 03630
                          RS9(NSTYP9)=RK2-RS9(NSTYP9-1)                 46 03640
                       ELSE                                             46 03650
                          RS9(NSTYP9)=RK2                               46 03660
                       ENDIF                                            46 03670
                       ES9(NSTYP9)=ET(I,4)                              46 03680
                       IF(ES9(NSTYP9) .EQ. 0. .OR.                      46 03690
     2                   RS9(NSTYP9) .LT. RIMIN)THEN                    46 03700
                          NSTYP9=NSTYP9-1                               46 03710
                       ELSE                                             46 03720
                          RTYP9(NSTYP9)=RTYPE(I)                        46 03730
                          DRS9(NSTYP9)=RS9(NSTYP9)*SQRT(D1+D2+D3)       46 03740
                          IF(DRS9(NSTYP9) .GT. RS9(NSTYP9))             46 03750
     2                      DRS9(NSTYP9)=RS9(NSTYP9)                    46 03760
                          DES9(NSTYP9)=DET(I,4)                         46 03770
                       ENDIF                                            46 03780
                    ENDIF                                               46 03790
                 ENDIF                                                  46 03800
              ENDIF                                                     46 03810
              RL=WL(I)*(TERML(I)+TERML1(I)+                             46 03820
     2          (TERMK(I)+TERMK1(I))*ENKL(I))                           46 03830
              IF(RL .GT. 0.)THEN                                        46 03840
                 NSTYP9=NSTYP9+1                                        46 03850
                 ES9(NSTYP9)=ET(I,6)                                    46 03860
                 RS9(NSTYP9)=RL                                         46 03870
                 IF(ES9(NSTYP9) .EQ. 0. .OR. RS9(NSTYP9) .LT. RIMIN)THEN46 03880
                    NSTYP9=NSTYP9-1                                     46 03890
                 ELSE                                                   46 03900
                    RTYP9(NSTYP9)=RTYPE(I)                              46 03910
                    DES9(NSTYP9)=DET(I,6)                               46 03920
                    D1=DTERML(I)**2+DTRML1(I)**2                        46 03930
                    D2=ENKL(I)*(TERMK1(I)+TERMK(I))                     46 03940
                    IF(ENKL(I) .NE. 0.)THEN                             46 03950
                       D3=(DENKL(I)/ENKL(I))**2                         46 03960
                    ELSE                                                46 03970
                       D3=0.                                            46 03980
                    ENDIF                                               46 03990
                    IF(RK1 .NE. 0.)THEN                                 46 04000
                       D4=(DTERMK(I)**2+DTRMK1(I)**2)/                  46 04010
     2                   ((TERMK(I)+TERMK1(I))**2)                      46 04020
                    ELSE                                                46 04030
                       D4=0.                                            46 04040
                    ENDIF                                               46 04050
                    D5=D1+D2*D2*(D3+D4)                                 46 04060
                    D3=TERML(I)+TERML1(I)+ENKL(I)*(TERMK(I)+TERMK1(I))  46 04070
                    D1=(DWL(I)/WL(I))**2                                46 04080
                    D2=D5/(D3**2)                                       46 04090
                    DRS9(NSTYP9)=RS9(NSTYP9)*SQRT(D1+D2)                46 04100
                    IF(DRS9(NSTYP9) .GT. RS9(NSTYP9))                   46 04110
     2                DRS9(NSTYP9)=RS9(NSTYP9)                          46 04120
                 ENDIF                                                  46 04130
              ENDIF                                                     46 04140
600        CONTINUE                                                     46 04150
        ENDIF                                                           46 04160
C                                                                       46 04170
C  Add annihilation radition to STYPE=9                                 46 04180
C                                                                       46 04190
        IF(NK1 .GT. 0)THEN                                              46 04200
           NSTYP9=NSTYP9+1                                              46 04210
           RTYP9(NSTYP9)=RTYP2(1)                                       46 04220
           DO 650 I=1,NDK                                               46 04230
              IF(RTYPE(I) .EQ. RTYP9(NSTYP9))THEN                       46 04240
                 RS9(NSTYP9)=RIS2(1)*ENDN(I,2)                          46 04250
                 DRS9(NSTYP9)=(DRIS2(1)*ENDN(I,2))**2+                  46 04260
     2             (RIS2(1)*ENDDN(I,2))**2                              46 04270
              ENDIF                                                     46 04280
650        CONTINUE                                                     46 04290
           IF(NE .GE. 2)THEN                                            46 04300
              DO 700 I=2,NE                                             46 04310
                 IF(RTYP2(I) .EQ. RTYP9(NSTYP9))THEN                    46 04320
                    DO 660 J=1,NDK                                      46 04330
                       IF(RTYPE(J) .EQ. RTYP9(NSTYP9))THEN              46 04340
                          RS9(NSTYP9)=RS9(NSTYP9)+RIS2(I)*ENDN(J,2)     46 04350
                          DRS9(NSTYP9)=DRS9(NSTYP9)+                    46 04360
     2                      (DRIS2(1)*ENDN(J,2))**2+                    46 04370
     3                      (RIS2(1)*ENDDN(J,2))**2                     46 04380
                       ENDIF                                            46 04390
660                 CONTINUE                                            46 04400
                 ENDIF                                                  46 04410
700           CONTINUE                                                  46 04420
           ENDIF                                                        46 04430
           IF(RS9(NSTYP9) .LE. 0.)THEN                                  46 04440
              NSTYP9=NSTYP9-1                                           46 04450
           ELSE                                                         46 04460
              ES9(NSTYP9)=510.99906                                     46 04470
              DES9(NSTYP9)=0.00015                                      46 04480
              RS9(NSTYP9)=2.*RS9(NSTYP9)                                46 04490
              DRS9(NSTYP9)=2.*SQRT(DRS9(NSTYP9))                        46 04500
              IF(DRS9(NSTYP9) .GT. RS9(NSTYP9))                         46 04510
     2          DRS9(NSTYP9)=RS9(NSTYP9)                                46 04520
           ENDIF                                                        46 04530
        ENDIF                                                           46 04540
C                                                                       46 04550
C  Gamma and electron capture data must be sorted after obtaining       46 04560
C    discrete electron and X ray data                                   46 04570
C                                                                       46 04580
C    STYP=0 array still contains gammas with RI<RIMIN                   46 04590
C                                                                       46 04600
        NSTYP0=NG                                                       46 04610
        DO 750 I=1,NG                                                   46 04620
           DO 710 J=1,NDK                                               46 04630
              IF(RTYP0(I) .EQ. RTYPE(J))THEN                            46 04640
                 X=ENDN(J,1)*ENDBR(J)                                   46 04650
              ENDIF                                                     46 04660
710        CONTINUE                                                     46 04670
           IF(X*RS0(I) .LT. RIMIN .AND. IALLG .NE. 1                    46 04680
     2        .AND. X*RIS(I) .LT. RIMIN)THEN                            46 04690
              IF(I .NE. NG)THEN                                         46 04700
                 DO 740 J=I+1,NSTYP0                                    46 04710
                    ES0(I)=ES0(J)                                       46 04720
                    DES0(I)=DES0(J)                                     46 04730
                    RS0(I)=RS0(J)                                       46 04740
                    DRS0(I)=DRS0(J)                                     46 04750
                    RTYP0(I)=RTYP0(J)                                   46 04760
                    RICC(I)=RICC(J)                                     46 04770
                    DRICC(I)=DRICC(J)                                   46 04780
                    RICK(I)=RICK(J)                                     46 04790
                    DRICK(I)=DRICK(J)                                   46 04800
                    RICL(I)=DRICL(J)                                    46 04810
                    DRICL(I)=DRICL(J)                                   46 04820
                    RIS(I)=RIS(J)                                       46 04830
                    DRIS(I)=DRIS(J)                                     46 04840
740              CONTINUE                                               46 04850
              ENDIF                                                     46 04860
              NSTYP0=NSTYP0-1                                           46 04870
           ENDIF                                                        46 04880
750     CONTINUE                                                        46 04890
C                                                                       46 04900
C  Sort Gammas by energy                                                46 04910
C                                                                       46 04920
        IF(NSTYP0 .GT. 1)THEN                                           46 04930
           DO 800 II=1,NSTYP0-1                                         46 04940
              I=II                                                      46 04950
              DO 790 JJ=II+1,NSTYP0                                     46 04960
                 J=JJ                                                   46 04970
                 IF(ES0(I) .GT. ES0(J))THEN                             46 04980
                    CALL TRADE8(ES0,I,J)                                46 04990
                    CALL TRADE8(DES0,I,J)                               46 05000
                    CALL TRADE8(RS0,I,J)                                46 05010
                    CALL TRADE8(DRS0,I,J)                               46 05020
                    CALL TRADE8(RICC,I,J)                               46 05030
                    CALL TRADE8(DRICC,I,J)                              46 05040
                    CALL TRADE8(RICK,I,J)                               46 05050
                    CALL TRADE8(DRICK,I,J)                              46 05060
                    CALL TRADE8(RICL,I,J)                               46 05070
                    CALL TRADE8(DRICL,I,J)                              46 05080
                    CALL TRADE8(RIS,I,J)                                46 05090
                    CALL TRADE8(DRIS,I,J)                               46 05100
                    CALL TRADE8(RTYP0,I,J)                              46 05110
                 ENDIF                                                  46 05120
790           CONTINUE                                                  46 05130
800        CONTINUE                                                     46 05140
        ENDIF                                                           46 05150
C                                                                       46 05160
C  STYP=2 array still contains elements with IB<RIMIN                   46 05170
C                                                                       46 05180
        NSTYP2=NE                                                       46 05190
        DO 850 I=1,NSTYP2-1                                             46 05200
           DO 810 J=1,NDK                                               46 05210
              IF(RTYP2(I) .EQ. RTYPE(J))THEN                            46 05220
                 X=ENDN(J,1)*ENDBR(J)                                   46 05230
              ENDIF                                                     46 05240
810        CONTINUE                                                     46 05250
           IF(X*RS2(I) .LT. RIMIN .AND. X*RIS2(I) .LT. RIMIN)THEN       46 05260
              IF(I .NE. NSTYP2-1)THEN                                   46 05270
                 DO 840 J=I+1,NSTYP2                                    46 05280
                    ES2(I)=ES2(J)                                       46 05290
                    DES2(I)=DES2(J)                                     46 05300
                    RS2(I)=RS2(J)                                       46 05310
                    DRS2(I)=DRS2(J)                                     46 05320
                    RIS2(I)=RIS2(J)                                     46 05330
                    DRIS2(I)=DRIS2(J)                                   46 05340
                    RTYP2(I)=RTYP2(J)                                   46 05350
                    TYP2(I)=TYP2(J)                                     46 05360
840              CONTINUE                                               46 05370
              ENDIF                                                     46 05380
              NSTYP2=NSTYP2-1                                           46 05390
           ENDIF                                                        46 05400
850     CONTINUE                                                        46 05410
C                                                                       46 05420
C  Sort EC(Beta+) by energy                                             46 05430
C                                                                       46 05440
        IF(NSTYP2 .GT. 1)THEN                                           46 05450
           DO 900 II=1,NSTYP2-1                                         46 05460
              I=II                                                      46 05470
              DO 890 JJ=II+1,NSTYP2                                     46 05480
                 J=JJ                                                   46 05490
                 IF(ES2(I) .GT. ES2(J))THEN                             46 05500
                    CALL TRADE8(ES2,I,J)                                46 05510
                    CALL TRADE8(DES2,I,J)                               46 05520
                    CALL TRADE8(RS2,I,J)                                46 05530
                    CALL TRADE8(DRS2,I,J)                               46 05540
                    CALL TRADE8(RIS2,I,J)                               46 05550
                    CALL TRADE8(DRIS2,I,J)                              46 05560
                    CALL TRADE8(RTYP2,I,J)                              46 05570
                    CALL TRADE8(TYP2,I,J)                               46 05580
                 ENDIF                                                  46 05590
890           CONTINUE                                                  46 05600
900        CONTINUE                                                     46 05610
        ENDIF                                                           46 05620
C                                                                       46 05630
C  Sort discrete electron data by energy                                46 05640
C                                                                       46 05650
        IF(NSTYP8 .GT. 1)THEN                                           46 05660
           DO 950 II=1,NSTYP8-1                                         46 05670
              I=II                                                      46 05680
              DO 940 JJ=I,NSTYP8                                        46 05690
                 J=JJ                                                   46 05700
                 IF(ES8(I) .GT. ES8(J))THEN                             46 05710
                    CALL TRADE8(ES8,I,J)                                46 05720
                    CALL TRADE8(DES8,I,J)                               46 05730
                    CALL TRADE8(RS8,I,J)                                46 05740
                    CALL TRADE8(DRS8,I,J)                               46 05750
                    CALL TRADE8(RTYP8,I,J)                              46 05760
                 ENDIF                                                  46 05770
940           CONTINUE                                                  46 05780
950        CONTINUE                                                     46 05790
        ENDIF                                                           46 05800
C                                                                       46 05810
C  Sort X ray data by energy                                            46 05820
C                                                                       46 05830
        IF(NSTYP9 .GT. 1)THEN                                           46 05840
           DO 1000 II=1,NSTYP9-1                                        46 05850
              I=II                                                      46 05860
              DO 990 JJ=I,NSTYP9                                        46 05870
                 J=JJ                                                   46 05880
                 IF(ES9(I) .GT. ES9(J))THEN                             46 05890
                    CALL TRADE8(ES9,I,J)                                46 05900
                    CALL TRADE8(DES9,I,J)                               46 05910
                    CALL TRADE8(RS9,I,J)                                46 05920
                    CALL TRADE8(DRS9,I,J)                               46 05930
                    CALL TRADE8(RTYP9,I,J)                              46 05940
                 ENDIF                                                  46 05950
990           CONTINUE                                                  46 05960
1000       CONTINUE                                                     46 05970
        ENDIF                                                           46 05980
C                                                                       46 05990
C  Convert energies from keV to eV                                      46 06000
C                                                                       46 06010
        DO 1050 I=1,NSTYP0                                              46 06020
           ES0(I)=1000.*ES0(I)                                          46 06030
           DES0(I)=1000.*DES0(I)                                        46 06040
1050    CONTINUE                                                        46 06050
        DO 1100 I=1,AM                                                  46 06060
           ES1(I)=1000.*ES1(I)                                          46 06070
           DES1(I)=1000.*DES1(I)                                        46 06080
           ES2(I)=1000.*ES2(I)                                          46 06090
           DES2(I)=1000.*DES2(I)                                        46 06100
           ES4(I)=1000.*ES4(I)                                          46 06110
           DES4(I)=1000.*DES4(I)                                        46 06120
1100    CONTINUE                                                        46 06130
        DO 1150 I=1,NSTYP8                                              46 06140
           ES8(I)=1000.*ES8(I)                                          46 06150
           DES8(I)=1000.*DES8(I)                                        46 06160
1150    CONTINUE                                                        46 06170
        DO 1200 I=1,NSTYP9                                              46 06180
           ES9(I)=1000.*ES9(I)                                          46 06190
           DES9(I)=1000.*DES9(I)                                        46 06200
1200    CONTINUE                                                        46 06210
C                                                                       46 06220
C  Convert normalizations from per 100 decays to per decay              46 06230
C                                                                       46 06240
        DO 1250 I=1,NDK                                                 46 06250
           DO 1240 J=1,10                                               46 06260
              ENDN(I,J)=ENDN(I,J)/100.                                  46 06270
              ENDDN(I,J)=ENDDN(I,J)/100.                                46 06280
1240       CONTINUE                                                     46 06290
1250    CONTINUE                                                        46 06300
        RETURN                                                          46 06310
        END                                                             46 06320
C                                                                       47 00010
      SUBROUTINE ENDOUT(XDATE,VERNO,WMASSB,SPECTR,BREMS,NMESS,QIS)      47 00020
C                                                                       47 00030
C  Outputs data in an ENDF/B-VI style format                            47 00040
C                                                                       47 00050
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************47 00060
C*                           Present Code                               47 00070
C*                           ------------                               47 00080
C*  AMASS   ENDCON  LIST    SFEND   SIGNIF  TAB1    WRITE2              47 00090
C*                                                                      47 00100
C*                           F77STR  4(2)                               47 00110
C*                           ------------                               47 00120
C*  ADDSTR  DELSTR  IVLSTR  LENSTR  SQZSTR                              47 00130
C*                                                                      47 00140
C*                        FORTRAN 77 Supplied                           47 00150
C*                        -------------------                           47 00160
C*  INDEX   SQRT                                                        47 00170
C*                                                                      47 00180
C***********************************************************************47 00190
      INTEGER NMESS                                                     47 00200
      REAL QIS                                                          47 00210
      CHARACTER XDATE*(*),VERNO*(*)                                     47 00220
      LOGICAL WMASSB,SPECTR,BREMS                                       47 00230
C                                                                       47 00240
      INTEGER GMA,AM,MAXDCY,NDE,MAXNXA,NGRMAX,NYMAX,NRMAX,NCVMAX,MXDCY6 47 00250
        INTEGER MAX0                                                    47 00260
        INTRINSIC MAX0                                                  47 00270
      PARAMETER (GMA=999,AM=99,MAXDCY=4,NDE=2*MAXDCY+5*GMA,             47 00280
     2  MAXNXA=4*MAXDCY+1,NGRMAX=30,NYMAX=2*NGRMAX+2,NRMAX=NYMAX/2,     47 00290
     3  NCVMAX=2*NYMAX,MXDCY6=MAX0(6*MAXDCY,12))                        47 00300
C                                                                       47 00310
      INTEGER NA,NB,NE,NK1,NG,NTOP                                      47 00320
      COMMON /COUNTS/NA,NB,NE,NK1,NG,NTOP                               47 00330
C                                                                       47 00340
      INTEGER NOMIT(5),IALLG                                            47 00350
      REAL EOMIT(5),OMIT(5),RIMIN                                       47 00360
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                       47 00370
C                                                                       47 00380
      REAL SUMIE(10),DSUMIE(10),SUMI(10),DSUMI(10)                      47 00390
      COMMON /AVGS/SUMIE,DSUMIE,SUMI,DSUMI                              47 00400
C                                                                       47 00410
      INTEGER MATT,MF,MT                                                47 00420
      COMMON /MATMFT/MATT,MF,MT                                         47 00430
C                                                                       47 00440
      INTEGER LIS,LISO,MAT                                              47 00450
      REAL ZA,TSEC,DTSEC,SPIN,PARITY                                    47 00460
      COMMON /ENDGEN/ZA,TSEC,DTSEC,SPIN,PARITY,LIS,LISO,MAT             47 00470
C                                                                       47 00480
      INTEGER PCOMNT,KCOMNT,NDK                                         47 00490
      PARAMETER (PCOMNT=294)                                            47 00500
      CHARACTER KOMENT(PCOMNT)*66,PAR*2                                 47 00510
      COMMON /ENDCNT/KCOMNT,NDK                                         47 00520
      COMMON /ENDCOM/ PAR,KOMENT                                        47 00530
C                                                                       47 00540
C  Use of ELIS,ELISO,RFS not implemented due to vagueness in ENDF format47 00550
C    manual and problems associated with conversion of ENSDF to ENDF    47 00560
C                                                                       47 00570
      REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),      47 00580
     2  ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10),ELIS(MAXDCY),   47 00590
     3  ELISO(MAXDCY),RFS(MAXDCY)                                       47 00600
      COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN,ELIS,    47 00610
     2  ELISO,RFS                                                       47 00620
C                                                                       47 00630
      INTEGER NSTYP0                                                    47 00640
      REAL ES0(GMA),DES0(GMA),RS0(GMA),DRS0(GMA),RICC(GMA),DRICC(GMA),  47 00650
     2  RICK(GMA),DRICK(GMA),RICL(GMA),DRICL(GMA),RIS(GMA),DRIS(GMA),   47 00660
     3  RTYP0(GMA),AVE0,DAVE0                                           47 00670
      COMMON /STYP0/ES0,DES0,RS0,DRS0,RICC,DRICC,RICK,DRICK,RICL,DRICL, 47 00680
     2  RIS,DRIS,RTYP0,AVE0,DAVE0,NSTYP0                                47 00690
C                                                                       47 00700
      INTEGER NSTYP1                                                    47 00710
      REAL ES1(AM),DES1(AM),RS1(AM),DRS1(AM),RTYP1(AM),TYP1(AM),AVE1,   47 00720
     2  DAVE1                                                           47 00730
      COMMON /STYP1/ES1,DES1,RS1,DRS1,RTYP1,TYP1,AVE1,DAVE1,NSTYP1      47 00740
C                                                                       47 00750
      INTEGER NSTYP2                                                    47 00760
      REAL ES2(AM),DES2(AM),RS2(AM),DRS2(AM),RIS2(AM),DRIS2(AM),        47 00770
     2  RTYP2(AM),TYP2(AM),AVE2,DAVE2                                   47 00780
      COMMON /STYP2/ES2,DES2,RS2,DRS2,RIS2,DRIS2,RTYP2,TYP2,AVE2,DAVE2, 47 00790
     2  NSTYP2                                                          47 00800
C                                                                       47 00810
      INTEGER NSTYP4                                                    47 00820
      REAL ES4(AM),DES4(AM),RS4(AM),DRS4(AM),RTYP4(AM)                  47 00830
        COMMON /STYP4/ES4,DES4,RS4,DRS4,RTYP4,NSTYP4                    47 00840
C                                                                       47 00850
C     COMMON /STYP5/                                                    47 00860
C                                                                       47 00870
C     COMMON /STYP6/                                                    47 00880
C                                                                       47 00890
C     COMMON /STYP7/                                                    47 00900
C                                                                       47 00910
      INTEGER NSTYP8                                                    47 00920
      REAL ES8(NDE),DES8(NDE),RS8(NDE),DRS8(NDE),RTYP8(NDE)             47 00930
      COMMON /STYP8/ES8,DES8,RS8,DRS8,RTYP8,NSTYP8                      47 00940
C                                                                       47 00950
      INTEGER NSTYP9                                                    47 00960
      REAL ES9(MAXNXA),DES9(MAXNXA),RS9(MAXNXA),DRS9(MAXNXA),           47 00970
     2  RTYP9(MAXNXA)                                                   47 00980
      COMMON /STYP9/ES9,DES9,RS9,DRS9,RTYP9,NSTYP9                      47 00990
C                                                                       47 01000
      INTEGER ICOMNT                                                    47 01010
      CHARACTER*80 HEAD,LABEL,COMENT(10)                                47 01020
      COMMON /HEADS1/  HEAD,LABEL,COMENT                                47 01030
      COMMON /HEADS2/  ICOMNT                                           47 01040
C                                                                       47 01050
      INTEGER INUDAT,IENDF,IATOMB,IMASSB                                47 01060
      COMMON /OUTUNT/INUDAT,IENDF                                       47 01070
      COMMON /BINDAT/IATOMB,IMASSB                                      47 01080
C%%%%%SPECTR                                                            47 01090
      INTEGER NGRIDM                                                    47 01100
      REAL EBMS(NGRMAX),RIBMS(NGRMAX),DRIBMS(NGRMAX),EBARMS(NGRMAX),    47 01110
     2  DEBRMS(NGRMAX)                                                  47 01120
        COMMON /BMSPCT/NGRIDM,EBMS,RIBMS,DRIBMS,EBARMS,DEBRMS           47 01130
      INTEGER NGRIDP                                                    47 01140
      REAL EBPS(NGRMAX),RIBPS(NGRMAX),DRIBPS(NGRMAX),EBARPS(NGRMAX),    47 01150
     2  DEBRPS(NGRMAX)                                                  47 01160
      COMMON /BPSPCT/NGRIDP,EBPS,RIBPS,DRIBPS,EBARPS,DEBRPS             47 01170
C%%%%%BREMST                                                            47 01180
      INTEGER NGRIDI                                                    47 01190
      REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),    47 01200
     2  DEBRIS(NGRMAX),SUMEB,DSUMEB                                     47 01210
      COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS,SUMEB,DSUMEB47 01220
C^^^^^BREMST                                                            47 01230
C^^^^^SPECTR                                                            47 01240
      INTEGER IVLSTR,LENSTR                                             47 01250
      REAL AMASS                                                        47 01260
      EXTERNAL IVLSTR,LENSTR,AMASS                                      47 01270
C                                                                       47 01280
C  Arrays for continua data                                             47 01290
C%%%%%SPECTR                                                            47 01300
      INTEGER NIN(NRMAX),INTT(NRMAX)                                    47 01310
      REAL CX(NYMAX),CY(NYMAX),COVAR(NCVMAX)                            47 01320
      COMMON/ENDTAB/NIN,INTT,CX,CY,COVAR                                47 01330
C^^^^^SPECTR                                                            47 01340
      INTEGER NDK6,LFI,IE,NWD,NMOD,I,NSP,NT,K,LRP,NC1,IZA,NXC,IMNTH,IP, 47 01350
     2  J,NLIB,LCON,NFOR,NSUB,NVER,NSPCT,LCOV,NY,NR,NSPECT,NY2,ISTART   47 01360
      REAL DERBX,ERBX,AWR,AWI,TEMP                                      47 01370
      REAL X(MXDCY6)                                                    47 01380
      CHARACTER*80 XSTR,LINE,MATFT                                      47 01390
      CHARACTER*11 ZSYMA,EDATE                                          47 01400
C                                                                       47 01410
      CHARACTER MNTHS(12)*3                                             47 01420
      DATA MNTHS/'JAN','FEB','MAR','APR','MAY','JUN',                   47 01430
     2           'JUL','AUG','SEP','OCT','NOV','DEC'/                   47 01440
      CHARACTER*2 RADTYP(5)                                             47 01450
      DATA RADTYP/'A','B','CE','G','EC'/                                47 01460
C                                                                       47 01470
C  File 1 data,MT=451.                                                  47 01480
C                                                                       47 01490
      IZA=INT(ZA)                                                       47 01500
      AWR=AMASS(IZA,WMASSB,IMASSB,NMESS)/1.008664967                    47 01510
        IF(MAT .EQ. 0)THEN                                              47 01520
           MATT=(IZA/1000)*100+MOD(IZA,100)                             47 01530
           IF(MATT .GE. 10000)MATT=MOD(IZA,10000)                       47 01540
        ELSE                                                            47 01550
           MATT=MAT                                                     47 01560
        ENDIF                                                           47 01570
      MF=1                                                              47 01580
      MT=451                                                            47 01590
      WRITE(MATFT,FMT='(I4,I2,I3,5H     )')MATT,MF,MT                   47 01600
C                                                                       47 01610
      LRP=-1                                                            47 01620
      LFI=0                                                             47 01630
      NLIB=1                                                            47 01640
      NMOD=1                                                            47 01650
      CALL WRITE2(ZA,AWR,LRP,LFI,NLIB,NMOD)                             47 01660
C                                                                       47 01670
      NFOR=6                                                            47 01680
      CALL WRITE2(QIS,1.0,LIS,LISO,0,NFOR)                              47 01690
C                                                                       47 01700
      AWI=0.0                                                           47 01710
      NSUB=4                                                            47 01720
      NVER=6                                                            47 01730
      CALL WRITE2(AWI,0.0,0,0,NSUB,NVER)                                47 01740
C                                                                       47 01750
      WRITE(ZSYMA,FMT='(I3)') IZA/1000                                  47 01760
      ZSYMA(4:4)='-'                                                    47 01770
      XSTR=PAR                                                          47 01780
      ZSYMA(5:6)=XSTR                                                   47 01790
      WRITE(XSTR,FMT='(I3)') MOD(IZA,1000)                              47 01800
      ZSYMA(7:)='-'//XSTR                                               47 01810
      IF(QIS .GT. 0.5)THEN                                              47 01820
         ZSYMA(11:11)='M'                                               47 01830
      ELSE                                                              47 01840
         DO 100 I=1,NDK                                                 47 01850
            IF(RTYPE(NDK) .EQ. 3.) ZSYMA(11:11)='M'                     47 01860
100      CONTINUE                                                       47 01870
      ENDIF                                                             47 01880
      EDATE=XDATE(1:9)                                                  47 01890
      CALL DELSTR(EDATE,1,3)                                            47 01900
      CALL DELSTR(EDATE,4,1)                                            47 01910
      CALL ADDSTR(EDATE,1,'EVAL-')                                      47 01920
      NWD=KCOMNT+7                                                      47 01930
      DO 120 I=1,4                                                      47 01940
         IF(NOMIT(I) .NE. 0 .AND. OMIT(I) .GE. RIMIN)NWD=NWD+1          47 01950
120   CONTINUE                                                          47 01960
      TEMP=0.0                                                          47 01970
      NXC=2                                                             47 01980
      CALL WRITE2(TEMP,0.0,0,0,NWD,NXC)                                 47 01990
C                                                                       47 02000
      LINE=' '                                                          47 02010
      LINE=ZSYMA                                                        47 02020
      LINE(12:)='BNL'                                                   47 02030
      LINE(23:)=EDATE                                                   47 02040
      LINE(34:)='CONVERSION OF ENSDF'                                   47 02050
      LINE(67:)=MATFT                                                   47 02060
      WRITE(IENDF,1) LINE                                               47 02070
1     FORMAT(A80)                                                       47 02080
C                                                                       47 02090
      IP=INDEX(HEAD,')')                                                47 02100
      IE=INDEX(HEAD,'/ENSDF/')                                          47 02110
      XSTR=HEAD(IP+1:IE+6)                                              47 02120
      CALL SQZSTR(XSTR,' ')                                             47 02130
      CALL ADDSTR(XSTR,1,' ')                                           47 02140
      IF(LENSTR(XSTR) .GE. 23)CALL DELSTR(XSTR,23,80)                   47 02150
      EDATE=HEAD(IE+9:IE+10)                                            47 02160
      IMNTH=IVLSTR(EDATE)                                               47 02170
      IF(IMNTH .GE. 1 .AND. IMNTH .LE. 12)THEN                          47 02180
         EDATE=HEAD(IE+7:IE+8)                                          47 02190
         CALL ADDSTR(EDATE,1,MNTHS(IMNTH))                              47 02200
      ELSE                                                              47 02210
         EDATE='?????'                                                  47 02220
      ENDIF                                                             47 02230
      CALL ADDSTR(EDATE,1,'DIST-')                                      47 02240
      LINE=' '                                                          47 02250
      LINE=XSTR                                                         47 02260
      CALL ADDSTR(LINE,23,EDATE)                                        47 02270
      CALL ADDSTR(LINE,34,'REV1-')                                      47 02280
      CALL ADDSTR(LINE,67,MATFT)                                        47 02290
      WRITE(IENDF,1) LINE                                               47 02300
C                                                                       47 02310
      LINE=' '                                                          47 02320
      LINE='---- ENDF/A-6'                                              47 02330
      CALL ADDSTR(LINE,23,'MATERIAL '//MATFT(1:4))                      47 02340
      CALL ADDSTR(LINE,67,MATFT)                                        47 02350
      WRITE(IENDF,1)LINE                                                47 02360
      LINE=' '                                                          47 02370
      LINE='----- DECAY DATA'                                           47 02380
      CALL ADDSTR(LINE,67,MATFT)                                        47 02390
      WRITE(IENDF,1)LINE                                                47 02400
      LINE=' '                                                          47 02410
      LINE='------ ENDF-6'                                              47 02420
      CALL ADDSTR(LINE,67,MATFT)                                        47 02430
      WRITE(IENDF,1)LINE                                                47 02440
C                                                                       47 02450
      LINE=' '                                                          47 02460
      LINE=LABEL                                                        47 02470
      CALL ADDSTR(LINE,1,' ')                                           47 02480
      CALL ADDSTR(LINE,67,MATFT)                                        47 02490
      WRITE(IENDF,1) LINE                                               47 02500
C                                                                       47 02510
      LINE=' '                                                          47 02520
      LINE(10:)='RADLST '//VERNO//'.'                                   47 02530
      CALL ADDSTR(LINE,67,MATFT)                                        47 02540
      WRITE(IENDF,1) LINE                                               47 02550
C  Output comments                                                      47 02560
      IF(KCOMNT .GT. 0) THEN                                            47 02570
         DO 200 K=1,KCOMNT                                              47 02580
            WRITE(IENDF,FMT='(A66,I4,I2,I3,5(1H ))')                    47 02590
     2        KOMENT(K),MATT,MF,MT                                      47 02600
200      CONTINUE                                                       47 02610
      ENDIF                                                             47 02620
C                                                                       47 02630
        DO 300 I=1,4                                                    47 02640
           IF(NOMIT(I) .NE. 0 .AND. OMIT(I) .GE. RIMIN)THEN             47 02650
             WRITE(LINE,'(1X,I3,1X,5HWEAK ,A2,16H OMITTED WITH I=,      47 02660
     2         F6.3,7H%; <E>=,F7.2,4H KEV)')NOMIT(I),RADTYP(I),OMIT(I), 47 02670
     3         EOMIT(I)                                                 47 02680
             CALL ADDSTR(LINE,67,MATFT)                                 47 02690
             WRITE(IENDF,1) LINE                                        47 02700
           ENDIF                                                        47 02710
300     CONTINUE                                                        47 02720
        NC1=NXC+NWD+3                                                   47 02730
        CALL WRITE2(0.0,0.0,1,451,NC1,0)                                47 02740
        CALL WRITE2(0.0,0.0,8,457,0,0)                                  47 02750
        CALL SFEND(MT,MF)                                               47 02760
C                                                                       47 02770
C  File 8 data,MT=457.                                                  47 02780
C                                                                       47 02790
      MF=8                                                              47 02800
      MT=457                                                            47 02810
      NSP=0                                                             47 02820
      IF(NSTYP0 .GT. 0) NSP=NSP+1                                       47 02830
      IF (NSTYP1 .GT. 0 .OR. (SPECTR .AND. NGRIDM .GT. 0)) NSP=NSP+1    47 02840
      IF(NSTYP2 .GT. 0 .OR. (SPECTR .AND. NGRIDP .GT. 0)) NSP=NSP+1     47 02850
      IF (NSTYP4 .GT. 0) NSP=NSP+1                                      47 02860
      IF(NSTYP8 .GT. 0) NSP=NSP+1                                       47 02870
      IF(NSTYP9 .GT. 0 .OR. (BREMS .AND. NGRIDI .GT. 0)) NSP=NSP+1      47 02880
      CALL WRITE2(ZA,AWR,LIS,LISO,0,NSP)                                47 02890
      CALL SIGNIF(TSEC,DTSEC)                                           47 02900
      X(1)=(SUMIE(2)+SUMIE(3))*10.0                                     47 02910
      X(2)=10.*SQRT(DSUMIE(2)**2+DSUMIE(3)**2)                          47 02920
      X(3)=SUMIE(4)*10.0                                                47 02930
      X(4)=DSUMIE(4)*10.0                                               47 02940
      IF(10.*SUMIE(6) .GT. 1000.)THEN                                   47 02950
C       Include recoil energy only if it deposits at least 1 keV/decay  47 02960
         X(5)=10.*(SUMIE(1)+SUMIE(6))                                   47 02970
         X(6)=10.*SQRT(DSUMIE(1)**2+DSUMIE(6)**2)                       47 02980
      ELSE                                                              47 02990
         X(5)=10.*SUMIE(1)                                              47 03000
         X(6)=10.*DSUMIE(1)                                             47 03010
      ENDIF                                                             47 03020
        DO 400 I=1,6,2                                                  47 03030
           CALL SIGNIF(X(I),X(I+1))                                     47 03040
400     CONTINUE                                                        47 03050
      CALL LIST(TSEC,DTSEC,0,0,6,0,X)                                   47 03060
        NDK6=6*NDK                                                      47 03070
        J=0                                                             47 03080
        DO 500 I=1,NDK                                                  47 03090
           J=J+1                                                        47 03100
           X(J)=RTYPE(I)                                                47 03110
           J=J+1                                                        47 03120
           X(J)=RFS(I)                                                  47 03130
           J=J+1                                                        47 03140
           X(J)=ENDQ(I)                                                 47 03150
           J=J+1                                                        47 03160
           X(J)=ENDDQ(I)                                                47 03170
           CALL SIGNIF(X(J-1),X(J))                                     47 03180
           J=J+1                                                        47 03190
           X(J)=ENDBR(I)                                                47 03200
           J=J+1                                                        47 03210
           X(J)=ENDDBR(I)                                               47 03220
           CALL SIGNIF(X(J-1),X(J))                                     47 03230
500     CONTINUE                                                        47 03240
        CALL LIST(SPIN,PARITY,0,0,NDK6,NDK,X)                           47 03250
      LCON=0                                                            47 03260
C                                                                       47 03270
C  STYPE=0 (Gammas) output                                              47 03280
      IF (NSTYP0 .GT. 0) THEN                                           47 03290
         X(1)=ENDN(1,1)                                                 47 03300
         X(2)=ENDDN(1,1)                                                47 03310
         CALL SIGNIF(X(1),X(2))                                         47 03320
         X(3)=10.*SUMIE(4)                                              47 03330
         X(4)=(10.*DSUMIE(4))**2                                        47 03340
         IF(NSTYP9 .GT. 0)THEN                                          47 03350
            ERBX=0.                                                     47 03360
            DERBX=0.                                                    47 03370
            DO 600 J=1,NSTYP9                                           47 03380
               ERBX=ERBX+ES9(J)*RS9(J)                                  47 03390
               DERBX=DERBX+(RS9(J)*DES9(J))**2                          47 03400
600         CONTINUE                                                    47 03410
            ERBX=ERBX/100.                                              47 03420
            IF(BREMS .AND. NGRIDI .GT. 0)THEN                           47 03430
C%%%%%BREMST                                                            47 03440
               ERBX=ERBX+1000.*SUMEB                                    47 03450
               DERBX=DERBX+(1000.*DSUMEB)**2                            47 03460
C^^^^^BREMST                                                            47 03470
            ENDIF                                                       47 03480
            X(3)=X(3)-ERBX                                              47 03490
            DERBX=DERBX/100.**2                                         47 03500
            X(4)=X(4)-DERBX                                             47 03510
            DERBX=SQRT(DERBX)                                           47 03520
         ENDIF                                                          47 03530
         IF(X(4) .GT. 0.)THEN                                           47 03540
            X(4)=SQRT(X(4))                                             47 03550
         ELSE                                                           47 03560
            X(4)=0.                                                     47 03570
         ENDIF                                                          47 03580
         CALL SIGNIF(X(3),X(4))                                         47 03590
         X(5)=0.                                                        47 03600
         X(6)=0.                                                        47 03610
         CALL LIST(0.0,0.0,LCON,0,6,NSTYP0,X)                           47 03620
         X(2)=0.                                                        47 03630
         DO 700 J=1,NSTYP0                                              47 03640
            CALL SIGNIF(ES0(J),DES0(J))                                 47 03650
            X(1)=RTYP0(J)                                               47 03660
            CALL SIGNIF(RS0(J),DRS0(J))                                 47 03670
            X(3)=RS0(J)                                                 47 03680
            X(4)=DRS0(J)                                                47 03690
            NT=4                                                        47 03700
            DO 690 K=5,12                                               47 03710
               X(K)=0.                                                  47 03720
690         CONTINUE                                                    47 03730
            IF(RIS(J) .GT. 0.0)THEN                                     47 03740
               NT=6                                                     47 03750
               CALL SIGNIF(RIS(J),DRIS(J))                              47 03760
               X(5)=RIS(J)                                              47 03770
               X(6)=DRIS(J)                                             47 03780
            ENDIF                                                       47 03790
            IF(RICC(J) .GT. 0.0)THEN                                    47 03800
               NT=8                                                     47 03810
               CALL SIGNIF(RICC(J),DRICC(J))                            47 03820
               X(7)=RICC(J)                                             47 03830
               X(8)=DRICC(J)                                            47 03840
            ENDIF                                                       47 03850
            IF(RICK(J) .GT. 0.0)THEN                                    47 03860
               NT=10                                                    47 03870
               CALL SIGNIF(RICK(J),DRICK(J))                            47 03880
               X(9)=RICK(J)                                             47 03890
               X(10)=DRICK(J)                                           47 03900
            ENDIF                                                       47 03910
            IF(RICL(J) .GT. 0.0)THEN                                    47 03920
               NT=12                                                    47 03930
               CALL SIGNIF(RICL(J),DRICL(J))                            47 03940
               X(11)=RICL(J)                                            47 03950
               X(12)=DRICL(J)                                           47 03960
            ENDIF                                                       47 03970
            CALL LIST(ES0(J),DES0(J),0,0,NT,0,X)                        47 03980
700      CONTINUE                                                       47 03990
      ENDIF                                                             47 04000
C                                                                       47 04010
C  STYPE=1 (Beta-'s) output                                             47 04020
      IF (NSTYP1 .GT. 0 .AND. .NOT.(SPECTR .AND. NGRIDM .GT. 0)) THEN   47 04030
         X(1)=ENDN(1,2)                                                 47 04040
         X(2)=ENDDN(1,2)                                                47 04050
         CALL SIGNIF(X(1),X(2))                                         47 04060
         X(3)=AVE1                                                      47 04070
         X(4)=DAVE1                                                     47 04080
         CALL SIGNIF(X(3),X(4))                                         47 04090
         X(5)=0.                                                        47 04100
         X(6)=0.                                                        47 04110
         CALL LIST(0.0,1.0,LCON,0,6,NSTYP1,X)                           47 04120
         DO 800 J=1,NSTYP1                                              47 04130
            X(1)=RTYP1(J)                                               47 04140
            X(2)=TYP1(J)                                                47 04150
            CALL SIGNIF(ES1(J),DES1(J))                                 47 04160
            CALL SIGNIF(RS1(J),DRS1(J))                                 47 04170
            X(3)=RS1(J)                                                 47 04180
            X(4)=DRS1(J)                                                47 04190
            CALL LIST(ES1(J),DES1(J),0,0,4,0,X)                         47 04200
800      CONTINUE                                                       47 04210
      ENDIF                                                             47 04220
      IF(SPECTR .AND. NGRIDM .GT. 0)THEN                                47 04230
C%%%%%SPECTR                                                            47 04240
         X(1)=1.                                                        47 04250
         X(2)=0.                                                        47 04260
         X(3)=AVE1                                                      47 04270
         X(4)=DAVE1                                                     47 04280
         CALL SIGNIF(X(3),X(4))                                         47 04290
         LCON=1                                                         47 04300
         CALL ENDCON(NGRIDM,EBMS,EBARMS,DEBRMS,RIBMS,DRIBMS,NY,         47 04310
     2     X(5),X(6),LCOV,NR)                                           47 04320
         CALL SIGNIF(X(5),X(6))                                         47 04330
         CALL LIST(0.0,1.0,LCON,0,6,0,X)                                47 04340
         CALL TAB1(1.0,0.0,0,LCOV,NR,NY,NIN,INTT,CX,CY)                 47 04350
         IF(LCOV .EQ. 1)THEN                                            47 04360
            NY2=2*NY                                                    47 04370
            CALL LIST(0.0,0.0,0,2,NY2,NY,COVAR)                         47 04380
         ENDIF                                                          47 04390
         LCON=0                                                         47 04400
         LCOV=0                                                         47 04410
C^^^^^SPECTR                                                            47 04420
      ENDIF                                                             47 04430
C                                                                       47 04440
C  STYPE=2 (EC(Beta+)'s) output                                         47 04450
      IF (NSTYP2 .GT. 0 .OR. (SPECTR .AND. NGRIDP .GT. 0))THEN          47 04460
         X(1)=ENDN(1,3)                                                 47 04470
         X(2)=ENDDN(1,3)                                                47 04480
         CALL SIGNIF(X(1),X(2))                                         47 04490
         X(3)=AVE2                                                      47 04500
         X(4)=DAVE2                                                     47 04510
         CALL SIGNIF(X(3),X(4))                                         47 04520
         NSPECT=NSTYP2                                                  47 04530
         IF(SPECTR .AND. NGRIDP .GT. 0)THEN                             47 04540
C%%%%%SPECTR                                                            47 04550
            LCON=2                                                      47 04560
            CALL ENDCON(NGRIDP,EBPS,EBARPS,DEBRPS,RIBPS,DRIBPS,NY,      47 04570
     2        X(5),X(6),LCOV,NR)                                        47 04580
            CALL SIGNIF(X(5),X(6))                                      47 04590
            ISTART=1                                                    47 04600
835         CONTINUE                                                    47 04610
            DO 840 J=ISTART,NSPECT                                      47 04620
               IF(RS2(J) .EQ. 0.)THEN                                   47 04630
                  NSPECT=NSPECT-1                                       47 04640
                  IF(NSPECT .LE. 0)GOTO 845                             47 04650
                  DO 838 K=J,NSPECT                                     47 04660
                     RTYP2(K)=RTYP2(K+1)                                47 04670
                     TYP2(K)=TYP2(K+1)                                  47 04680
                     ES2(K)=ES2(K+1)                                    47 04690
                     DES2(K)=DES2(K+1)                                  47 04700
                     RS2(K)=RS2(K+1)                                    47 04710
                     DRS2(K)=DRS2(K+1)                                  47 04720
                     RIS2(K)=RIS2(K+1)                                  47 04730
                     DRIS2(K)=DRIS2(K+1)                                47 04740
838               CONTINUE                                              47 04750
                  GOTO 835                                              47 04760
               ENDIF                                                    47 04770
840         CONTINUE                                                    47 04780
C^^^^^SPECTR                                                            47 04790
         ENDIF                                                          47 04800
845      CONTINUE                                                       47 04810
         IF(NSPECT .LT. 0)LCON=1                                        47 04820
         IF(LCON .LE. 0)THEN                                            47 04830
            X(5)=0.                                                     47 04840
            X(6)=0.                                                     47 04850
         ENDIF                                                          47 04860
         CALL LIST(0.0,2.0,LCON,0,6,NSPECT,X)                           47 04870
         IF(NSPECT .GT. 0)THEN                                          47 04880
            DO 850 J=1,NSPECT                                           47 04890
               X(1)=RTYP2(J)                                            47 04900
               X(2)=TYP2(J)                                             47 04910
               CALL SIGNIF(ES2(J),DES2(J))                              47 04920
               IF(.NOT.(SPECTR .AND. NGRIDP .GT. 0))THEN                47 04930
                  X(3)=RS2(J)+RIS2(J)                                   47 04940
                  X(4)=SQRT(DRS2(J)**2+DRIS2(J)**2)                     47 04950
                  CALL SIGNIF(X(3),X(4))                                47 04960
                  X(5)=RIS2(J)                                          47 04970
                  X(6)=DRIS2(J)                                         47 04980
                  CALL SIGNIF(X(5),X(6))                                47 04990
                  CALL LIST(ES2(J),DES2(J),0,0,6,0,X)                   47 05000
               ELSE                                                     47 05010
C%%%%%SPECTR                                                            47 05020
                  CALL SIGNIF(RS2(J),DRS2(J))                           47 05030
                  X(3)=RS2(J)                                           47 05040
                  X(4)=DRS2(J)                                          47 05050
                  CALL LIST(ES2(J),DES2(J),0,0,4,0,X)                   47 05060
C^^^^^SPECTR                                                            47 05070
               ENDIF                                                    47 05080
850         CONTINUE                                                    47 05090
         ENDIF                                                          47 05100
         IF(LCON .GT. 0)THEN                                            47 05110
C%%%%%SPECTR                                                            47 05120
            CALL TAB1(2.0,0.0,0,LCOV,NR,NY,NIN,INTT,CX,CY)              47 05130
            IF(LCOV .EQ. 1)THEN                                         47 05140
               NY2=2*NY                                                 47 05150
               CALL LIST(0.0,0.0,0,2,NY2,NY,COVAR)                      47 05160
            ENDIF                                                       47 05170
            LCON=0                                                      47 05180
            LCOV=0                                                      47 05190
C^^^^^SPECTR                                                            47 05200
         ENDIF                                                          47 05210
      ENDIF                                                             47 05220
C                                                                       47 05230
C  STYPE=4 (Alphas) output                                              47 05240
      IF (NSTYP4 .GT. 0) THEN                                           47 05250
         X(1)=ENDN(1,5)                                                 47 05260
         X(2)=ENDDN(1,5)                                                47 05270
         CALL SIGNIF(X(1),X(2))                                         47 05280
         X(3)=10.*SUMIE(1)                                              47 05290
         X(4)=10.*DSUMIE(1)                                             47 05300
         CALL SIGNIF(X(3),X(4))                                         47 05310
         X(5)=0.                                                        47 05320
         X(6)=0.                                                        47 05330
         CALL LIST(0.0,4.0,LCON,0,6,NSTYP4,X)                           47 05340
         X(2)=0.                                                        47 05350
         DO 900 J=1,NSTYP4                                              47 05360
            X(1)=RTYP4(J)                                               47 05370
            CALL SIGNIF(ES4(J),DES4(J))                                 47 05380
            CALL SIGNIF(RS4(J),DRS4(J))                                 47 05390
            X(3)=RS4(J)                                                 47 05400
            X(4)=DRS4(J)                                                47 05410
            CALL LIST(ES4(J),DES4(J),0,0,4,0,X)                         47 05420
900      CONTINUE                                                       47 05430
      ENDIF                                                             47 05440
C                                                                       47 05450
C  STYP=8 (Discrete electrons) output                                   47 05460
      IF (NSTYP8 .GT. 0) THEN                                           47 05470
         X(1)=ENDN(1,9)                                                 47 05480
         X(2)=ENDDN(1,9)                                                47 05490
         CALL SIGNIF(X(1),X(2))                                         47 05500
         X(3)=SUMIE(3) * 10.0                                           47 05510
         X(4)=DSUMIE(3) * 10.0                                          47 05520
         CALL SIGNIF(X(3),X(4))                                         47 05530
         X(5)=0.                                                        47 05540
         X(6)=0.                                                        47 05550
         CALL LIST(0.0,8.0,LCON,0,6,NSTYP8,X)                           47 05560
         X(2)=0.                                                        47 05570
         DO 950 J=1,NSTYP8                                              47 05580
            X(1)=RTYP8(J)                                               47 05590
            CALL SIGNIF(ES8(J),DES8(J))                                 47 05600
            CALL SIGNIF(RS8(J),DRS8(J))                                 47 05610
            X(3)=RS8(J)                                                 47 05620
            X(4)=DRS8(J)                                                47 05630
            CALL LIST(ES8(J),DES8(J),0,0,4,0,X)                         47 05640
950      CONTINUE                                                       47 05650
      ENDIF                                                             47 05660
C                                                                       47 05670
C  STYPE=9 (X ray, annihilation, and Internal Bremsstrahlung) output    47 05680
      IF(NSTYP9 .GT. 0 .OR. (BREMS .AND. NGRIDI .GT. 0))THEN            47 05690
         IF(ERBX .GT. 0.)THEN                                           47 05700
            X(3)=ERBX                                                   47 05710
            X(4)=DERBX                                                  47 05720
         ELSE                                                           47 05730
C%%%%%BREMST                                                            47 05740
            X(3)=1000.*SUMEB                                            47 05750
            X(4)=1000.*DSUMEB                                           47 05760
C^^^^^BREMST                                                            47 05770
         ENDIF                                                          47 05780
         CALL SIGNIF(X(3),X(4))                                         47 05790
         IF(NSTYP9 .GT. 0)THEN                                          47 05800
            X(1)=ENDN(1,10)                                             47 05810
            X(2)=ENDDN(1,10)                                            47 05820
            CALL SIGNIF(X(1),X(2))                                      47 05830
            IF(BREMS .AND. NGRIDI .GT. 0)THEN                           47 05840
C%%%%%BREMST                                                            47 05850
               LCON=2                                                   47 05860
               CALL ENDCON(NGRIDI,EBIS,EBARIS,DEBRIS,RIBIS,DRIBIS,NY,   47 05870
     2           X(5),X(6),LCOV,NR)                                     47 05880
               CALL SIGNIF(X(5),X(6))                                   47 05890
            ELSE                                                        47 05900
               X(5)=0.                                                  47 05910
               X(6)=0.                                                  47 05920
C^^^^^BREMST                                                            47 05930
            ENDIF                                                       47 05940
            CALL LIST(0.0,9.0,LCON,0,6,NSTYP9,X)                        47 05950
            X(2)=0.                                                     47 05960
            DO 1000 J=1,NSTYP9                                          47 05970
               X(1)=RTYP9(J)                                            47 05980
               CALL SIGNIF(ES9(J),DES9(J))                              47 05990
               CALL SIGNIF(RS9(J),DRS9(J))                              47 06000
               X(3)=RS9(J)                                              47 06010
               X(4)=DRS9(J)                                             47 06020
               CALL LIST(ES9(J),DES9(J),0,0,4,0,X)                      47 06030
1000        CONTINUE                                                    47 06040
         ELSE                                                           47 06050
C%%%%%BREMST                                                            47 06060
            X(1)=1.                                                     47 06070
            X(2)=0.                                                     47 06080
            LCON=1                                                      47 06090
            CALL ENDCON(NGRIDI,EBIS,EBARIS,DEBRIS,RIBIS,DRIBIS,NY,      47 06100
     2        X(5),X(6),LCOV,NR)                                        47 06110
            CALL SIGNIF(X(5),X(6))                                      47 06120
            CALL LIST(0.0,9.0,LCON,0,6,0,X)                             47 06130
C^^^^^BREMST                                                            47 06140
         ENDIF                                                          47 06150
         IF(BREMS .AND. NGRIDI .GT. 0)THEN                              47 06160
C%%%%%BREMST                                                            47 06170
            IF(NDK .EQ. 1)THEN                                          47 06180
               CALL TAB1(RTYPE(1),0.,0,LCOV,NR,NY,NIN,INTT,CX,CY)       47 06190
            ELSE                                                        47 06200
               CALL TAB1(10.0,0.,0,LCOV,NR,NY,NIN,INTT,CX,CY)           47 06210
            ENDIF                                                       47 06220
            IF(LCOV .EQ. 1)THEN                                         47 06230
               NY2=2*NY                                                 47 06240
               CALL LIST(0.0,0.0,0,2,NY2,NY,COVAR)                      47 06250
            ENDIF                                                       47 06260
C^^^^^BREMST                                                            47 06270
         ENDIF                                                          47 06280
      ENDIF                                                             47 06290
      LCON=0                                                            47 06300
      LCOV=0                                                            47 06310
      CALL SFEND(MT,MF)                                                 47 06320
      MATT=0                                                            47 06330
      CALL WRITE2(0.0,0.0,0,0,0,0)                                      47 06340
      RETURN                                                            47 06350
      END                                                               47 06360
C                                                                       48 00010
C                                                                       48 00020
        SUBROUTINE ENDSET                                               48 00030
C                                                                       48 00040
C  Reset arrays used in producing ENDF/B-VI file                        48 00050
C                                                                       48 00060
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************48 00070
C*                           Present Code                               48 00080
C*                           ------------                               48 00090
C*  ZERO8                                                               48 00100
C*                                                                      48 00110
C***********************************************************************48 00120
        INTEGER GMA,AM,MAXDCY,NDE,MAXNXA                                48 00130
        PARAMETER (GMA=999,AM=99,MAXDCY=4,NDE=2*MAXDCY+5*GMA,           48 00140
     2    MAXNXA=4*MAXDCY+1)                                            48 00150
C                                                                       48 00160
        INTEGER PCOMNT,KCOMNT,NDK                                       48 00170
        PARAMETER (PCOMNT=294)                                          48 00180
        CHARACTER KOMENT(PCOMNT)*66,PAR*2                               48 00190
        COMMON /ENDCNT/KCOMNT,NDK                                       48 00200
        COMMON /ENDCOM/ PAR,KOMENT                                      48 00210
C                                                                       48 00220
        REAL RTYPE(MAXDCY),ENDQ(MAXDCY),ENDDQ(MAXDCY),ENDBR(MAXDCY),    48 00230
     2    ENDDBR(MAXDCY),ENDN(MAXDCY,10),ENDDN(MAXDCY,10),ELIS(MAXDCY), 48 00240
     3    ELISO(MAXDCY),RFS(MAXDCY)                                     48 00250
        COMMON /ENDSPC/ RTYPE,ENDQ,ENDDQ,ENDBR,ENDDBR,ENDN,ENDDN,ELIS,  48 00260
     2    ELISO,RFS                                                     48 00270
C                                                                       48 00280
        INTEGER NSTYP0                                                  48 00290
        REAL ES0(GMA),DES0(GMA),RS0(GMA),DRS0(GMA),RICC(GMA),DRICC(GMA),48 00300
     2    RICK(GMA),DRICK(GMA),RICL(GMA),DRICL(GMA),RIS(GMA),DRIS(GMA), 48 00310
     3    RTYP0(GMA),AVE0,DAVE0                                         48 00320
        COMMON /STYP0/ES0,DES0,RS0,DRS0,RICC,DRICC,RICK,DRICK,RICL,     48 00330
     2    DRICL,RIS,DRIS,RTYP0,AVE0,DAVE0,NSTYP0                        48 00340
C                                                                       48 00350
        INTEGER NSTYP1                                                  48 00360
        REAL ES1(AM),DES1(AM),RS1(AM),DRS1(AM),RTYP1(AM),TYP1(AM),AVE1, 48 00370
     2    DAVE1                                                         48 00380
        COMMON /STYP1/ES1,DES1,RS1,DRS1,RTYP1,TYP1,AVE1,DAVE1,NSTYP1    48 00390
C                                                                       48 00400
        INTEGER NSTYP2                                                  48 00410
        REAL ES2(AM),DES2(AM),RS2(AM),DRS2(AM),RIS2(AM),DRIS2(AM),      48 00420
     2    RTYP2(AM),TYP2(AM),AVE2,DAVE2                                 48 00430
        COMMON /STYP2/ES2,DES2,RS2,DRS2,RIS2,DRIS2,RTYP2,TYP2,AVE2,     48 00440
     2    DAVE2,NSTYP2                                                  48 00450
C                                                                       48 00460
        INTEGER NSTYP4                                                  48 00470
        REAL ES4(AM),DES4(AM),RS4(AM),DRS4(AM),RTYP4(AM)                48 00480
        COMMON /STYP4/ES4,DES4,RS4,DRS4,RTYP4,NSTYP4                    48 00490
C                                                                       48 00500
C       COMMON /STYP5/                                                  48 00510
C                                                                       48 00520
C       COMMON /STYP6/                                                  48 00530
C                                                                       48 00540
C       COMMON /STYP7/                                                  48 00550
C                                                                       48 00560
        INTEGER NSTYP8                                                  48 00570
        REAL ES8(NDE),DES8(NDE),RS8(NDE),DRS8(NDE),RTYP8(NDE)           48 00580
        COMMON /STYP8/ES8,DES8,RS8,DRS8,RTYP8,NSTYP8                    48 00590
C                                                                       48 00600
        INTEGER NSTYP9                                                  48 00610
        REAL ES9(MAXNXA),DES9(MAXNXA),RS9(MAXNXA),DRS9(MAXNXA),         48 00620
     2    RTYP9(MAXNXA)                                                 48 00630
        COMMON /STYP9/ES9,DES9,RS9,DRS9,RTYP9,NSTYP9                    48 00640
C                                                                       48 00650
        INTEGER NDK10,I                                                 48 00660
C                                                                       48 00670
        CALL ZERO8(NDK,RTYPE)                                           48 00680
        CALL ZERO8(NDK,ENDQ)                                            48 00690
        CALL ZERO8(NDK,ENDDQ)                                           48 00700
        CALL ZERO8(NDK,ENDBR)                                           48 00710
        CALL ZERO8(NDK,ENDDBR)                                          48 00720
        NDK10=10*NDK                                                    48 00730
        CALL ZERO8(NDK10,ENDN)                                          48 00740
        CALL ZERO8(NDK10,ENDDN)                                         48 00750
C                                                                       48 00760
        IF(NSTYP0 .GT. 0)THEN                                           48 00770
           CALL ZERO8(NSTYP0,ES0)                                       48 00780
           CALL ZERO8(NSTYP0,DES0)                                      48 00790
           CALL ZERO8(NSTYP0,RS0)                                       48 00800
           CALL ZERO8(NSTYP0,DRS0)                                      48 00810
           CALL ZERO8(NSTYP0,RICC)                                      48 00820
           CALL ZERO8(NSTYP0,DRICC)                                     48 00830
           CALL ZERO8(NSTYP0,RICK)                                      48 00840
           CALL ZERO8(NSTYP0,DRICK)                                     48 00850
           CALL ZERO8(NSTYP0,RICL)                                      48 00860
           CALL ZERO8(NSTYP0,DRICL)                                     48 00870
           CALL ZERO8(NSTYP0,RIS)                                       48 00880
           CALL ZERO8(NSTYP0,DRIS)                                      48 00890
           CALL ZERO8(NSTYP0,RTYP0)                                     48 00900
           NSTYP0=0                                                     48 00910
        ENDIF                                                           48 00920
C                                                                       48 00930
        IF(NSTYP1 .GT. 0)THEN                                           48 00940
           CALL ZERO8(NSTYP1,ES1)                                       48 00950
           CALL ZERO8(NSTYP1,DES1)                                      48 00960
           CALL ZERO8(NSTYP1,RS1)                                       48 00970
           CALL ZERO8(NSTYP1,DRS1)                                      48 00980
           CALL ZERO8(NSTYP1,RTYP1)                                     48 00990
           CALL ZERO8(NSTYP1,TYP1)                                      48 01000
           NSTYP1=0                                                     48 01010
        ENDIF                                                           48 01020
C                                                                       48 01030
        IF(NSTYP2 .GT. 0)THEN                                           48 01040
           CALL ZERO8(NSTYP2,ES2)                                       48 01050
           CALL ZERO8(NSTYP2,DES2)                                      48 01060
           CALL ZERO8(NSTYP2,RS2)                                       48 01070
           CALL ZERO8(NSTYP2,DRS2)                                      48 01080
           CALL ZERO8(NSTYP2,RIS2)                                      48 01090
           CALL ZERO8(NSTYP2,DRIS2)                                     48 01100
           CALL ZERO8(NSTYP2,RTYP2)                                     48 01110
           CALL ZERO8(NSTYP2,TYP2)                                      48 01120
           NSTYP2=0                                                     48 01130
        ENDIF                                                           48 01140
C                                                                       48 01150
        IF(NSTYP4 .GT. 0)THEN                                           48 01160
           CALL ZERO8(NSTYP4,ES4)                                       48 01170
           CALL ZERO8(NSTYP4,DES4)                                      48 01180
           CALL ZERO8(NSTYP4,RS4)                                       48 01190
           CALL ZERO8(NSTYP4,DRS4)                                      48 01200
           CALL ZERO8(NSTYP4,RTYP4)                                     48 01210
           NSTYP4=0                                                     48 01220
        ENDIF                                                           48 01230
C                                                                       48 01240
C  Add coding for STYP=5 to 7 when implemented                          48 01250
C                                                                       48 01260
        IF(NSTYP8 .GT. 0)THEN                                           48 01270
           CALL ZERO8(NSTYP8,ES8)                                       48 01280
           CALL ZERO8(NSTYP8,DES8)                                      48 01290
           CALL ZERO8(NSTYP8,RS8)                                       48 01300
           CALL ZERO8(NSTYP8,DRS8)                                      48 01310
           CALL ZERO8(NSTYP8,RTYP8)                                     48 01320
           NSTYP8=0                                                     48 01330
        ENDIF                                                           48 01340
C                                                                       48 01350
        IF(NSTYP9 .GT. 0)THEN                                           48 01360
           CALL ZERO8(NSTYP9,ES9)                                       48 01370
           CALL ZERO8(NSTYP9,DES9)                                      48 01380
           CALL ZERO8(NSTYP9,RS9)                                       48 01390
           CALL ZERO8(NSTYP9,DRS9)                                      48 01400
           CALL ZERO8(NSTYP9,RTYP9)                                     48 01410
           NSTYP9=0                                                     48 01420
        ENDIF                                                           48 01430
C                                                                       48 01440
        IF(KCOMNT .GT. 0)THEN                                           48 01450
           DO 100 I=1,KCOMNT                                            48 01460
              KOMENT(I)=' '                                             48 01470
100        CONTINUE                                                     48 01480
           KCOMNT=0                                                     48 01490
        ENDIF                                                           48 01500
        RETURN                                                          48 01510
        END                                                             48 01520
C                                                                       49 00010
        SUBROUTINE RADCOM(CARD,ENERGY,JCONT,NMESS)                      49 00020
C                                                                       49 00030
C  Processes COMMENT records associated with radiations                 49 00040
C                                                                       49 00050
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************49 00060
C*                           Present Code                               49 00070
C*                           ------------                               49 00080
C*  CMNTCD  MESSAG                                                      49 00090
C*                                                                      49 00100
C***********************************************************************49 00110
C                                                                       49 00120
        CHARACTER*(*) CARD,ENERGY                                       49 00130
        INTEGER JCONT,NMESS                                             49 00140
C                                                                       49 00150
        INTEGER I                                                       49 00160
C                                                                       49 00170
        IF(CARD(7:7) .EQ. 'D' .OR. CARD(7:7) .EQ. 'd')RETURN            49 00180
        I=0                                                             49 00190
        IF(CARD(6:6) .NE. '1' .AND. CARD(6:6) .NE. ' ')THEN             49 00200
           I=1                                                          49 00210
        ELSE                                                            49 00220
           IF(CARD(6:6) .EQ. '1')CALL                                   49 00230
     2       MESSAG(NMESS,1,' OBSOLETE FORMAT')                         49 00240
        ENDIF                                                           49 00250
        CALL CMNTCD(CARD,2,I,ENERGY,JCONT,NMESS)                        49 00260
        RETURN                                                          49 00270
        END                                                             49 00280
C                                                                       50 00010
      SUBROUTINE SPNPAR(XSTR,SPIN,PARITY,NMESS)                         50 00020
C                                                                       50 00030
C  Reads LEN characters of XSTR starting at LOC and returns the spin    50 00040
C    and parity items from the field.                                   50 00050
C    If the field is blank, spin set to -77.777, parity to 0.           50 00060
C    If the field has more than one set of values, spin set to -77.777, 50 00070
C      parity set to 0.                                                 50 00080
C    If spin is missing, the default is -77.777.                        50 00090
C    If parity is missing, the default is 0.                            50 00100
C  Parentheses are ignored.                                             50 00110
C                                                                       50 00120
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************50 00130
C*                           Present Code                               50 00140
C*                           ------------                               50 00150
C*  MESSAG                                                              50 00160
C*                                                                      50 00170
C*                           F77STR  4(2)                               50 00180
C*                           ------------                               50 00190
C*  DELSTR  IVLSTR  LENSTR  SQZSTR  TYPSTR                              50 00200
C*                                                                      50 00210
C*                        FORTRAN 77 Supplied                           50 00220
C*                        -------------------                           50 00230
C*  INDEX                                                               50 00240
C*                                                                      50 00250
C***********************************************************************50 00260
      INTEGER NMESS                                                     50 00270
      REAL SPIN,PARITY                                                  50 00280
      CHARACTER XSTR*(*)                                                50 00290
C                                                                       50 00300
      INTEGER TYPSTR,IVLSTR,LENSTR                                      50 00310
      EXTERNAL TYPSTR,IVLSTR,LENSTR                                     50 00320
C                                                                       50 00330
      INTEGER I                                                         50 00340
      CHARACTER*20 STR                                                  50 00350
C                                                                       50 00360
      SPIN=-77.777                                                      50 00370
      PARITY=0.                                                         50 00380
      STR=XSTR                                                          50 00390
      CALL SQZSTR(STR,' ')                                              50 00400
      CALL SQZSTR(STR,'(')                                              50 00410
      CALL SQZSTR(STR,')')                                              50 00420
      IF (LENSTR(STR) .EQ. 0) THEN                                      50 00430
         CALL MESSAG(NMESS,1,'MISSING J FLD SPIN -77.777 PARITY 0.')    50 00440
         RETURN                                                         50 00450
      ENDIF                                                             50 00460
      IF (INDEX(STR,',') .NE. 0) THEN                                   50 00470
         CALL MESSAG(NMESS,1,'EXCESS J FLD SPIN -77.777 PARITY 0.')     50 00480
         RETURN                                                         50 00490
      ENDIF                                                             50 00500
      I=INDEX(STR,'+')                                                  50 00510
      IF (I .NE. 0) THEN                                                50 00520
         PARITY=+1.0                                                    50 00530
         CALL DELSTR(STR,I,1)                                           50 00540
      ELSE                                                              50 00550
         I=INDEX(STR,'-')                                               50 00560
         IF (I .NE. 0) THEN                                             50 00570
            PARITY=-1.0                                                 50 00580
            CALL DELSTR(STR,I,1)                                        50 00590
         ELSE                                                           50 00600
            CALL MESSAG(NMESS,5,'PARITY 0.')                            50 00610
         ENDIF                                                          50 00620
      ENDIF                                                             50 00630
      IF (LENSTR(STR) .NE. 0) THEN                                      50 00640
         IF (TYPSTR(STR(1:1)) .NE. 1) THEN                              50 00650
            CALL MESSAG(NMESS,1,'INVALID J FLD SPIN -77.777')           50 00660
         ELSE                                                           50 00670
            I=INDEX(STR,'/')                                            50 00680
            IF(I .EQ. 0)THEN                                            50 00690
               SPIN=REAL(IVLSTR(STR))                                   50 00700
            ELSE                                                        50 00710
               SPIN=REAL(IVLSTR(STR(1:I-1)))                            50 00720
               SPIN=SPIN / 2.0                                          50 00730
            ENDIF                                                       50 00740
         ENDIF                                                          50 00750
      ENDIF                                                             50 00760
      RETURN                                                            50 00770
      END                                                               50 00780
C-----  Auxillary routines used with ENDF Output                        51 00010
       SUBROUTINE LIST(C1,C2,L1,L2,N1,N2,B)                             51 00020
C                                                                       51 00030
C  Outputs an ENDF LIST record                                          51 00040
C                                                                       51 00050
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************51 00060
C*                           Present Code                               51 00070
C*                           ------------                               51 00080
C*  WRITE2                                                              51 00090
C*                                                                      51 00100
C***********************************************************************51 00110
       INTEGER L1,L2,N1,N2                                              51 00120
       REAL C1,C2,B(N1)                                                 51 00130
C                                                                       51 00140
       INTEGER MAT,MF,MT                                                51 00150
       COMMON /MATMFT/MAT,MF,MT                                         51 00160
C                                                                       51 00170
       INTEGER INUDAT,IENDF                                             51 00180
       COMMON /OUTUNT/INUDAT,IENDF                                      51 00190
C                                                                       51 00200
       INTEGER I,J,J1,IT,IFORM                                          51 00210
       REAL X(6)                                                        51 00220
       CHARACTER*11 STRB(6)                                             51 00230
       CHARACTER*12 BUF                                                 51 00240
C                                                                       51 00250
       CHARACTER*28 FORM(3)                                             51 00260
       DATA FORM/'(2A11,44X,I4,I2,I3,5H     )',                         51 00270
     2           '(4A11,22X,I4,I2,I3,5H     )',                         51 00280
     3           '(6A11,I4,I2,I3,5H     )'/                             51 00290
C                                                                       51 00300
       CALL WRITE2(C1,C2,L1,L2,N1,N2)                                   51 00310
       DO 200 I=1,N1,6                                                  51 00320
          J1=0                                                          51 00330
           IT=MIN0(N1,I+5)                                              51 00340
           DO 100 J=I,IT                                                51 00350
              J1=J1+1                                                   51 00360
              BUF=' '                                                   51 00370
              WRITE(BUF,FMT='(1PE12.5)') B(J)                           51 00380
              STRB(J1)=BUF(1:8)//BUF(10:)                               51 00390
100        CONTINUE                                                     51 00400
           IFORM=J1/2                                                   51 00410
           WRITE(IENDF,FMT=FORM(IFORM))(STRB(J),J=1,J1),MAT,MF,MT       51 00420
200    CONTINUE                                                         51 00430
       RETURN                                                           51 00440
       END                                                              51 00450
C                                                                       52 00010
        SUBROUTINE SFEND(MT,MF)                                         52 00020
C                                                                       52 00030
C  Outputs ENDF SEND and FEND records                                   52 00040
C                                                                       52 00050
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************52 00060
C*                           Present Code                               52 00070
C*                           ------------                               52 00080
C*  WRITE2                                                              52 00090
C*                                                                      52 00100
C***********************************************************************52 00110
        INTEGER MT,MF                                                   52 00120
C                                                                       52 00130
        MT=0                                                            52 00140
        CALL WRITE2(0.0,0.0,0,0,0,0)                                    52 00150
        MF=0                                                            52 00160
        CALL WRITE2(0.0,0.0,0,0,0,0)                                    52 00170
        RETURN                                                          52 00180
        END                                                             52 00190
C                                                                       53 00010
        SUBROUTINE SIGNIF(X,DX)                                         53 00020
C                                                                       53 00030
C  Obtains significant digits for quantities calculated for ENDF        53 00040
C                                                                       53 00050
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************53 00060
C*                           NSDCNV  2(03)                              53 00070
C*                           -------------                              53 00080
C*  CNVS2U  CNVU2S                                                      53 00090
C*                                                                      53 00100
C***********************************************************************53 00110
        REAL X,DX                                                       53 00120
C                                                                       53 00130
        CHARACTER SX*11,SDX*2                                           53 00140
C                                                                       53 00150
        REAL ALOG10                                                     53 00160
        INTRINSIC ALOG10                                                53 00170
C                                                                       53 00180
        IF(X .GT. 0. .AND. DX .GT. 0.)THEN                              53 00190
           IF((ALOG10(X)-ALOG(DX)) .GT. 6.)DX=0.                        53 00200
        ENDIF                                                           53 00210
        CALL CNVU2S(X,DX,SX,11,SDX,2)                                   53 00220
        CALL CNVS2U(SX,SDX,X,DX)                                        53 00230
        IF(DX .GT. X)DX=X                                               53 00240
        RETURN                                                          53 00250
        END                                                             53 00260
C                                                                       54 00010
       SUBROUTINE TAB1(C1,C2,L1,L2,NR,NP,NBT,INT,X,Y)                   54 00020
C                                                                       54 00030
C  Outputs an ENDF TAB1 record                                          54 00040
C                                                                       54 00050
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************54 00060
C*                           Present Code                               54 00070
C*                           ------------                               54 00080
C*  WRITE2                                                              54 00090
C*                                                                      54 00100
C***********************************************************************54 00110
       INTEGER L1,L2,NR,NP,NBT(NR),INT(NR)                              54 00120
       REAL C1,C2,X(NP),Y(NP)                                           54 00130
C                                                                       54 00140
       INTEGER MATT,MF,MT                                               54 00150
       COMMON /MATMFT/MATT,MF,MT                                        54 00160
C                                                                       54 00170
       INTEGER INUDAT,IENDF                                             54 00180
       COMMON /OUTUNT/INUDAT,IENDF                                      54 00190
C                                                                       54 00200
       INTEGER I,J,J1,IT,IFORM                                          54 00210
       REAL XI(6)                                                       54 00220
       CHARACTER*12 BUF                                                 54 00230
       CHARACTER*11 STRB(6)                                             54 00240
C                                                                       54 00250
       CHARACTER*28 FORM(3)                                             54 00260
       DATA FORM/'(2A11,44X,I4,I2,I3,5H     )',                         54 00270
     2           '(4A11,22X,I4,I2,I3,5H     )',                         54 00280
     3           '(6A11,I4,I2,I3,5H     )'/                             54 00290
C                                                                       54 00300
       CALL WRITE2(C1,C2,L1,L2,NR,NP)                                   54 00310
       DO 200 I=1,NR,3                                                  54 00320
           J1=0                                                         54 00330
           IT=MIN0(NR,I+2)                                              54 00340
           DO 100 J=I,IT                                                54 00350
              J1=J1+1                                                   54 00360
              WRITE(STRB(J1),FMT='(I11)')NBT(J)                         54 00370
              J1=J1+1                                                   54 00380
              WRITE(STRB(J1),FMT='(I11)')INT(J)                         54 00390
100        CONTINUE                                                     54 00400
           IFORM=J1/2                                                   54 00410
           WRITE(IENDF,FMT=FORM(IFORM))(STRB(J),J=1,J1),MATT,MF,MT      54 00420
200    CONTINUE                                                         54 00430
       DO 400 I=1,NP,3                                                  54 00440
           J1=0                                                         54 00450
           IT=MIN0(NP,I+2)                                              54 00460
           DO 300 J=I,IT                                                54 00470
              J1=J1+1                                                   54 00480
              BUF=' '                                                   54 00490
              WRITE(BUF,FMT='(1PE12.5)') X(J)                           54 00500
              STRB(J1)=BUF(1:8)//BUF(10:)                               54 00510
              J1=J1+1                                                   54 00520
              BUF=' '                                                   54 00530
              WRITE(BUF,FMT='(1PE12.5)') Y(J)                           54 00540
              STRB(J1)=BUF(1:8)//BUF(10:)                               54 00550
300        CONTINUE                                                     54 00560
           IFORM=J1/2                                                   54 00570
           WRITE(IENDF,FMT=FORM(IFORM))(STRB(J),J=1,J1),MATT,MF,MT      54 00580
400     CONTINUE                                                        54 00590
       RETURN                                                           54 00600
       END                                                              54 00610
C                                                                       55 00010
      SUBROUTINE WRITE2(C1,C2,L1,L2,N1,N2)                              55 00020
C                                                                       55 00030
C  Outputs an ENDF CONT record or first member of LIST or TAB1 records  55 00040
C                                                                       55 00050
      INTEGER L1,L2,N1,N2                                               55 00060
      REAL C1,C2                                                        55 00070
C                                                                       55 00080
      INTEGER MAT,MF,MT                                                 55 00090
      COMMON /MATMFT/MAT,MF,MT                                          55 00100
C                                                                       55 00110
      INTEGER INUDAT,IENDF                                              55 00120
      COMMON /OUTUNT/INUDAT,IENDF                                       55 00130
C                                                                       55 00140
      INTEGER I                                                         55 00150
      CHARACTER*11 STRC(2)                                              55 00160
      CHARACTER*24 BUF                                                  55 00170
C                                                                       55 00180
         BUF=' '                                                        55 00190
         WRITE(BUF,FMT='(2(1PE12.5))')C1,C2                             55 00200
         STRC(1)=BUF(1:8)//BUF(10:12)                                   55 00210
         STRC(2)=BUF(13:20)//BUF(22:)                                   55 00220
C                                                                       55 00230
      WRITE(IENDF,FMT='(2A11,4I11,I4,I2,I3,5(1H ))')                    55 00240
     2  (STRC(I),I=1,2),L1,L2,N1,N2,MAT,MF,MT                           55 00250
      RETURN                                                            55 00260
      END                                                               55 00270
C                                                                       56 00010
C-----                                                                  56 00020
C-----  Continua Preparation for ENDF Output                            56 00030
C%%%%%SPECTR                                                            56 00040
        SUBROUTINE ENDCON(NCON,EB,EBAR,DEBAR,RI,DRI,NY,FC,DFC,LCOV,NR)  56 00050
C                                                                       56 00060
C  Converts continua data to form appropriate for ENDF/B-VI.            56 00070
C    Assume linear-linear interpolation except as noted.                56 00080
C                                                                       56 00090
C****************  SUBROUTINES AND FUNCTIONS CALLED  *******************56 00100
C*                           Present Code                               56 00110
C*                           ------------                               56 00120
C*  ZERO4   ZERO8                                                       56 00130
C*                                                                      56 00140
C*                        FORTRAN 77 Supplied                           56 00150
C*                        -------------------                           56 00160
C*  ALOG    DLOG    SQRT                                                56 00170
C*                                                                      56 00180
C***********************************************************************56 00190
        INTEGER NCON,LCOV,NY,NR                                         56 00200
        REAL EB(NCON),EBAR(NCON),DEBAR(NCON),RI(NCON),DRI(NCON),FC,DFC  56 00210
C                                                                       56 00220
        INTEGER NGRMAX,NYMAX,NRMAX,NCVMAX                               56 00230
        PARAMETER (NGRMAX=30,NYMAX=2*NGRMAX+2,NRMAX=NYMAX/2,            56 00240
     2    NCVMAX=2*NYMAX)                                               56 00250
C                                                                       56 00260
        INTEGER NIN(NRMAX),INTT(NRMAX)                                  56 00270
        REAL CX(NYMAX),CY(NYMAX),COVAR(NCVMAX)                          56 00280
        COMMON/ENDTAB/NIN,INTT,CX,CY,COVAR                              56 00290
C                                                                       56 00300
        INTEGER I,J,ISTART,K,ISTRT2,ISTOP,ISTEP,J1                      56 00310
        REAL SUM,DSUM,FK(NYMAX),Y1,Y2,B1,SIZE,MULT,ETEST                56 00320
        DOUBLE PRECISION A,B,E1,E2                                      56 00330
C                                                                       56 00340
        REAL ABS,AMAX1,AMIN1,SQRT,ALOG                                  56 00350
        DOUBLE PRECISION DLOG                                           56 00360
        INTRINSIC ABS,AMAX1,AMIN1,SQRT,DLOG,ALOG                        56 00370
C                                                                       56 00380
        LCOV=0                                                          56 00390
        CALL ZERO4(NRMAX,NIN)                                           56 00400
        CALL ZERO4(NRMAX,INTT)                                          56 00410
        CALL ZERO8(NYMAX,CX)                                            56 00420
        CALL ZERO8(NYMAX,CY)                                            56 00430
        CALL ZERO8(NYMAX,COVAR)                                         56 00440
        CALL ZERO8(NYMAX,FK)                                            56 00450
C                                                                       56 00460
C  Obtain unnormalized distribution                                     56 00470
        SUM=0.                                                          56 00480
        DSUM=0.                                                         56 00490
        NR=1                                                            56 00500
        NY=1                                                            56 00510
C    Special treatment for first points                                 56 00520
        CX(1)=0.                                                        56 00530
        INTT(1)=1                                                       56 00540
        IF(EB(1) .NE. 0.)THEN                                           56 00550
C     Add psuedopoint at E=0 to satisfy expectations of ENDF codes      56 00560
           CY(NY)=0.                                                    56 00570
           NY=NY+1                                                      56 00580
           CY(NY)=0.                                                    56 00590
           CX(NY)=1000.*EB(1)                                           56 00600
           NIN(1)=NY                                                    56 00610
           ISTART=1                                                     56 00620
        ELSE                                                            56 00630
           IF(RI(1) .GE. 0.)THEN                                        56 00640
C     Use RI to obtain value.  Note that this does not quite reproduce  56 00650
C       the energy of this bin but should be close                      56 00660
              INTT(1)=2                                                 56 00670
              CY(NY)=0.                                                 56 00680
              NY=NY+1                                                   56 00690
              CX(NY)=1000.*EB(2)                                        56 00700
              CY(NY)=2.*RI(1)/CX(NY)                                    56 00710
              SUM=SUM+RI(1)                                             56 00720
              NIN(1)=NY                                                 56 00730
              IF(RI(1) .NE. 0.)THEN                                     56 00740
                 FK(1)=DRI(1)/RI(1)                                     56 00750
                 DSUM=DSUM+FK(1)**2                                     56 00760
              ENDIF                                                     56 00770
           ELSE                                                         56 00780
C     Intensity is undefined.  Get estimate from ave. energy assuming   56 00790
C       constant interpolation                                          56 00800
              CY(NY)=2.*1000.*100.*EBAR(1)/(1000.*EB(2))**2             56 00810
              NY=NY+1                                                   56 00820
              CX(NY)=1000.*EB(2)                                        56 00830
              CY(NY)=CY(NY-1)                                           56 00840
              NIN(1)=NY                                                 56 00850
              SUM=SUM+1000.*EB(2)*CY(1)                                 56 00860
              IF(EBAR(1) .NE. 0.)THEN                                   56 00870
                 FK(1)=DEBAR(1)/EBAR(1)                                 56 00880
                 DSUM=DSUM+FK(1)**2                                     56 00890
              ENDIF                                                     56 00900
           ENDIF                                                        56 00910
           ISTART=2                                                     56 00920
        ENDIF                                                           56 00930
        NR=NR+1                                                         56 00940
        NY=NY+1                                                         56 00950
C     Obtain rest of distribution up to end point by simultaneously     56 00960
C       fitting both RI and EBAR.                                       56 00970
        DO 100 I=ISTART,NCON-2                                          56 00980
           INTT(NR)=2                                                   56 00990
C                                                                       56 01000
           E1=DBLE(1000.*EB(I))                                         56 01010
           E2=DBLE(1000.*EB(I+1))                                       56 01020
           B=6.*(RI(I)*(E1+E2)-2.*1000.*100.*EBAR(I))/((E1-E2)**3)      56 01030
           A=(RI(I)-0.5*B*(E2**2-E1**2))/(E2-E1)                        56 01040
           Y1=REAL(A+B*E1)                                              56 01050
           Y2=REAL(A+B*E2)                                              56 01060
C                                                                       56 01070
           IF((Y1 .GE. 0. .AND. Y2 .GE. 0.) .AND.                       56 01080
     2       (ABS(ALOG(ABS(Y2/Y1))) .LT. ALOG(8.)))THEN                 56 01090
              CX(NY)=REAL(E1)                                           56 01100
              CY(NY)=Y1                                                 56 01110
              IF(RI(I) .NE. 0.)FK(NY)=DRI(I)/RI(I)                      56 01120
              NY=NY+1                                                   56 01130
              CX(NY)=REAL(E2)                                           56 01140
              CY(NY)=Y2                                                 56 01150
              IF(RI(I) .NE. 0.)FK(NY)=DRI(I)/RI(I)                      56 01160
           ELSE                                                         56 01170
C       Linear-linear not appropriate representation.  Assume log-log   56 01180
              B1=0.                                                     56 01190
              SIZE=1.                                                   56 01200
              IF(Y2 .LT. Y1)THEN                                        56 01210
                 ISTRT2=19                                              56 01220
                 ISTOP=0                                                56 01230
                 ISTEP=-1                                               56 01240
                 MULT=-1.                                               56 01250
              ELSE                                                      56 01260
                 ISTRT2=0                                               56 01270
                 ISTOP=19                                               56 01280
                 ISTEP=1                                                56 01290
                 MULT=1.                                                56 01300
              ENDIF                                                     56 01310
90            CONTINUE                                                  56 01320
              IF(SIZE .LE. 1.E-6)GOTO 96                                56 01330
              DO 95 J=ISTRT2,ISTOP,ISTEP                                56 01340
                 B=DBLE(B1+MULT*SIZE*REAL(J))                           56 01350
                 IF(REAL(B) .NE. -1.)THEN                               56 01360
                   A=RI(I)*(B+1.)/(1.-(E1/E2)**(B+1.))                  56 01370
                 ELSE                                                   56 01380
                    A=RI(I)/DLOG(E2/E1)                                 56 01390
                 ENDIF                                                  56 01400
                 IF(REAL(B) .NE. -2.)THEN                               56 01410
                    ETEST=REAL(A*E2*(1.-(E1/E2)**(B+2.))/(B+2.))        56 01420
                 ELSE                                                   56 01430
                    ETEST=REAL(A*DLOG(E2/E1)/(E2**(B+1.)))              56 01440
                ENDIF                                                   56 01450
                IF(ABS(1000.*100.*EBAR(I)-ETEST) .LT.                   56 01460
     2             AMAX1(5000.*DEBAR(I),0.1*EBAR(I)))GOTO 97            56 01470
                 IF(ETEST .GT. 1000.*100.*EBAR(I))THEN                  56 01480
                    IF(REAL(B) .GE. 0.)THEN                             56 01490
                       B1=REAL(B-MULT*SIZE)                             56 01500
                       SIZE=0.1*SIZE                                    56 01510
                       GOTO 90                                          56 01520
                    ELSE                                                56 01530
                       IF(J .NE. ISTRT2)THEN                            56 01540
                          B1=REAL(B)                                    56 01550
                          SIZE=0.1*SIZE                                 56 01560
                          GOTO 90                                       56 01570
                       ENDIF                                            56 01580
                    ENDIF                                               56 01590
                 ENDIF                                                  56 01600
95            CONTINUE                                                  56 01610
96            CONTINUE                                                  56 01620
C        No fit for linear-log so assume constant and fit to RI.        56 01630
              CX(NY)=REAL(E1)                                           56 01640
              CY(NY)=RI(I)/REAL(E2-E1)                                  56 01650
              INTT(NR)=1                                                56 01660
              IF(RI(I) .NE. 0.)FK(NY)=DRI(I)/RI(I)                      56 01670
              GOTO 98                                                   56 01680
97            CONTINUE                                                  56 01690
              CX(NY)=REAL(E1)                                           56 01700
              CY(NY)=REAL((A*(E1/E2)**B)/E2)                            56 01710
              IF(RI(I) .NE. 0.)FK(NY)=DRI(I)/RI(I)                      56 01720
              NY=NY+1                                                   56 01730
              CX(NY)=REAL(E2)                                           56 01740
              CY(NY)=REAL(A/E2)                                         56 01750
              IF(RI(I) .NE. 0.)FK(NY)=DRI(I)/RI(I)                      56 01760
              INTT(NR)=5                                                56 01770
           ENDIF                                                        56 01780
98         CONTINUE                                                     56 01790
           SUM=SUM+RI(I)                                                56 01800
           DSUM=DSUM+FK(NY)**2                                          56 01810
           NIN(NR)=NY                                                   56 01820
           NY=NY+1                                                      56 01830
           NR=NR+1                                                      56 01840
100     CONTINUE                                                        56 01850
C     Last point must be zero so fit to RI assuming this.  Note this    56 01860
C       will not quite reproduce the average energy                     56 01870
        INTT(NR)=2                                                      56 01880
        CX(NY)=1000.*EB(NCON-1)                                         56 01890
        A=DBLE(2.*1000.*EB(NCON)*RI(NCON-1)/                            56 01900
     2    (1000.*(EB(NCON)-EB(NCON-1)))**2)                             56 01910
        B=-A/(1000.*EB(NCON))                                           56 01920
        CY(NY)=REAL(A)+REAL(B)*CX(NY)                                   56 01930
        SUM=SUM+RI(NCON-1)                                              56 01940
        IF(RI(NCON-1) .NE. 0.)THEN                                      56 01950
           FK(NY)=DRI(NCON-1)/RI(NCON-1)                                56 01960
           DSUM=DSUM+FK(NY)**2                                          56 01970
        ENDIF                                                           56 01980
        NY=NY+1                                                         56 01990
        CX(NY)=1000.*EB(NCON)                                           56 02000
        CY(NY)=0.                                                       56 02010
        FK(NY)=0.                                                       56 02020
        NIN(NR)=NY                                                      56 02030
C                                                                       56 02040
C  Get continuum normalization                                          56 02050
        DSUM=SQRT(DSUM)                                                 56 02060
        FC=SUM/100.                                                     56 02070
        DFC=DSUM/SUM                                                    56 02080
C    Set uncertainty on normalization to lowest fractional uncertainty  56 02090
        DO 200 I=1,NY                                                   56 02100
           IF(FK(I) .NE. 0.)DFC=AMIN1(DFC,FK(I))                        56 02110
200     CONTINUE                                                        56 02120
C    Find remainder for individual uncertainties                        56 02130
        DO 220 I=1,NY                                                   56 02140
           IF(FK(I) .NE. 0.)THEN                                        56 02150
              FK(I)=SQRT(FK(I)**2-DFC**2)                               56 02160
              IF(FK(I) .GT. 0.)LCOV=1                                   56 02170
           ENDIF                                                        56 02180
220     CONTINUE                                                        56 02190
        FC=FC                                                           56 02200
        DFC=DFC*FC                                                      56 02210
C  Normalize distribution                                               56 02220
        DO 230 I=1,NY                                                   56 02230
           CY(I)=CY(I)/SUM                                              56 02240
230     CONTINUE                                                        56 02250
C  Normalize covariances and store                                      56 02260
        IF(LCOV .EQ. 1)THEN                                             56 02270
           COVAR(2*NY-1)=CX(NY)                                         56 02280
           COVAR(2*NY)=0.                                               56 02290
           J1=0                                                         56 02300
           DO 300 I=1,NY-1                                              56 02310
              J1=J1+1                                                   56 02320
              COVAR(J1)=CX(I)                                           56 02330
              J1=J1+1                                                   56 02340
              COVAR(J1)=FK(I)                                           56 02350
              DO 280 J=1,NY-1,2                                         56 02360
                 DO 260 K=1,NR                                          56 02370
                    IF(J+1 .EQ. NIN(K))THEN                             56 02380
                       IF((INTT(K) .EQ. 1) .OR. (INTT(K) .EQ. 2))THEN   56 02390
                          COVAR(J1)=COVAR(J1)-(FK(J)+FK(J+1))*0.5*      56 02400
     2                      (CY(J)+CY(J+1))*(CX(J+1)-CX(J))             56 02410
                       ENDIF                                            56 02420
                       IF(INTT(K) .EQ. 5)THEN                           56 02430
                          B=DBLE(ALOG(CY(J+1)/CY(J))/                   56 02440
     2                      ALOG(CX(J+1)/CX(J)))                        56 02450
                          IF(REAL(B) .NE. -1.)THEN                      56 02460
                             COVAR(J1)=COVAR(J1)-(FK(J)+FK(J+1))*       56 02470
     2                         CY(J+1)*(1.-(CX(J)/CX(J+1))**REAL(B))/   56 02480
     3                         (REAL(B)+1.)                             56 02490
                          ELSE                                          56 02500
                             COVAR(J1)=COVAR(J1)-(FK(J)+FK(J+1))*CY(J)* 56 02510
     2                         CX(J)*ALOG(CX(J+1)/CX(J))                56 02520
                          ENDIF                                         56 02530
                       ENDIF                                            56 02540
                    ENDIF                                               56 02550
260              CONTINUE                                               56 02560
280           CONTINUE                                                  56 02570
300        CONTINUE                                                     56 02580
        ENDIF                                                           56 02590
C  Compress ranges                                                      56 02600
350     CONTINUE                                                        56 02610
        IF(NR .EQ. 1)RETURN                                             56 02620
        DO 400 I=2,NR                                                   56 02630
           IF(INTT(I) .EQ. INTT(I-1))THEN                               56 02640
              NIN(I-1)=NIN(I)                                           56 02650
              DO 380 J=I+1,NR                                           56 02660
                 NIN(J-1)=NIN(J)                                        56 02670
                 INTT(J-1)=INTT(J)                                      56 02680
380           CONTINUE                                                  56 02690
              NIN(NR)=0                                                 56 02700
              INTT(NR)=0                                                56 02710
              NR=NR-1                                                   56 02720
              GOTO 350                                                  56 02730
           ENDIF                                                        56 02740
400     CONTINUE                                                        56 02750
        RETURN                                                          56 02760
        END                                                             56 02770
C^^^^^SPECTR                                                            57 00010
C-----                                                                  57 00020
C^^^^^ENDFB                                                             57 00030
C=====                                                                  57 00040
C=====  NNDC On-line Data Base File Preparation                         57 00050
C%%%%%NUDOUT                                                            57 00060
        SUBROUTINE NUDOUT(Z,NTB,NTP,TPI,NTOP,NDK,E,DE,RI,DRI,EX,DEX,    57 00070
     2    KSAVE,IPOST)                                                  57 00080
C                                                                       57 00090
C  Creates file suitable for loading radiation data into the on-line    57 00100
C    database on the VAX11/780 at the NNDC                              57 00110
C                                                                       57 00120
C  Based on the program MEDRED written by C.L. Dunford [SEPT. 1985]     57 00130
C    and subroutine MEDOUT from MEDLST 4(55) [SEPT. 1985].              57 00140
C                                                                       57 00150
      INTEGER Z,NTB,NTP,NTOP,NDK,KSAVE(NTOP),IPOST(NTOP)                57 00160
      REAL TPI,E(NTOP),DE(NTOP),RI(NTOP),DRI(NTOP),EX(NTOP),DEX(NTOP)   57 00170
C                                                                       57 00180
      INTEGER NA,NB,NE,NK1,NG                                           57 00190
      COMMON /COUNTS/ NA,NB,NE,NK1,NG                                   57 00200
C                                                                       57 00210
      INTEGER NOMIT(5),IALLG                                            57 00220
      REAL EOMIT(5),OMIT(5),RIMIN                                       57 00230
      COMMON /OMITS/ EOMIT,OMIT,RIMIN,NOMIT,IALLG                       57 00240
C                                                                       57 00250
      INTEGER INUDAT                                                    57 00260
      COMMON /OUTUNT/INUDAT                                             57 00270
C                                                                       57 00280
      CHARACTER*80 HEAD,LABEL                                           57 00290
      COMMON /HEADS1/  HEAD,LABEL                                       57 00300
C                                                                       57 00310
      INTEGER TYPSTR                                                    57 00320
      EXTERNAL TYPSTR                                                   57 00330
C                                                                       57 00340
        INTEGER I,IBEG,IENDN,IP,J,KS,NHIGH,NLOW                         57 00350
        REAL ANNIH                                                      57 00360
        CHARACTER NUC*5,NUCLID*5,DECAYM*2,HL*18                         57 00370
        CHARACTER*15 RADTYP*2,NUM*3,AUXD*6,ENERGY,TENERG,INTEN*11,      57 00380
     2    DOSE*10                                                       57 00390
C                                                                       57 00400
C  Electron auxillary data                                              57 00410
        CHARACTER*6 ELEC(-2:5)                                          57 00420
        DATA ELEC/'AU L','AU K',' ','CE K','CE L','CE M','CE N+',       57 00430
     2    'CE M+'/                                                      57 00440
C                                                                       57 00450
C  X-ray auxillary data                                                 57 00460
        CHARACTER*6 XRAY(-4:-1)                                         57 00470
        DATA XRAY/'X  L','X  KB','X  KA2','X  KA1'/                     57 00480
C                                                                       57 00490
C  Get nuclide from LABEL                                               57 00500
        IENDN=INDEX(LABEL(2:),' ')+1                                    57 00510
        NUC=LABEL(2:IENDN)                                              57 00520
        DO 100 I=2,3                                                    57 00530
           IF(TYPSTR(NUC(I:I)) .EQ. 2) GOTO 110                         57 00540
100     CONTINUE                                                        57 00550
        NUCLID=NUC                                                      57 00560
        GOTO 120                                                        57 00570
110     CONTINUE                                                        57 00580
        NUCLID=' '                                                      57 00590
        NUCLID(5-I:5)=NUC                                               57 00600
120     CONTINUE                                                        57 00610
C                                                                       57 00620
C  Get decay mode symbol                                                57 00630
        IBEG=IENDN+1                                                    57 00640
        IENDN=INDEX(LABEL(IBEG:),' ')+IBEG-1                            57 00650
        DECAYM=LABEL(IBEG:IENDN)                                        57 00660
C                                                                       57 00670
C  Get half life                                                        57 00680
        IBEG=IENDN+1                                                    57 00690
        IBEG=INDEX(LABEL(IBEG:),'(')+IBEG                               57 00700
        IENDN=INDEX(LABEL(IBEG:),')')+IBEG-2                            57 00710
      IF(IENDN-IBEG .GE. 3)THEN                                         57 00720
         HL=LABEL(IBEG:IENDN)                                           57 00730
      ELSE                                                              57 00740
         HL=' '                                                         57 00750
      ENDIF                                                             57 00760
C                                                                       57 00770
C  Write data set identification                                        57 00780
        WRITE(INUDAT,FMT='(A5,2X,A2,1X,A18)')NUCLID,DECAYM,HL           57 00790
C                                                                       57 00800
C  Get Auger and conversion electron data                               57 00810
        IF(NG+NE .GT. 0)THEN                                            57 00820
           NLOW=1                                                       57 00830
           NHIGH=5*NG+2                                                 57 00840
           DO 200 I=NLOW,NHIGH                                          57 00850
              IF((E(I) .GE. 10.**(-12)) .AND. (RI(I) .GE. RIMIN))THEN   57 00860
                 RADTYP='E '                                            57 00870
                 NUM=' '                                                57 00880
                 AUXD=' '                                               57 00890
C             Augers                                                    57 00900
                 IF(IPOST(I) .LT. 0)THEN                                57 00910
                    AUXD=ELEC(IPOST(I))                                 57 00920
C             Conversion electrons                                      57 00930
                 ELSE                                                   57 00940
                    KS=KSAVE(I)/10                                      57 00950
                    CALL NUMSTR(KS,NUM)                                 57 00960
                    IP=KSAVE(I)-10*KS                                   57 00970
                    AUXD=ELEC(IP)                                       57 00980
                 ENDIF                                                  57 00990
                 CALL NUDCNV(I,E,DE,EX,DEX,RI,DRI,15,6,11,4,            57 01000
     2             ENERGY,TENERG,INTEN,DOSE)                            57 01010
                 CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)  57 01020
              ENDIF                                                     57 01030
200        CONTINUE                                                     57 01040
        ENDIF                                                           57 01050
C  Check for omitted conversion electrons                               57 01060
C       As per CLD and JKT suppress output of omitted radiations (8/6/8657 01070
C       IF(NOMIT(3) .NE. 0 .AND. OMIT(3) .GE. RIMIN)THEN                57 01080
C          ENERGY=' '                                                   57 01090
C          NUM=' '                                                      57 01100
C          RADTYP='E '                                                  57 01110
C          AUXD='CE OMI'                                                57 01120
C          DOSE=' '                                                     57 01130
C          CALL DATOUT(OMIT(3),0,INTEN,11,4)                            57 01140
C          CALL DATOUT(EOMIT(3),0,ENERGY,15,6)                          57 01150
C          X=EOMIT(3)*OMIT(3)                                           57 01160
C          CALL DELVAX(X,OMIT(3),DOSE)                                  57 01170
C          CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)        57 01180
C       ENDIF                                                           57 01190
C                                                                       57 01200
C  Get Alpha data                                                       57 01210
        IF(NA .GT. 0)THEN                                               57 01220
           NLOW=5*NG+3                                                  57 01230
           IF((NG+NE) .EQ. 0)NLOW=1                                     57 01240
           NHIGH=NLOW+NA-1                                              57 01250
           RADTYP='A '                                                  57 01260
           AUXD=' '                                                     57 01270
           J=0                                                          57 01280
           DO 300 I=NLOW,NHIGH                                          57 01290
              IF(RI(I) .GT. RIMIN)THEN                                  57 01300
                 J=J+1                                                  57 01310
                 CALL NUMSTR(J,NUM)                                     57 01320
                 CALL NUDCNV(I,E,DE,EX,DEX,RI,DRI,15,6,11,4,            57 01330
     2             ENERGY,TENERG,INTEN,DOSE)                            57 01340
                 CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)  57 01350
              ENDIF                                                     57 01360
300        CONTINUE                                                     57 01370
        ENDIF                                                           57 01380
C  Check for omitted Alphas                                             57 01390
C       As per CLD and JKT suppress output of omitted radiations (8/6/8657 01400
C       IF(NOMIT(1) .NE. 0 .AND. OMIT(1) .GE. RIMIN)THEN                57 01410
C          ENERGY=' '                                                   57 01420
C          NUM=' '                                                      57 01430
C          RADTYP='A '                                                  57 01440
C          AUXD='OMIT  '                                                57 01450
C          DOSE=' '                                                     57 01460
C          CALL DATOUT(OMIT(1),0,INTEN,11,4)                            57 01470
C          CALL DATOUT(EOMIT(1),0,ENERGY,15,6)                          57 01480
C          X=EOMIT(1)*OMIT(1)                                           57 01490
C          CALL DELVAX(X,OMIT(1),DOSE)                                  57 01500
C          CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)        57 01510
C       ENDIF                                                           57 01520
C                                                                       57 01530
C  Get B- and B+ data                                                   57 01540
        IF ((NG+NE) .GT. 0)THEN                                         57 01550
           NLOW=5*NG+2*NDK+1+NA                                         57 01560
        ELSE                                                            57 01570
           NLOW=1+NA                                                    57 01580
        ENDIF                                                           57 01590
        NHIGH=NLOW-1                                                    57 01600
        IF (NB .GT. 0) THEN                                             57 01610
           RADTYP='B-'                                                  57 01620
           AUXD=' '                                                     57 01630
           IF(NB .EQ. 1)THEN                                            57 01640
             CALL NUDCNV(NLOW,E,DE,EX,DEX,RI,DRI,15,6,11,4,             57 01650
     2         ENERGY,TENERG,INTEN,DOSE)                                57 01660
              IP=1                                                      57 01670
              CALL NUMSTR(IP,NUM)                                       57 01680
              CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)     57 01690
              NHIGH=NLOW                                                57 01700
           ELSE                                                         57 01710
              NHIGH=NLOW+NB-1                                           57 01720
              DO 400 I=NLOW,NHIGH                                       57 01730
                 CALL NUDCNV(I,E,DE,EX,DEX,RI,DRI,15,6,11,4,            57 01740
     2             ENERGY,TENERG,INTEN,DOSE)                            57 01750
                 AUXD=' '                                               57 01760
                 IP=I-NLOW+1                                            57 01770
                 CALL NUMSTR(IP,NUM)                                    57 01780
                 IF(I .EQ. NTB)THEN                                     57 01790
                    NUM=' '                                             57 01800
                    TENERG=' '                                          57 01810
                    AUXD='TOT'                                          57 01820
                 ENDIF                                                  57 01830
                 CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)  57 01840
400           CONTINUE                                                  57 01850
           ENDIF                                                        57 01860
        ENDIF                                                           57 01870
      NLOW=NHIGH+1                                                      57 01880
      IF (NK1 .GT. 0) THEN                                              57 01890
         RADTYP='B+'                                                    57 01900
         AUXD=' '                                                       57 01910
         IF(NK1 .EQ. 1)THEN                                             57 01920
            CALL NUDCNV(NLOW,E,DE,EX,DEX,RI,DRI,15,6,11,4,              57 01930
     2        ENERGY,TENERG,INTEN,DOSE)                                 57 01940
            IP=1                                                        57 01950
            CALL NUMSTR(IP,NUM)                                         57 01960
            CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)       57 01970
            NHIGH=NLOW                                                  57 01980
         ELSE                                                           57 01990
            NHIGH=NLOW+NK1-1                                            57 02000
            DO 450 I=NLOW,NHIGH                                         57 02010
               CALL NUDCNV(I,E,DE,EX,DEX,RI,DRI,15,6,11,4,              57 02020
     2           ENERGY,TENERG,INTEN,DOSE)                              57 02030
               AUXD=' '                                                 57 02040
               IP=I-NLOW+1                                              57 02050
               CALL NUMSTR(IP,NUM)                                      57 02060
               IF(I .EQ. NTP)THEN                                       57 02070
                  NUM=' '                                               57 02080
                  TENERG=' '                                            57 02090
                  AUXD='TOT'                                            57 02100
               ENDIF                                                    57 02110
               CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)    57 02120
450         CONTINUE                                                    57 02130
         ENDIF                                                          57 02140
      ENDIF                                                             57 02150
C  Check for omitted B-'s or B+'s                                       57 02160
C       As per CLD and JKT suppress output of omitted radiations (8/6/8657 02170
C       IF(NOMIT(2) .NE. 0 .AND. OMIT(2) .GE. RIMIN)THEN                57 02180
C          ENERGY=' '                                                   57 02190
C          NUM=' '                                                      57 02200
C          RADTYP='B '                                                  57 02210
C          AUXD='OMIT  '                                                57 02220
C          DOSE=' '                                                     57 02230
C          CALL DATOUT(OMIT(2),0,INTEN,11,4)                            57 02240
C          CALL DATOUT(EOMIT(2),0,ENERGY,15,6)                          57 02250
C          X=EOMIT(2)*OMIT(2)                                           57 02260
C          CALL DELVAX(X,OMIT(2),DOSE)                                  57 02270
C          CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)        57 02280
C       ENDIF                                                           57 02290
C                                                                       57 02300
C  Get Gamma and X-ray data                                             57 02310
        IF((NG+NE) .GT. 0)THEN                                          57 02320
           NLOW=5*NG+NK1+NB+3+NA                                        57 02330
           NHIGH=NLOW+NG+3                                              57 02340
           DO 500 I=NLOW,NHIGH                                          57 02350
              TENERG=' '                                                57 02360
              IF(RI(I) .GT. RIMIN .OR. IALLG .NE. 0)THEN                57 02370
                 NUM=' '                                                57 02380
                 AUXD=' '                                               57 02390
                 RADTYP='G '                                            57 02400
                 J=KSAVE(I)                                             57 02410
                 CALL NUDCNV(I,E,DE,EX,DEX,RI,DRI,15,6,11,4,            57 02420
     2             ENERGY,TENERG,INTEN,DOSE)                            57 02430
                 IF(IPOST(I) .GT. 0)THEN                                57 02440
C                  Gammas                                               57 02450
                    CALL NUMSTR(J,NUM)                                  57 02460
                 ELSE                                                   57 02470
C                  X rays                                               57 02480
                    IF(Z .LT. 20)THEN                                   57 02490
                       ENERGY(9:15)=' '                                 57 02500
                       AUXD='X  K'                                      57 02510
                    ELSE                                                57 02520
                       AUXD=XRAY(IPOST(I))                              57 02530
                    ENDIF                                               57 02540
                 ENDIF                                                  57 02550
                 CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)  57 02560
              ENDIF                                                     57 02570
500        CONTINUE                                                     57 02580
        ENDIF                                                           57 02590
C  Check for omitted Gammas or X rays                                   57 02600
C       As per CLD and JKT suppress output of omitted radiations (8/6/8657 02610
C       IF(NOMIT(4) .GT. 0 .AND. OMIT(4) .GE. RIMIN)THEN                57 02620
C          ENERGY=' '                                                   57 02630
C          NUM=' '                                                      57 02640
C          RADTYP='G '                                                  57 02650
C          AUXD='  OMIT'                                                57 02660
C          DOSE=' '                                                     57 02670
C          CALL DATOUT(OMIT(4),0,INTEN,11,4)                            57 02680
C          CALL DATOUT(EOMIT(4),0,ENERGY,15,6)                          57 02690
C          X=EOMIT(4)*OMIT(4)                                           57 02700
C          CALL DELVAX(X,OMIT(4),DOSE)                                  57 02710
C          CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)        57 02720
C       ENDIF                                                           57 02730
C                                                                       57 02740
C  Get maximum G+- intensity                                            57 02750
        IF(NK1 .GT. 0)THEN                                              57 02760
           ANNIH=2.*TPI                                                 57 02770
           IF(ANNIH .GT. RIMIN)THEN                                     57 02780
              RADTYP='G '                                               57 02790
              AUXD='AN'                                                 57 02800
              NUM=' '                                                   57 02810
              ENERGY= '511.'                                            57 02820
              WRITE(INTEN,'(F6.2,5H   <=)')ANNIH                        57 02830
              TENERG=' '                                                57 02840
              DOSE=' '                                                  57 02850
              CALL VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)     57 02860
           ENDIF                                                        57 02870
        ENDIF                                                           57 02880
C                                                                       57 02890
C  Write blank line to delimit end of data set                          57 02900
        WRITE(INUDAT,FMT='(20(1H ))')                                   57 02910
C                                                                       57 02920
        RETURN                                                          57 02930
        END                                                             57 02940
C                                                                       58 00010
        SUBROUTINE DELVAX(E,RI,DOSE)                                    58 00020
C                                                                       58 00030
C  Dose routine for use with NUDOUT                                     58 00040
C                                                                       58 00050
        REAL E,RI                                                       58 00060
        CHARACTER DOSE*(*)                                              58 00070
C                                                                       58 00080
        REAL DELTA                                                      58 00090
C                                                                       58 00100
        DELTA=E*RI*2.13E-5                                              58 00110
        IF (DELTA .LE. 0.0001) THEN                                     58 00120
           WRITE(DOSE,FMT='(2H 0)')                                     58 00130
           RETURN                                                       58 00140
        ENDIF                                                           58 00150
        IF (DELTA .LT. 0.1) THEN                                        58 00160
           WRITE(DOSE,FMT='(F10.4)')  DELTA                             58 00170
           RETURN                                                       58 00180
        ENDIF                                                           58 00190
        IF(DELTA .LT. 1.0) THEN                                         58 00200
           WRITE (DOSE,FMT='(F9.3)') DELTA                              58 00210
           RETURN                                                       58 00220
        ENDIF                                                           58 00230
        WRITE (DOSE,FMT='(F8.2)') DELTA                                 58 00240
        RETURN                                                          58 00250
        END                                                             58 00260
C                                                                       59 00010
        SUBROUTINE NUDCNV(I,E,DE,EX,DEX,RI,DRI,NE1,NE2,NI1,NI2,         59 00020
     2    ENERGY,TENERG,INTEN,DOSE)                                     59 00030
C                                                                       59 00040
C  Converts data to character format for output to NNDC on-line data    59 00050
C    base                                                               59 00060
C                                                                       59 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************59 00080
C*                           Present Code                               59 00090
C*                           ------------                               59 00100
C*  DELVAX  DATOUT                                                      59 00110
C*                                                                      59 00120
C***********************************************************************59 00130
        INTEGER I,NE1,NE2,NI1,NI2                                       59 00140
        REAL E(I),DE(I),EX(I),DEX(I),RI(I),DRI(I)                       59 00150
        CHARACTER ENERGY*(*),TENERG*(*),INTEN*(*),DOSE*(*)              59 00160
C                                                                       59 00170
        ENERGY=' '                                                      59 00180
        TENERG=' '                                                      59 00190
        INTEN=' '                                                       59 00200
        DOSE=' '                                                        59 00210
        CALL DATOUT(E(I),DE(I),ENERGY,NE1,NE2)                          59 00220
        IF(EX(I) .GT. 0.)CALL DATOUT(EX(I),DEX(I),TENERG,NE1,NE2)       59 00230
        CALL DATOUT(RI(I),DRI(I),INTEN,NI1,NI2)                         59 00240
        CALL DELVAX(E(I),RI(I),DOSE)                                    59 00250
        RETURN                                                          59 00260
        END                                                             59 00270
C                                                                       60 00010
        SUBROUTINE VAXOUT(RADTYP,NUM,AUXD,ENERGY,TENERG,INTEN,DOSE)     60 00020
C                                                                       60 00030
C  Output routine for use with NUDOUT                                   60 00040
C                                                                       60 00050
        CHARACTER RADTYP*(*),NUM*(*),AUXD*(*),ENERGY*(*),TENERG*(*),    60 00060
     2    INTEN*(*),DOSE*(*)                                            60 00070
C                                                                       60 00080
        INTEGER INUDAT                                                  60 00090
        COMMON /OUTUNT/INUDAT                                           60 00100
C                                                                       60 00110
        WRITE(INUDAT,FMT='(A2,1X,A6,A3,2X,A15,1X,A15,1X,A11,2X,A10)')   60 00120
     2    RADTYP,AUXD,NUM,ENERGY,TENERG,INTEN,DOSE                      60 00130
        RETURN                                                          60 00140
        END                                                             60 00150
C^^^^^NUDOUT                                                            61 00010
C=====                                                                  61 00020
C=====  Continua Calculation Routines                                   61 00030
C%%%%%SPECTR                                                            61 00040
        SUBROUTINE BMCONT(NB,IZD,AD,NWARN,BREMS)                        61 00050
C                                                                       61 00060
C  Calculates B- spectra and associated internal Bremsstrahlung         61 00070
C                                                                       61 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************61 00090
C*                           Present Code                               61 00100
C*                           ------------                               61 00110
C*  EQUAL8  FNEW    GRID    QROMB   SETUP   SPECTB  SPECTI  UNSPCT      61 00120
C*  XF      ZERO8                                                       61 00130
C*                                                                      61 00140
C*                        FORTRAN 77 Supplied                           61 00150
C*                        -------------------                           61 00160
C*  SQRT                                                                61 00170
C*                                                                      61 00180
C***********************************************************************61 00190
        INTEGER NB,IZD(NB),NWARN                                        61 00200
        REAL AD(NB)                                                     61 00210
        LOGICAL BREMS                                                   61 00220
C                                                                       61 00230
        INTEGER AM,NGRMAX                                               61 00240
        PARAMETER (AM=99,NGRMAX=30)                                     61 00250
C                                                                       61 00260
        INTEGER IREPT                                                   61 00270
        COMMON /RPTUNT/IREPT                                            61 00280
C                                                                       61 00290
        INTEGER NTB,ITYPM(AM)                                           61 00300
        REAL  BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,   61 00310
     2    DTBI,AVBEX,DAVBX                                              61 00320
        COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX, 61 00330
     2    NTB,ITYPM                                                     61 00340
C                                                                       61 00350
        INTEGER NGRIDM                                                  61 00360
        REAL EBMS(NGRMAX),RIBMS(NGRMAX),DRIBMS(NGRMAX),EBARMS(NGRMAX),  61 00370
     2    DEBRMS(NGRMAX)                                                61 00380
        COMMON /BMSPCT/NGRIDM,EBMS,RIBMS,DRIBMS,EBARMS,DEBRMS           61 00390
C%%%%%BREMST                                                            61 00400
        INTEGER NGRIDI                                                  61 00410
        REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),  61 00420
     2    DEBRIS(NGRMAX)                                                61 00430
        COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS           61 00440
C^^^^^BREMST                                                            61 00450
        REAL EMAX,K,AREA                                                61 00460
        COMMON /MAXENG/EMAX,K,AREA                                      61 00470
C                                                                       61 00480
        INTEGER NF                                                      61 00490
        COMMON /FCOMM/NF                                                61 00500
C                                                                       61 00510
        INTEGER NST                                                     61 00520
        COMMON/STCOMM/NST                                               61 00530
C                                                                       61 00540
        REAL EPSB,EPSF,EPSO,EPSST                                       61 00550
        COMMON/PREC1/EPSB,EPSF                                          61 00560
        COMMON/PREC2/EPSO,EPSST                                         61 00570
C                                                                       61 00580
C  Temporary arrays for B- spectra                                      61 00590
        REAL TEMP(NGRMAX),TEMPP(NGRMAX),TEMPM(NGRMAX),ETEMP(NGRMAX),    61 00600
     2    ETEMPP(NGRMAX),ETEMPM(NGRMAX)                                 61 00610
C                                                                       61 00620
C  Temporary arrays for IB spectra                                      61 00630
        REAL TEMPI(NGRMAX),TEMPIP(NGRMAX),TEMPIM(NGRMAX),ETEMPI(NGRMAX),61 00640
     2    ETMPIP(NGRMAX),ETMPIM(NGRMAX)                                 61 00650
C                                                                       61 00660
        INTEGER I,IB,IE,IZ                                              61 00670
        REAL A,AREAS,DX,DY,E,DE,EAREA,STEP,SUMIB,DSUMIB,SUMIB2,W0,DW0   61 00680
C                                                                       61 00690
        REAL ELMASS,ZL                                                  61 00700
        DATA ELMASS,ZL/0.51099906,1./                                   61 00710
C                                                                       61 00720
        REAL XF,FNEW                                                    61 00730
        EXTERNAL XF,FNEW,QROMB                                          61 00740
C                                                                       61 00750
        REAL SQRT                                                       61 00760
        INTRINSIC SQRT                                                  61 00770
C                                                                       61 00780
C  Zero spectral arrays                                                 61 00790
        IF(NGRIDM .GT. 0)THEN                                           61 00800
           CALL ZERO8(NGRIDM,EBMS)                                      61 00810
           CALL ZERO8(NGRIDM,RIBMS)                                     61 00820
           CALL ZERO8(NGRIDM,DRIBMS)                                    61 00830
           CALL ZERO8(NGRIDM,EBARMS)                                    61 00840
           CALL ZERO8(NGRIDM,DEBRMS)                                    61 00850
           NGRIDM=0                                                     61 00860
        ENDIF                                                           61 00870
C                                                                       61 00880
C  Calculate the grid points                                            61 00890
        E=BME(1)                                                        61 00900
        DE=DBME(1)                                                      61 00910
        DO 100 I=2,NB                                                   61 00920
           IF(BME(I) .GT. E)THEN                                        61 00930
              E=BME(I)                                                  61 00940
              DE=DBME(I)                                                61 00950
           ENDIF                                                        61 00960
100     CONTINUE                                                        61 00970
        STEP=0.002                                                      61 00980
        CALL GRID(E,DE,EBMS,NGRIDM,NGRMAX,STEP)                         61 00990
C                                                                       61 01000
C  Begin calculating spectra                                            61 01010
        SUMIB=0.                                                        61 01020
        DSUMIB=0.                                                       61 01030
        DO 600 IB=1,NB                                                  61 01040
           IF(BMI(IB) .EQ. 0.)GOTO 600                                  61 01050
           WRITE(IREPT,FMT='(10X,4HEB-=,F10.2)') BME(IB)                61 01060
           IZ=-IZD(IB)                                                  61 01070
           A=AD(IB)                                                     61 01080
C  Set precisions desired for integration of B- spectrum                61 01090
           EPSB=1.0E-4                                                  61 01100
           EPSF=EPSB/100.                                               61 01110
C                                                                       61 01120
           W0=(BME(IB)/1000.)/ELMASS+ZL                                 61 01130
           DW0=(DBME(IB)/1000.)/ELMASS                                  61 01140
           IE=ITYPM(IB)                                                 61 01150
           SUMIB=SUMIB+BMI(IB)                                          61 01160
           DSUMIB=DSUMIB+DBMI(IB)*DBMI(IB)                              61 01170
           CALL SETUP(A,IZ,W0,IE)                                       61 01180
           NF=1                                                         61 01190
           CALL QROMB(FNEW,ZL,W0,AREA)                                  61 01200
           AREAS=AREA                                                   61 01210
           CALL QROMB(XF,ZL,W0,EAREA)                                   61 01220
C                                                                       61 01230
C  Check calculation against file                                       61 01240
           EAREA=1000.*(EAREA/AREA-ZL)*ELMASS                           61 01250
           IF(DEVM(IB) .EQ. 0.)DEVM(IB)=0.1*EVM(IB)                     61 01260
           IF(ABS(EAREA-EVM(IB)) .GT. DEVM(IB) .AND. EVM(IB) .GT. 0.)   61 01270
     2        THEN                                                      61 01280
              WRITE(IREPT,*)'     *****WARNING: CALC <EB>=',EAREA,      61 01290
     2          ' DISAGREES WITH ',EVM(IB),' IN FILE'                   61 01300
              NWARN=NWARN+1                                             61 01310
           ENDIF                                                        61 01320
C                                                                       61 01330
C  Get B- spectra                                                       61 01340
           CALL                                                         61 01350
     2       SPECTB(FNEW,XF,QROMB,QROMB,EBMS,TEMP,ETEMP,NGRIDM,         61 01360
     3       BME(IB),ELMASS,ZL,AREA)                                    61 01370
C                                                                       61 01380
C  Get IB spectra                                                       61 01390
           IF(BREMS)THEN                                                61 01400
C    Set precisions desired for integration of IB spectrum              61 01410
C%%%%%BREMST                                                            61 01420
              EPSB=5.0E-3                                               61 01430
              EPSST=EPSB/10.                                            61 01440
              EPSO=EPSST/10.                                            61 01450
              EPSF=EPSO/100.                                            61 01460
C                                                                       61 01470
              CALL SPECTI(W0,NGRIDI,EBIS,TEMPI,ETEMPI)                  61 01480
C^^^^^BREMST                                                            61 01490
           ENDIF                                                        61 01500
C                                                                       61 01510
C  Now estimate uncertainties based on DE of end-point energy           61 01520
           IF(DW0 .NE. 0.)THEN                                          61 01530
              EPSB=1.0E-4                                               61 01540
              EPSF=EPSB/100.                                            61 01550
              CALL SETUP(A,IZ,W0-DW0,IE)                                61 01560
              NF=1                                                      61 01570
              CALL QROMB(FNEW,ZL,W0-DW0,AREA)                           61 01580
              IF(ABS(AREA-AREAS) .GT. EPSB*AREAS)THEN                   61 01590
                 CALL                                                   61 01600
     2             SPECTB(FNEW,XF,QROMB,QROMB,EBMS,TEMPM,ETEMPM,NGRIDM, 61 01610
     3             BME(IB),ELMASS,ZL,AREA)                              61 01620
                 IF(BREMS)THEN                                          61 01630
C%%%%%BREMST                                                            61 01640
                    EPSB=5.0E-3                                         61 01650
                    IF(ABS(AREA-AREAS) .GT. EPSB*AREAS)THEN             61 01660
                       EPSST=EPSB/10.                                   61 01670
                       EPSO=EPSST/10.                                   61 01680
                       EPSF=EPSO/100.                                   61 01690
                       CALL SPECTI(W0-DW0,NGRIDI,EBIS,TEMPIM,ETMPIM)    61 01700
                    ELSE                                                61 01710
                       CALL EQUAL8(NGRIDI,TEMPI,TEMPIM)                 61 01720
                       CALL EQUAL8(NGRIDI,ETEMPI,ETMPIM)                61 01730
                    ENDIF                                               61 01740
C^^^^^BREMST                                                            61 01750
                 ENDIF                                                  61 01760
              ELSE                                                      61 01770
                 CALL EQUAL8(NGRIDM,TEMP,TEMPM)                         61 01780
                 CALL EQUAL8(NGRIDM,ETEMP,ETEMPM)                       61 01790
                 IF(BREMS)THEN                                          61 01800
C%%%%%BREMST                                                            61 01810
                    CALL EQUAL8(NGRIDI,TEMPI,TEMPIM)                    61 01820
                    CALL EQUAL8(NGRIDI,ETEMPI,ETMPIM)                   61 01830
C^^^^^BREMST                                                            61 01840
                 ENDIF                                                  61 01850
              ENDIF                                                     61 01860
C                                                                       61 01870
              EPSB=1.0E-4                                               61 01880
              EPSF=EPSB/100.                                            61 01890
              CALL SETUP(A,IZ,W0+DW0,IE)                                61 01900
              NF=1                                                      61 01910
              CALL QROMB(FNEW,ZL,W0+DW0,AREA)                           61 01920
              IF(ABS(AREA-AREAS) .GT. EPSB*AREAS)THEN                   61 01930
                 CALL                                                   61 01940
     2             SPECTB(FNEW,XF,QROMB,QROMB,EBMS,TEMPP,ETEMPP,NGRIDM, 61 01950
     3             BME(IB),ELMASS,ZL,AREA)                              61 01960
                 IF(BREMS)THEN                                          61 01970
C%%%%%BREMST                                                            61 01980
                    EPSB=5.0E-3                                         61 01990
                    IF(ABS(AREA-AREAS) .GT. EPSB*AREAS)THEN             61 02000
                       EPSST=EPSB/10.                                   61 02010
                       EPSO=EPSST/10.                                   61 02020
                       EPSF=EPSO/100.                                   61 02030
                       CALL SPECTI(W0+DW0,NGRIDI,EBIS,TEMPIP,ETMPIP)    61 02040
                    ELSE                                                61 02050
                       CALL EQUAL8(NGRIDI,TEMPI,TEMPIP)                 61 02060
                       CALL EQUAL8(NGRIDI,ETEMPI,ETMPIP)                61 02070
                    ENDIF                                               61 02080
C^^^^^BREMST                                                            61 02090
                 ENDIF                                                  61 02100
              ELSE                                                      61 02110
                 CALL EQUAL8(NGRIDM,TEMP,TEMPP)                         61 02120
                 CALL EQUAL8(NGRIDM,ETEMP,ETEMPP)                       61 02130
                 IF(BREMS)THEN                                          61 02140
C%%%%%BREMST                                                            61 02150
                    CALL EQUAL8(NGRIDI,TEMPI,TEMPIP)                    61 02160
                    CALL EQUAL8(NGRIDI,ETEMPI,ETMPIP)                   61 02170
C^^^^^BREMST                                                            61 02180
                 ENDIF                                                  61 02190
              ENDIF                                                     61 02200
           ELSE                                                         61 02210
              CALL EQUAL8(NGRIDM,TEMP,TEMPM)                            61 02220
              CALL EQUAL8(NGRIDM,ETEMP,ETEMPM)                          61 02230
              CALL EQUAL8(NGRIDM,TEMP,TEMPP)                            61 02240
              CALL EQUAL8(NGRIDM,ETEMP,ETEMPP)                          61 02250
C                                                                       61 02260
              IF(BREMS)THEN                                             61 02270
C%%%%%BREMST                                                            61 02280
                 CALL EQUAL8(NGRIDI,TEMPI,TEMPIM)                       61 02290
                 CALL EQUAL8(NGRIDI,ETEMPI,ETMPIM)                      61 02300
                 CALL EQUAL8(NGRIDI,TEMPI,TEMPIP)                       61 02310
                 CALL EQUAL8(NGRIDI,ETEMPI,ETMPIP)                      61 02320
C^^^^^BREMST                                                            61 02330
              ENDIF                                                     61 02340
           ENDIF                                                        61 02350
           TEMP(NGRIDM)=0.                                              61 02360
           ETEMP(NGRIDM)=0.                                             61 02370
C                                                                       61 02380
C  Now calculate absolute intensities, average energies, and            61 02390
C    uncertainties                                                      61 02400
           DY=(DBMI(IB)/BMI(IB))**2                                     61 02410
C    B- Spectra                                                         61 02420
           CALL                                                         61 02430
     2       UNSPCT(BMI(IB),DY,NGRIDM,TEMP,TEMPM,TEMPP,                 61 02440
     3       ETEMP,ETEMPM,ETEMPP,RIBMS,DRIBMS,EBARMS,DEBRMS)            61 02450
C    IB Spectra                                                         61 02460
           IF(BREMS)THEN                                                61 02470
C%%%%%BREMST                                                            61 02480
              CALL                                                      61 02490
     2          UNSPCT(BMI(IB),DY,NGRIDI,TEMPI,TEMPIM,TEMPIP,           61 02500
     3          ETEMPI,ETMPIM,ETMPIP,RIBIS,DRIBIS,EBARIS,DEBRIS)        61 02510
C       Add uncertainty due to theory                                   61 02520
              DO 200 I=1,NGRIDI                                         61 02530
                 IF(EBIS(I) .GT. 0.05 .AND. RIBIS(I) .NE. 0.)THEN       61 02540
                    DX=DRIBIS(I)/RIBIS(I)                               61 02550
                    DRIBIS(I)=RIBIS(I)*SQRT(0.01+DX*DX)                 61 02560
                 ENDIF                                                  61 02570
200           CONTINUE                                                  61 02580
C                                                                       61 02590
C       Add uncertainty due to uniqueness                               61 02600
              IF(IE .NE. 0)THEN                                         61 02610
                 DO 300 I=1,NGRIDI                                      61 02620
                    IF(RIBIS(I) .NE. 0.)THEN                            61 02630
                       DX=DRIBIS(I)/RIBIS(I)                            61 02640
                       DRIBIS(I)=RIBIS(I)*SQRT(0.0025+DX*DX)            61 02650
                    ENDIF                                               61 02660
300              CONTINUE                                               61 02670
              ENDIF                                                     61 02680
C^^^^^BREMST                                                            61 02690
           ENDIF                                                        61 02700
C                                                                       61 02710
600     CONTINUE                                                        61 02720
C                                                                       61 02730
C  Now convert spectral energies back to keV and normalize              61 02740
C      average energies for B- to keV/Decay                             61 02750
        SUMIB2=0.                                                       61 02760
        DO 650 I=1,NGRIDM                                               61 02770
           EBMS(I)=1000.*EBMS(I)                                        61 02780
           EBARMS(I)=EBARMS(I)/100.                                     61 02790
           DEBRMS(I)=DEBRMS(I)/100.                                     61 02800
           SUMIB2=SUMIB2+RIBMS(I)                                       61 02810
650     CONTINUE                                                        61 02820
C     Do not convert Internal Bremsstrahlung yet --- more possible calcs61 02830
        IF(DSUMIB .EQ. 0.)DSUMIB=1.E-4*SUMIB*SUMIB                      61 02840
        IF(ABS(SUMIB-SUMIB2) .GT. SQRT(DSUMIB))THEN                     61 02850
           WRITE(IREPT,*)'     *****WARNING: SUM=',SUMIB2,              61 02860
     2          ' DISAGREES WITH ',SUMIB,' FROM FILE'                   61 02870
              NWARN=NWARN+1                                             61 02880
        ENDIF                                                           61 02890
        RETURN                                                          61 02900
        END                                                             61 02910
C                                                                       62 00010
        SUBROUTINE BPCONT(NE,IZD,AD,NWARN,BREMS)                        62 00020
C                                                                       62 00030
C  Calculates B+ spectra and associated internal Bremsstrahlung         62 00040
C                                                                       62 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************62 00060
C*                           Present Code                               62 00070
C*                           ------------                               62 00080
C*  EQUAL8  FNEW    GRID    QROMB   SETUP   SPECTB  SPECTI  UNSPCT      62 00090
C*  XF      ZERO8                                                       62 00100
C*                                                                      62 00110
C*                        FORTRAN 77 Supplied                           62 00120
C*                        -------------------                           62 00130
C*  SQRT                                                                62 00140
C*                                                                      62 00150
C***********************************************************************62 00160
        INTEGER NE,IZD(NE),NWARN                                        62 00170
        REAL AD(NE)                                                     62 00180
        LOGICAL BREMS                                                   62 00190
C                                                                       62 00200
        INTEGER AM,NGRMAX                                               62 00210
        PARAMETER (AM=99,NGRMAX=30)                                     62 00220
C                                                                       62 00230
        INTEGER IREPT                                                   62 00240
        COMMON /RPTUNT/IREPT                                            62 00250
C                                                                       62 00260
        INTEGER NTP,ITYPP(AM),KLASS(AM)                                 62 00270
        REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),    62 00280
     2    EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,   62 00290
     3    DTPI,AVPEX,DAVPX                                              62 00300
        COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,   62 00310
     2    PINT,DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP              62 00320
C                                                                       62 00330
        INTEGER NGRIDM                                                  62 00340
        COMMON /BMSPCT/NGRIDM                                           62 00350
C                                                                       62 00360
        INTEGER NGRIDP                                                  62 00370
        REAL EBPS(NGRMAX),RIBPS(NGRMAX),DRIBPS(NGRMAX),EBARPS(NGRMAX),  62 00380
     2    DEBRPS(NGRMAX)                                                62 00390
        COMMON /BPSPCT/NGRIDP,EBPS,RIBPS,DRIBPS,EBARPS,DEBRPS           62 00400
C%%%%%BREMST                                                            62 00410
        INTEGER NGRIDI                                                  62 00420
        REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),  62 00430
     2    DEBRIS(NGRMAX)                                                62 00440
        COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS           62 00450
C^^^^^BREMST                                                            62 00460
        REAL X,X1,X2                                                    62 00470
        COMMON /PHENER/X,X1,X2                                          62 00480
C                                                                       62 00490
        INTEGER NF                                                      62 00500
        COMMON /FCOMM/NF                                                62 00510
C                                                                       62 00520
        REAL EPSB,EPSF,EPSO,EPSST                                       62 00530
        COMMON/PREC1/EPSB,EPSF                                          62 00540
        COMMON/PREC2/EPSO,EPSST                                         62 00550
C                                                                       62 00560
C  Temporary arrays for B+ spectra                                      62 00570
        REAL TEMP(NGRMAX),TEMPP(NGRMAX),TEMPM(NGRMAX),ETEMP(NGRMAX),    62 00580
     2    ETEMPP(NGRMAX),ETEMPM(NGRMAX)                                 62 00590
C                                                                       62 00600
C  Temporary arrays for IB spectra                                      62 00610
        REAL TEMPI(NGRMAX),TEMPIP(NGRMAX),TEMPIM(NGRMAX),ETEMPI(NGRMAX),62 00620
     2    ETMPIP(NGRMAX),ETMPIM(NGRMAX)                                 62 00630
C                                                                       62 00640
        INTEGER I,IB,IE,IZ                                              62 00650
        REAL A,AREA,AREAS,DE,DX,DY,E,EAREA,STEP,SUMIB,DSUMIB,SUMIB2,    62 00660
     2    W0,DW0                                                        62 00670
C                                                                       62 00680
        REAL ELMASS,ZL                                                  62 00690
        DATA ELMASS,ZL/0.51099906,1./                                   62 00700
C                                                                       62 00710
        REAL FNEW,XF                                                    62 00720
        EXTERNAL FNEW,XF,QROMB                                          62 00730
C                                                                       62 00740
        REAL SQRT                                                       62 00750
        INTRINSIC SQRT                                                  62 00760
C                                                                       62 00770
C  Zero spectral arrays                                                 62 00780
        IF(NGRIDP .GT. 0)THEN                                           62 00790
           CALL ZERO8(NGRIDP,EBPS)                                      62 00800
           CALL ZERO8(NGRIDP,RIBPS)                                     62 00810
           CALL ZERO8(NGRIDP,DRIBPS)                                    62 00820
           CALL ZERO8(NGRIDP,EBARPS)                                    62 00830
           CALL ZERO8(NGRIDP,DEBRPS)                                    62 00840
        NGRIDP=0                                                        62 00850
        ENDIF                                                           62 00860
C                                                                       62 00870
C  Calculate the grid points                                            62 00880
        E=EBP(1)                                                        62 00890
        DE=DEBP(1)                                                      62 00900
        DO 100 I=2,NE                                                   62 00910
           IF(EBP(I) .GT. E)THEN                                        62 00920
              E=EBP(I)                                                  62 00930
              DE=DEBP(I)                                                62 00940
           ENDIF                                                        62 00950
100     CONTINUE                                                        62 00960
        STEP=0.002                                                      62 00970
        CALL GRID(E,DE,EBPS,NGRIDP,NGRMAX,STEP)                         62 00980
C                                                                       62 00990
C  Begin calculating spectra                                            62 01000
        SUMIB=0.                                                        62 01010
        DSUMIB=0.                                                       62 01020
C                                                                       62 01030
        DO 600 IB=1,NE                                                  62 01040
           IF(PINT(IB) .EQ. 0. .OR. KLASS(IB) .NE. 1)GOTO 600           62 01050
           WRITE(IREPT,FMT='(10X,4HEB+=,F10.2)') EBP(IB)                62 01060
           IZ=IZD(IB)                                                   62 01070
           A=AD(IB)                                                     62 01080
           W0=(EBP(IB)/1000.)/ELMASS+ZL                                 62 01090
           DW0=(DEBP(IB)/1000.)/ELMASS                                  62 01100
           IE=ITYPP(IB)                                                 62 01110
           SUMIB=SUMIB+PINT(IB)                                         62 01120
           DSUMIB=DSUMIB+DPINT(IB)*DPINT(IB)                            62 01130
           CALL SETUP(A,IZ,W0,IE)                                       62 01140
           NF=1                                                         62 01150
C    Set precisions desired for integration on B+ spectra               62 01160
           EPSB=1.0E-4                                                  62 01170
           EPSF=EPSB/100.                                               62 01180
C                                                                       62 01190
           CALL QROMB(FNEW,ZL,W0,AREA)                                  62 01200
           AREAS=AREA                                                   62 01210
           CALL QROMB(XF,ZL,W0,EAREA)                                   62 01220
C                                                                       62 01230
C    Check calculation against file                                     62 01240
           EAREA=1000.*(EAREA/AREA-ZL)*ELMASS                           62 01250
           IF(DEVP(IB) .EQ. 0.)DEVP(IB)=0.1*EVP(IB)                     62 01260
           IF(ABS(EAREA-EVP(IB)) .GT. DEVP(IB) .AND. EVP(IB) .GT. 0.)   62 01270
     2       THEN                                                       62 01280
              WRITE(IREPT,*)'     *****WARNING: CALC <EB>=',EAREA,      62 01290
     2          ' DISAGREES WITH ',EVP(IB),' IN FILE'                   62 01300
              NWARN=NWARN+1                                             62 01310
           ENDIF                                                        62 01320
C                                                                       62 01330
C    Get B+ spectra                                                     62 01340
           CALL                                                         62 01350
     2       SPECTB(FNEW,XF,QROMB,QROMB,EBPS,TEMP,ETEMP,NGRIDP,         62 01360
     3       EBP(IB),ELMASS,ZL,AREA)                                    62 01370
C                                                                       62 01380
C    Get IB spectra                                                     62 01390
           IF(BREMS)THEN                                                62 01400
C      Set precisions desired for integration of IB spectrum            62 01410
C%%%%%BREMST                                                            62 01420
              EPSB=5.0E-3                                               62 01430
              EPSST=EPSB/10.                                            62 01440
              EPSO=EPSST/10.                                            62 01450
              EPSF=EPSO/100.                                            62 01460
              CALL SPECTI(W0,NGRIDI,EBIS,TEMPI,ETEMPI)                  62 01470
C^^^^^BREMST                                                            62 01480
           ENDIF                                                        62 01490
C                                                                       62 01500
C                                                                       62 01510
C    Now estimate uncertainties based on DE of end-point energy         62 01520
           IF(DW0 .NE. 0.)THEN                                          62 01530
              CALL SETUP(A,IZ,W0-DW0,IE)                                62 01540
              NF=1                                                      62 01550
              EPSB=1.0E-4                                               62 01560
              EPSF=EPSB/100.                                            62 01570
              CALL QROMB(FNEW,ZL,W0-DW0,AREA)                           62 01580
              IF(ABS(AREA-AREAS) .GT. EPSB*AREA)THEN                    62 01590
                 CALL                                                   62 01600
     2             SPECTB(FNEW,XF,QROMB,QROMB,EBPS,TEMPM,ETEMPM,NGRIDP, 62 01610
     3             EBP(IB),ELMASS,ZL,AREA)                              62 01620
                 IF(BREMS)THEN                                          62 01630
C%%%%%BREMST                                                            62 01640
                    EPSB=5.0E-3                                         62 01650
                    IF(ABS(AREA-AREAS) .GT. EPSB*AREA)THEN              62 01660
                       EPSST=EPSB/10.                                   62 01670
                       EPSO=EPSST/10.                                   62 01680
                       EPSF=EPSO/100.                                   62 01690
                       CALL SPECTI(W0-DW0,NGRIDI,EBIS,TEMPIM,ETMPIM)    62 01700
                    ELSE                                                62 01710
                       CALL EQUAL8(NGRIDI,TEMPI,TEMPIM)                 62 01720
                       CALL EQUAL8(NGRIDI,ETEMPI,ETMPIM)                62 01730
                    ENDIF                                               62 01740
C^^^^^BREMST                                                            62 01750
                 ENDIF                                                  62 01760
              ELSE                                                      62 01770
                 CALL EQUAL8(NGRIDP,TEMP,TEMPM)                         62 01780
                 CALL EQUAL8(NGRIDP,ETEMP,ETEMPM)                       62 01790
                 IF(BREMS)THEN                                          62 01800
C%%%%%BREMST                                                            62 01810
                    CALL EQUAL8(NGRIDI,TEMPI,TEMPIM)                    62 01820
                    CALL EQUAL8(NGRIDI,ETEMPI,ETMPIM)                   62 01830
C^^^^^BREMST                                                            62 01840
                 ENDIF                                                  62 01850
              ENDIF                                                     62 01860
C                                                                       62 01870
              CALL SETUP(A,IZ,W0+DW0,IE)                                62 01880
              NF=1                                                      62 01890
              CALL QROMB(FNEW,ZL,W0+DW0,AREA)                           62 01900
              EPSB=1.0E-4                                               62 01910
              EPSF=EPSB/100.                                            62 01920
              IF(ABS(AREA-AREAS) .GT. EPSB*AREAS)THEN                   62 01930
                 CALL                                                   62 01940
     2             SPECTB(FNEW,XF,QROMB,QROMB,EBPS,TEMPP,ETEMPP,NGRIDP, 62 01950
     3             EBP(IB),ELMASS,ZL,AREA)                              62 01960
                 IF(BREMS)THEN                                          62 01970
C%%%%%BREMST                                                            62 01980
                    EPSB=5.0E-3                                         62 01990
                    IF(ABS(AREA-AREAS) .GT. EPSB*AREA)THEN              62 02000
                       EPSST=EPSB/10.                                   62 02010
                       EPSO=EPSST/10.                                   62 02020
                       EPSF=EPSO/100.                                   62 02030
                       CALL SPECTI(W0+DW0,NGRIDI,EBIS,TEMPIP,ETMPIP)    62 02040
                    ELSE                                                62 02050
                       CALL EQUAL8(NGRIDI,TEMPI,TEMPIP)                 62 02060
                       CALL EQUAL8(NGRIDI,ETEMPI,ETMPIP)                62 02070
                    ENDIF                                               62 02080
C^^^^^BREMST                                                            62 02090
                 ENDIF                                                  62 02100
              ELSE                                                      62 02110
                 CALL EQUAL8(NGRIDP,TEMP,TEMPP)                         62 02120
                 CALL EQUAL8(NGRIDP,ETEMP,ETEMPP)                       62 02130
                 IF(BREMS)THEN                                          62 02140
C%%%%%BREMST                                                            62 02150
                    CALL EQUAL8(NGRIDI,TEMPI,TEMPIP)                    62 02160
                    CALL EQUAL8(NGRIDI,ETEMPI,ETMPIP)                   62 02170
C^^^^^BREMST                                                            62 02180
                 ENDIF                                                  62 02190
              ENDIF                                                     62 02200
           ELSE                                                         62 02210
              CALL EQUAL8(NGRIDP,TEMP,TEMPM)                            62 02220
              CALL EQUAL8(NGRIDP,ETEMP,ETEMPM)                          62 02230
              CALL EQUAL8(NGRIDP,TEMP,TEMPP)                            62 02240
              CALL EQUAL8(NGRIDP,ETEMP,ETEMPP)                          62 02250
           ENDIF                                                        62 02260
C                                                                       62 02270
C  Now calculate absolute intensities, average energies, and            62 02280
C    uncertainties                                                      62 02290
           DY=(DPINT(IB)*DPINT(IB))/(PINT(IB)*PINT(IB))                 62 02300
C    B+ Spectra                                                         62 02310
           CALL                                                         62 02320
     2       UNSPCT(PINT(IB),DY,NGRIDP,TEMP,TEMPM,TEMPP,                62 02330
     3       ETEMP,ETEMPM,ETEMPP,RIBPS,DRIBPS,EBARPS,DEBRPS)            62 02340
C    IB Spectra                                                         62 02350
           IF(BREMS)THEN                                                62 02360
C%%%%%BREMST                                                            62 02370
              CALL                                                      62 02380
     2          UNSPCT(PINT(IB),DY,NGRIDI,TEMPI,TEMPIM,TEMPIP,          62 02390
     3          ETEMPI,ETMPIM,ETMPIP,RIBIS,DRIBIS,EBARIS,DEBRIS)        62 02400
C       Add uncertainty due to theory                                   62 02410
              DO 200 I=1,NGRIDI                                         62 02420
                 IF(EBIS(I) .GT. 0.05 .AND. RIBIS(I) .NE. 0.)THEN       62 02430
                    DX=DRIBIS(I)/RIBIS(I)                               62 02440
                    DRIBIS(I)=RIBIS(I)*SQRT(0.01+DX*DX)                 62 02450
                 ENDIF                                                  62 02460
200           CONTINUE                                                  62 02470
C                                                                       62 02480
C       Add uncertainty due to uniqueness                               62 02490
              IF(IE .NE. 0)THEN                                         62 02500
                 DO 300 I=1,NGRIDI                                      62 02510
                    IF(RIBIS(I) .NE. 0.)THEN                            62 02520
                       DX=DRIBIS(I)/RIBIS(I)                            62 02530
                       DRIBIS(I)=RIBIS(I)*SQRT(0.0025+DX*DX)            62 02540
                    ENDIF                                               62 02550
300              CONTINUE                                               62 02560
              ENDIF                                                     62 02570
C^^^^^BREMST                                                            62 02580
           ENDIF                                                        62 02590
600     CONTINUE                                                        62 02600
C  Now convert spectral energies back to keV and normalize              62 02610
C    average energies for B+ to keV/Decay                               62 02620
        SUMIB2=0.                                                       62 02630
        DO 650 I=1,NGRIDP                                               62 02640
           EBPS(I)=1000.*EBPS(I)                                        62 02650
           EBARPS(I)=EBARPS(I)/100.                                     62 02660
           DEBRPS(I)=DEBRPS(I)/100.                                     62 02670
           SUMIB2=SUMIB2+RIBPS(I)                                       62 02680
650     CONTINUE                                                        62 02690
        IF(DSUMIB .EQ. 0.)DSUMIB=1.E-4*SUMIB*SUMIB                      62 02700
        IF(ABS(SUMIB-SUMIB2) .GT. SQRT(DSUMIB))THEN                     62 02710
           WRITE(IREPT,*)'     *****WARNING: SUM=',SUMIB2,              62 02720
     2          ' DISAGREES WITH ',SUMIB,' FROM FILE'                   62 02730
           NWARN=NWARN+1                                                62 02740
        ENDIF                                                           62 02750
C  Do not convert Internal Bremsstrahung --- more possible further calcs62 02760
        RETURN                                                          62 02770
        END                                                             62 02780
C                                                                       63 00010
      REAL FUNCTION F(W)                                                63 00020
C                                                                       63 00030
C  Fermi function used in calculating B+- spectra and associated        63 00040
C    internal Bremsstrahlung.  Taken from LOGFT 6(1) [ 6-AUG-86] and    63 00050
C    modified to be more consistent with F77 procedures                 63 00060
C                                                                       63 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************63 00080
C*                           Present Code                               63 00090
C*                           ------------                               63 00100
C*  GAMMA                                                               63 00110
C*                           NSDMTH  1(00)                              63 00120
C*                           -------------                              63 00130
C*  HYPERG                                                              63 00140
C*                                                                      63 00150
C*                        FORTRAN 77 Supplied                           63 00160
C*                        -------------------                           63 00170
C*  CEXP    CSQRT   EXP     SQRT                                        63 00180
C*                                                                      63 00190
C***********************************************************************63 00200
      REAL W                                                            63 00210
C                                                                       63 00220
      REAL APOW, BPOW, CALPHA, CM50A, CM50B,                            63 00230
     1    CM80A, CM80B, CM80C, COL2U, CON2U, CONLU, CONU, FRLOW, FRONT, 63 00240
     2    G1, G1P1, G2, G2P1, G3, G3P1, R, TWOG, TWOG2, TWOG3, TWOR, V, 63 00250
     3    W0                                                            63 00260
      COMPLEX BQ, BQU                                                   63 00270
      INTEGER IE, IFIN, IZ                                              63 00280
      COMMON /FCOM/ APOW, BPOW, BQ, BQU, CALPHA, CM50A, CM50B, CM80A,   63 00290
     1    CM80B, CM80C, COL2U, CON2U, CONLU, CONU, FRLOW, FRONT, G1,    63 00300
     2    G1P1, G2, G2P1, G3, G3P1, R, TWOG, TWOG2,                     63 00310
     3    TWOG3, TWOR, V, W0, IE, IFIN, IZ                              63 00320
C                                                                       63 00330
      REAL B, BA, F1U, F2U,                                             63 00340
     1    GI, GR, P, PI, PSQ, TWORP,                                    63 00350
     2    W0MW, W0MWSQ, X, XSQ, Y, YOW                                  63 00360
      COMPLEX AQ, B1C, B2C, F1C, G1C, G1Y, G2Y, HGF, HYPERG, QC, XQ     63 00370
      DATA PI/3.14 159 265 359/                                         63 00380
C                                                                       63 00390
      REAL EXP,SQRT                                                     63 00400
      COMPLEX CEXP,CMPLX,CSQRT                                          63 00410
      INTRINSIC CEXP,CMPLX,CSQRT,EXP,SQRT                               63 00420
C                                                                       63 00430
C  Neutrino energy is not screened, so calculate it first.              63 00440
      W0MW = W0 - W                                                     63 00450
C  At BETA endpoint function is zero.                                   63 00460
      IF (W0MW .LE. 0.)THEN                                             63 00470
         F = 0.                                                         63 00480
         RETURN                                                         63 00490
      ENDIF                                                             63 00500
      W0MWSQ = W0MW * W0MW                                              63 00510
C  For B-, we simply shift the energy down by V.                        63 00520
      IF (IZ .LE. 0)THEN                                                63 00530
         X = W - V                                                      63 00540
C  For low-E B-, we use a power series approximation.                   63 00550
         IF (X .LE. 1.0001)THEN                                         63 00560
            F = FRLOW * X                                               63 00570
            GOTO 50                                                     63 00580
         ENDIF                                                          63 00590
      ELSE                                                              63 00600
C  For very low-E B+, value is too small to contribute to integral.     63 00610
         IF (W .LT. 1.001)THEN                                          63 00620
            F=0.                                                        63 00630
            RETURN                                                      63 00640
         ENDIF                                                          63 00650
C  B+ screening.                                                        63 00660
         PSQ = W * W - 1.                                               63 00670
         P = SQRT(PSQ)                                                  63 00680
         X = W + V * EXP(APOW / P + BPOW / PSQ)                         63 00690
      ENDIF                                                             63 00700
C-CALCULATE SCREENED MOMENTUM.                                          63 00710
      XSQ = X * X                                                       63 00720
      PSQ = XSQ - 1.                                                    63 00730
      P = SQRT(PSQ)                                                     63 00740
      Y = X * CALPHA / P                                                63 00750
C  The GAMMA function code we use is not recommended above 10.          63 00760
C    So go back to the low E approximation.                             63 00770
      IF (Y .GT. 10.)THEN                                               63 00780
         IF (IZ .GT. 0)THEN                                             63 00790
            F=0.                                                        63 00800
            RETURN                                                      63 00810
         ENDIF                                                          63 00820
         F=FRLOW*X                                                      63 00830
         GOTO 50                                                        63 00840
      ENDIF                                                             63 00850
C  Y must have negative sign for positrons.                             63 00860
      IF (IZ .GT. 0) Y = -Y                                             63 00870
C  Begin calculation of electron wave function.                         63 00880
C    Call for complex gamma function.                                   63 00890
      CALL GAMMA(G1, Y, GR, GI)                                         63 00900
      BA = EXP(PI * Y) / P                                              63 00910
C  B is that portion of the integrand common to both F and G parts      63 00920
C   of the wave function.                                               63 00930
      TWORP = TWOR * P                                                  63 00940
      B = (TWORP ** TWOG) * BA * (GR * GR + GI * GI)                    63 00950
C  Call for Hypergeometric function.                                    63 00960
      XQ = CMPLX(0., TWORP)                                             63 00970
      AQ = CMPLX(G1P1, Y)                                               63 00980
      HGF = HYPERG(AQ, BQ, XQ)                                          63 00990
      YOW = Y / X                                                       63 01000
      QC = CEXP(CMPLX(0., -P * R))                                      63 01010
      G1Y = CMPLX(G1, Y)                                                63 01020
      B1C = QC * G1Y * HGF                                              63 01030
      F1C = B1C * CSQRT(CMPLX(-1., YOW) / G1Y)                          63 01040
      G1C = B1C * CSQRT(CMPLX(1., YOW) / G1Y)                           63 01050
      F = B * ((X - 1.) * AIMAG(F1C) * AIMAG(F1C) +                     63 01060
     1    (X + 1.) * REAL(G1C) * REAL(G1C))                             63 01070
   50 F = F * W0MWSQ                                                    63 01080
C  Correction for finite nuclear size effect.                           63 01090
      IF (IFIN .LT. 0) F = F * (CM50A + X * CM50B)                      63 01100
      IF (IFIN .GT. 0) F = F * (1. + CM80A*X + CM80B/X + CM80C/XSQ)     63 01110
      F = F * FRONT                                                     63 01120
C  For allowed transitions we are finished here.                        63 01130
      IF (IE .LT. 1)RETURN                                              63 01140
C  First forbidden unique.                                              63 01150
C    Check for low-E FFU BETA -.                                        63 01160
      IF ((X .LE. 1.0001) .OR. (Y .GT. 10.))THEN                        63 01170
         F1U = CONLU * X                                                63 01180
      ELSE                                                              63 01190
         CALL GAMMA(G2, Y, GR, GI)                                      63 01200
         B = (TWORP ** TWOG2) * BA * (GR * GR + GI * GI)                63 01210
         AQ = CMPLX(G2P1, Y)                                            63 01220
         HGF = HYPERG(AQ, BQU, XQ)                                      63 01230
         G2Y = CMPLX(G2, Y)                                             63 01240
         B2C = QC * G2Y * HGF                                           63 01250
         F1C = B2C * CSQRT(CMPLX(-2., YOW) / G2Y)                       63 01260
         G1C = B2C * CSQRT(CMPLX(2., YOW) / G2Y)                        63 01270
         F1U = CONU * B * ((X - 1.) * AIMAG(F1C) * AIMAG(F1C) +         63 01280
     1     (X + 1.) * REAL(G1C) * REAL(G1C))                            63 01290
      ENDIF                                                             63 01300
      F = W0MWSQ * (F + F1U)                                            63 01310
      IF (IE .LE. 1)RETURN                                              63 01320
C  Second forbidden unique.                                             63 01330
      IF ((X .LE. 1.0001) .OR. (Y .GT. 10.))THEN                        63 01340
         F2U = COL2U * X                                                63 01350
      ELSE                                                              63 01360
         CALL GAMMA(G3, Y, GR, GI)                                      63 01370
         B = (TWORP ** TWOG3) * BA * (GR * GR + GI * GI)                63 01380
         AQ = CMPLX(G3P1, Y)                                            63 01390
         HGF = HYPERG(AQ, BQU, XQ)                                      63 01400
         G2Y = CMPLX(G3, Y)                                             63 01410
         B2C = QC * G2Y * HGF                                           63 01420
         F1C = B2C * CSQRT(CMPLX(-3., YOW) / G2Y)                       63 01430
         G1C = B2C * CSQRT(CMPLX(3., YOW) / G2Y)                        63 01440
         F2U = CON2U * B * ((X - 1.) * AIMAG(F1C) * AIMAG(F1C) +        63 01450
     1     (X + 1.) * REAL(G1C) * REAL(G1C))                            63 01460
      ENDIF                                                             63 01470
      F = W0MWSQ * (F + F2U)                                            63 01480
      RETURN                                                            63 01490
      END                                                               63 01500
C                                                                       64 00010
        REAL FUNCTION FNEW(X)                                           64 00020
C                                                                       64 00030
C  Short form of the Fermi function used for B+- and associated IB.     64 00040
C    This function attempts to obtain the Fermi function by polynomial  64 00050
C    interpolation.  If the interpolation is not successful, the value  64 00060
C    is obtained from FUNCTION F and stored in FSAV for later           64 00070
C    interpolations.  The parameter N should be reset to 1 with         64 00080
C    each call to SETUP.                                                64 00090
C                                                                       64 00100
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************64 00110
C*                           Present Code                               64 00120
C*                           ------------                               64 00130
C*  F       LOCATE  POLINT                                              64 00140
C*                                                                      64 00150
C*                        FORTRAN 77 Supplied                           64 00160
C*                        -------------------                           64 00170
C*  ABS                                                                 64 00180
C*                                                                      64 00190
C***********************************************************************64 00200
        REAL X                                                          64 00210
C                                                                       64 00220
        INTEGER NSAV,NSET,NSTEPM                                        64 00230
        PARAMETER (NSAV=200,NSET=3,NSTEPM=6)                            64 00240
C                                                                       64 00250
        REAL F                                                          64 00260
        EXTERNAL F                                                      64 00270
C                                                                       64 00280
        REAL DUM,EPREC                                                  64 00290
        COMMON/PREC1/DUM,EPREC                                          64 00300
C                                                                       64 00310
        INTEGER N                                                       64 00320
        COMMON /FCOMM/N                                                 64 00330
C                                                                       64 00340
        INTEGER I,J,LOWER,NSTEP                                         64 00350
        REAL DY,TEMP1,TEMP2,Y,ESAV(NSAV),FSAV(NSAV)                     64 00360
C                                                                       64 00370
        IF(N .GE. NSET .AND. X .LE. ESAV(N-1))THEN                      64 00380
           CALL LOCATE(ESAV,N-1,X,LOWER)                                64 00390
           IF(LOWER .EQ. 0)THEN                                         64 00400
              IF(ABS(X-ESAV(1)) .LT. 0.000001)THEN                      64 00410
                 FNEW=FSAV(1)                                           64 00420
                 RETURN                                                 64 00430
              ENDIF                                                     64 00440
           ENDIF                                                        64 00450
           IF(LOWER .NE. 0)THEN                                         64 00460
              IF(ABS(X-ESAV(LOWER)) .LT. 0.000001)THEN                  64 00470
                 FNEW=FSAV(LOWER)                                       64 00480
                 RETURN                                                 64 00490
              ENDIF                                                     64 00500
              IF(ABS(X-ESAV(LOWER+1)) .LT. 0.000001)THEN                64 00510
                 FNEW=FSAV(LOWER+1)                                     64 00520
                 RETURN                                                 64 00530
              ENDIF                                                     64 00540
              NSTEP=MIN0(N-1,NSTEPM)                                    64 00550
              IF(LOWER .GT. N-1-NSTEP)THEN                              64 00560
                 LOWER=N-1-NSTEP                                        64 00570
              ELSE                                                      64 00580
                 LOWER=LOWER-NSTEP/2                                    64 00590
              ENDIF                                                     64 00600
              IF(LOWER .GE. 1)THEN                                      64 00610
                 NSTEP=MIN0(N-1-LOWER,NSTEPM)                           64 00620
                 CALL POLINT(ESAV(LOWER),FSAV(LOWER),NSTEP,X,Y,DY)      64 00630
                 IF(ABS(DY) .LE. EPREC*ABS(Y))THEN                      64 00640
                    FNEW=Y                                              64 00650
                    RETURN                                              64 00660
                 ENDIF                                                  64 00670
              ENDIF                                                     64 00680
           ENDIF                                                        64 00690
        ENDIF                                                           64 00700
        FNEW=F(X)                                                       64 00710
        IF(N .GT. NSAV)RETURN                                           64 00720
        ESAV(N)=X                                                       64 00730
        FSAV(N)=FNEW                                                    64 00740
        IF(N .GT. 1)THEN                                                64 00750
           DO 200 I=1,N-1                                               64 00760
              DO 100 J=I+1,N                                            64 00770
                 IF(ESAV(I) .GT. ESAV(J))THEN                           64 00780
                    TEMP1=ESAV(J)                                       64 00790
                    TEMP2=FSAV(J)                                       64 00800
                    ESAV(J)=ESAV(I)                                     64 00810
                    FSAV(J)=FSAV(I)                                     64 00820
                    ESAV(I)=TEMP1                                       64 00830
                    FSAV(I)=TEMP2                                       64 00840
                 ENDIF                                                  64 00850
100           CONTINUE                                                  64 00860
200        CONTINUE                                                     64 00870
        ENDIF                                                           64 00880
        N=N+1                                                           64 00890
        RETURN                                                          64 00900
        END                                                             64 00910
C                                                                       65 00010
      SUBROUTINE GAMMA(XR,XI,ZR,ZI)                                     65 00020
C                                                                       65 00030
C    Taken from LOGFT 6(1) [ 6-AUG-86]                                  65 00040
C                                                                       65 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************65 00060
C*                           NSDMTH  1(00)                              65 00070
C*                           -------------                              65 00080
C*  GAMA                                                                65 00090
C*                                                                      65 00100
C*                        FORTRAN 77 Supplied                           65 00110
C*                        -------------------                           65 00120
C*  AIMAG   CMPLX   REAL                                                65 00130
C*                                                                      65 00140
C***********************************************************************65 00150
      REAL XR,XI,ZR,ZI                                                  65 00160
C                                                                       65 00170
      COMPLEX X,Z,GAMA                                                  65 00180
      EXTERNAL GAMA                                                     65 00190
C                                                                       65 00200
      REAL REAL,AIMAG                                                   65 00210
      COMPLEX CMPLX                                                     65 00220
      INTRINSIC AIMAG,CMPLX,REAL                                        65 00230
C                                                                       65 00240
      X=CMPLX(XR,XI)                                                    65 00250
      Z=GAMA(X)                                                         65 00260
      ZR=REAL(Z)                                                        65 00270
      ZI=AIMAG(Z)                                                       65 00280
      RETURN                                                            65 00290
      END                                                               65 00300
C                                                                       66 00010
        SUBROUTINE GRID(E,DE,EGRID,NGRID,NGRMAX,STEP1)                  66 00020
C                                                                       66 00030
C  Sets up the grids for B+- spectral calculations                      66 00040
C                                                                       66 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************66 00060
C*                        FORTRAN 77 Supplied                           66 00070
C*                        -------------------                           66 00080
C*  ABS                                                                 66 00090
C*                                                                      66 00100
C***********************************************************************66 00110
        INTEGER NGRID,NGRMAX                                            66 00120
        REAL E,DE,EGRID(*),STEP1                                        66 00130
C                                                                       66 00140
        INTEGER I,J                                                     66 00150
        REAL X,STEP2,STEP,TIM                                           66 00160
C                                                                       66 00170
        REAL ABS                                                        66 00180
        INTRINSIC ABS                                                   66 00190
C                                                                       66 00200
        X=(E+DE)/1000.                                                  66 00210
100     STEP2=STEP1                                                     66 00220
        STEP=STEP1                                                      66 00230
        NGRID=2                                                         66 00240
120     CONTINUE                                                        66 00250
        DO 140 I=1,5                                                    66 00260
           TIM=REAL(I)                                                  66 00270
           EGRID(NGRID)=TIM*STEP                                        66 00280
           IF(EGRID(NGRID) .GE. X)THEN                                  66 00290
C    Check to make sure we are not being imprecise near end point       66 00300
              IF(ABS(EGRID(NGRID)-X) .LE. 0.5*STEP)THEN                 66 00310
                 NGRID=NGRID-2                                          66 00320
                 DO 130 J=1,100                                         66 00330
                    EGRID(NGRID+1)=EGRID(NGRID)+STEP2                   66 00340
                    IF(EGRID(NGRID+1) .GE. X)THEN                       66 00350
                        IF(NGRID .GE. NGRMAX)THEN                       66 00360
                           STEP1=10.*STEP1                              66 00370
                           GOTO 100                                     66 00380
                        ENDIF                                           66 00390
                        EGRID(NGRID+1)=X                                66 00400
                        NGRID=NGRID+1                                   66 00410
                        RETURN                                          66 00420
                    ENDIF                                               66 00430
                    NGRID=NGRID+1                                       66 00440
130              CONTINUE                                               66 00450
              ELSE                                                      66 00460
                 EGRID(NGRID)=X                                         66 00470
                 RETURN                                                 66 00480
              ENDIF                                                     66 00490
           ELSE                                                         66 00500
              NGRID=NGRID+1                                             66 00510
              IF(NGRID .GT. NGRMAX)THEN                                 66 00520
                 STEP1=10.*STEP1                                        66 00530
                 GOTO 100                                               66 00540
              ENDIF                                                     66 00550
           ENDIF                                                        66 00560
140     CONTINUE                                                        66 00570
        STEP2=STEP                                                      66 00580
        STEP=10.*STEP                                                   66 00590
        GOTO 120                                                        66 00600
        END                                                             66 00610
C                                                                       67 00010
        SUBROUTINE REBIN(NGRID,EGRID,EBAR,DEBAR,RI,DRI,RIMIN)           67 00020
C                                                                       67 00030
C  Collapses the continua bins using RIMIN as a criteria                67 00040
C                                                                       67 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************67 00060
C*                        FORTRAN 77 Supplied                           67 00070
C*                        -------------------                           67 00080
C*  SQRT                                                                67 00090
C*                                                                      67 00100
C***********************************************************************67 00110
        INTEGER NGRID                                                   67 00120
        REAL EGRID(NGRID),EBAR(NGRID),DEBAR(NGRID),RI(NGRID),DRI(NGRID),67 00130
     2    RIMIN                                                         67 00140
C                                                                       67 00150
        INTEGER I,J                                                     67 00160
C                                                                       67 00170
        REAL SQRT                                                       67 00180
        INTRINSIC SQRT                                                  67 00190
C                                                                       67 00200
100     CONTINUE                                                        67 00210
        IF(NGRID .LE. 2)RETURN                                          67 00220
        DO 200 I=1,NGRID-2                                              67 00230
           IF(RI(I) .LT. RIMIN .AND. RI(I) .GE. 0.)THEN                 67 00240
              IF(.NOT. (I .EQ. 2 .AND. RI(1) .LT. 0.))THEN              67 00250
                 RI(I)=RI(I)+RI(I+1)                                    67 00260
                 DRI(I)=SQRT(DRI(I)**2+DRI(I+1)**2)                     67 00270
                 EBAR(I)=EBAR(I)+EBAR(I+1)                              67 00280
                 DEBAR(I)=SQRT(DEBAR(I)**2+DEBAR(I+1)**2)               67 00290
                 DO 150 J=I+1,NGRID-1                                   67 00300
                    EGRID(J)=EGRID(J+1)                                 67 00310
                    RI(J)=RI(J+1)                                       67 00320
                    DRI(J)=DRI(J+1)                                     67 00330
                    EBAR(J)=EBAR(J+1)                                   67 00340
                    DEBAR(J)=DEBAR(J+1)                                 67 00350
150              CONTINUE                                               67 00360
              ELSE                                                      67 00370
C  Special case for first bin from B+- where RI is undefined            67 00380
                 EBAR(1)=EBAR(1)+EBAR(2)                                67 00390
                 DEBAR(1)=SQRT(DEBAR(1)**2+DEBAR(2)**2)                 67 00400
                 DO 160 J=2,NGRID-1                                     67 00410
                    EGRID(J)=EGRID(J+1)                                 67 00420
                    RI(J)=RI(J+1)                                       67 00430
                    DRI(J)=DRI(J+1)                                     67 00440
                    EBAR(J)=EBAR(J+1)                                   67 00450
                    DEBAR(J)=DEBAR(J+1)                                 67 00460
160              CONTINUE                                               67 00470
              ENDIF                                                     67 00480
              NGRID=NGRID-1                                             67 00490
              GOTO 100                                                  67 00500
           ENDIF                                                        67 00510
200     CONTINUE                                                        67 00520
C  Special check for last bin                                           67 00530
        IF(RI(NGRID-1) .LT. RIMIN .AND. NGRID .GT. 2)THEN               67 00540
           RI(NGRID-2)=RI(NGRID-2)+RI(NGRID-1)                          67 00550
           DRI(NGRID-2)=SQRT(DRI(NGRID-2)**2+DRI(NGRID-1)**2)           67 00560
           EBAR(NGRID-2)=EBAR(NGRID-2)+EBAR(NGRID-1)                    67 00570
           DEBAR(NGRID-2)=SQRT(DEBAR(NGRID-2)**2+DEBAR(NGRID-1)**2)     67 00580
           EGRID(NGRID-1)=EGRID(NGRID)                                  67 00590
           NGRID=NGRID-1                                                67 00600
           RI(NGRID)=0.                                                 67 00610
           DRI(NGRID)=0.                                                67 00620
           EBAR(NGRID)=0.                                               67 00630
           DEBAR(NGRID)=0.                                              67 00640
        ENDIF                                                           67 00650
        RETURN                                                          67 00660
        END                                                             67 00670
C                                                                       68 00010
      SUBROUTINE SETUP(A,IZ,W0,IE)                                      68 00020
C                                                                       68 00030
C  Associated with function F to reduce the number of operations in F.  68 00040
C    SETUP must be called before F.  Taken from LOGFT 6(1) [ 6-AUG-86]  68 00050
C    and modified to be more consistent with F77 procedures             68 00060
C                                                                       68 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************68 00080
C*                           Present Code                               68 00090
C*                           ------------                               68 00100
C*  GAMMA                                                               68 00110
C*                                                                      68 00120
C*                        FORTRAN 77 Supplied                           68 00130
C*                        -------------------                           68 00140
C*  SQRT                                                                68 00150
C*                                                                      68 00160
C***********************************************************************68 00170
      REAL A,W0                                                         68 00180
      INTEGER IZ,IE                                                     68 00190
C                                                                       68 00200
      INTEGER IEX,IFIN,IZX                                              68 00210
      REAL APOW,BPOW,CALPHA,CM50A,CM50B,CM80A,CM80B,CM80C,COL2U,CON2U,  68 00220
     2  CONLU,CONU,FRLOW,FRONT,G1,G1P1,G2,G2P1,G3,G3P1,R,TWOG,TWOG2,    68 00230
     3  TWOG3,TWOR,V,W0X                                                68 00240
      COMPLEX BQ,BQU                                                    68 00250
      COMMON /FCOM/ APOW,BPOW,BQ,BQU,CALPHA,CM50A,CM50B,CM80A,CM80B,    68 00260
     2  CM80C,COL2U,CON2U,CONLU,CONU,FRLOW,FRONT,G1,G1P1,G2,G2P1,G3,    68 00270
     3  G3P1,R,TWOG,TWOG2,TWOG3,TWOR,V,W0X,IEX,IFIN,IZX                 68 00280
C                                                                       68 00290
      REAL C,CALPHS,CM50,CM80,CUBRTA,GI,GR,GRSQ,RSQ,RSQSQ,TAZR,TGM1,    68 00300
     2  ZR,ZR2,ZR3                                                      68 00310
C                                                                       68 00320
      INTEGER IZTEMP                                                    68 00330
      REAL ALPHA,ATEMP,PI,TWOPI                                         68 00340
      DATA ALPHA/7.29735308E-3/                                         68 00350
      DATA PI,TWOPI/3.14 159 265 359,6.28 318 530 718/                  68 00360
      DATA ATEMP,IZTEMP/0.,0/                                           68 00370
C                                                                       68 00380
      REAL SQRT                                                         68 00390
      COMPLEX CMPLX                                                     68 00400
      INTRINSIC CMPLX,SQRT                                              68 00410
C                                                                       68 00420
      IZX=IZ                                                            68 00430
      W0X=W0                                                            68 00440
      IEX=IE                                                            68 00450
C                                                                       68 00460
      IF((A .NE. ATEMP) .OR. (IZ .NE. IZTEMP))THEN                      68 00470
C  Calculate nuclear radius (unless already done)                       68 00480
         IF (A .NE. ATEMP)THEN                                          68 00490
            ATEMP=A                                                     68 00500
            CUBRTA=ATEMP**(1./3.)                                       68 00510
            R=2.908E-3*CUBRTA-2.437E-3/CUBRTA                           68 00520
            RSQ=R*R                                                     68 00530
            TWOR=R+R                                                    68 00540
         ENDIF                                                          68 00550
         IF (IZ .NE. IZTEMP)THEN                                        68 00560
            IZTEMP=IZ                                                   68 00570
            C=REAL(IZTEMP)                                              68 00580
            C=ABS(C)                                                    68 00590
C  Calculate terms for screening (unless already done)                  68 00600
            V=((-9.45E-9*C+3.014E-6)*C+1.881E-4)*C-5.166E-4             68 00610
         ENDIF                                                          68 00620
         IF (IZTEMP .GE. 0)THEN                                         68 00630
            APOW=((1.11E-7*C-1.01E-5)*C-2.38E-3)*C+0.102                68 00640
            BPOW=((-2.42E-8*C+3.83E-6)*C+3.60E-5)*C-0.0156              68 00650
         ENDIF                                                          68 00660
C  First we compute the part of the integrand that is constant and can  68 00670
C    be put in front of the integral sign.  1/2 R**2 GAMMASQ(2G+1).     68 00680
         CALPHA=C*ALPHA                                                 68 00690
         CALPHS=CALPHA*CALPHA                                           68 00700
         G1=SQRT(1.-CALPHS)                                             68 00710
         TWOG=G1+G1                                                     68 00720
         ZR=TWOG+1.                                                     68 00730
         G1P1=G1+1.                                                     68 00740
         TGM1=TWOG-1.                                                   68 00750
         CALL GAMMA(ZR,0.,GR,GI)                                        68 00760
         GRSQ=GR*GR                                                     68 00770
         BQ=CMPLX(ZR,0.)                                                68 00780
         FRONT=0.5/RSQ/GRSQ                                             68 00790
         IFIN=0                                                         68 00800
C  For negatrons, set up constant for low-E approximation               68 00810
         IF (IZTEMP .LE. 0)THEN                                         68 00820
            TAZR=TWOR*CALPHA                                            68 00830
            FRLOW=TWOPI*TWOR*(TAZR**TGM1)*G1P1*(1.-TAZR*3./ZR)          68 00840
         ENDIF                                                          68 00850
C  For large-Z negatrons, set up screening constants                    68 00860
         IF (IZTEMP .LT. -50)THEN                                       68 00870
            CM50=C-50.                                                  68 00880
            CM50A=-2.5E-3*CM50+1.                                       68 00890
            CM50B=-4.0E-6*CM50*CM50                                     68 00900
            IFIN=-1                                                     68 00910
         ENDIF                                                          68 00920
C  Large-Z positron screening constants                                 68 00930
         IF (IZTEMP .GT. 80)THEN                                        68 00940
            CM80=C-80.                                                  68 00950
            CM80A=-1.7E-4*CM80                                          68 00960
            CM80B=+6.3E-4*CM80                                          68 00970
            CM80C=-8.8E-3*CM80                                          68 00980
            IFIN=1                                                      68 00990
         ENDIF                                                          68 01000
      ENDIF                                                             68 01010
      IF (IE .LT. 1)RETURN                                              68 01020
C  Set up for first-forbidden unique                                    68 01030
      G2=SQRT(4.-CALPHS)                                                68 01040
      TWOG2=G2+G2                                                       68 01050
      ZR2=TWOG2+1.                                                      68 01060
      G2P1=G2+1.                                                        68 01070
      CALL GAMMA(ZR2,0.,GR,GI)                                          68 01080
      BQU=CMPLX(ZR2,0.)                                                 68 01090
      RSQSQ=RSQ*RSQ                                                     68 01100
      CONU=4.5/RSQSQ/GR/GR                                              68 01110
      IF (IZTEMP .LE. 0)THEN                                            68 01120
C  Set up constant for low-E negatron first-forbidden decay             68 01130
         CONLU=72.*PI*CALPHA*(1.+G2P1)*(TAZR**(ZR2-3.))*                68 01140
     2     (1.-2.5*TAZR/ZR2)/RSQ/GR/GR                                  68 01150
      ENDIF                                                             68 01160
      IF (IE .LE. 1)RETURN                                              68 01170
C  Set up for second-forbidden unique                                   68 01180
      G3=SQRT(9.-CALPHS)                                                68 01190
      TWOG3=G3+G3                                                       68 01200
      ZR3=TWOG3+1.                                                      68 01210
      G3P1=G3+1.                                                        68 01220
      CALL GAMMA(ZR3,0.,GR,GI)                                          68 01230
      BQU=CMPLX(ZR3,0.)                                                 68 01240
      CONU=CONU*(10./3.)                                                68 01250
      CON2U=112.5/RSQSQ/GR/GR/RSQ                                       68 01260
      IF (IZTEMP .LE. 0)THEN                                            68 01270
         CONLU=CONLU*(10./3.)                                           68 01280
         COL2U=270.*PI*(TAZR**(ZR3-3.))*(G3P1+2.)*CALPHA*               68 01290
     2     (1.-(7./3.)*TAZR/ZR3)/RSQSQ/GR/GR                            68 01300
      ENDIF                                                             68 01310
      RETURN                                                            68 01320
      END                                                               68 01330
C                                                                       69 00010
        SUBROUTINE                                                      69 00020
     2    SPECTB(FUNC,FUNC1,SUBR,SUBR1,EGRID,TEMP,ETEMP,NGRID,E,        69 00030
     3    ELMASS,ZL,AREA)                                               69 00040
C                                                                       69 00050
C  Obtains B+- continua from one branch                                 69 00060
C                                                                       69 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************69 00080
C*                           Present Code                               69 00090
C*                           ------------                               69 00100
C*  FUNC*   FUNC1*  SUBR*   SUBR1*                                      69 00110
C*                                                                      69 00120
C*  *Dummy routines                                                     69 00130
C*                                                                      69 00140
C***********************************************************************69 00150
        INTEGER NGRID                                                   69 00160
        REAL EGRID(NGRID),TEMP(NGRID),ETEMP(NGRID),E,ELMASS,ZL,AREA     69 00170
C                                                                       69 00180
        REAL FUNC,FUNC1                                                 69 00190
        EXTERNAL FUNC,FUNC1,SUBR,SUBR1                                  69 00200
C                                                                       69 00210
        INTEGER J                                                       69 00220
        REAL SUM,X1,X2                                                  69 00230
C                                                                       69 00240
        SUM=0.                                                          69 00250
        DO 100 J=1,NGRID                                                69 00260
           TEMP(J)=0.                                                   69 00270
           ETEMP(J)=0.                                                  69 00280
           IF(1000.*EGRID(J) .LT. E)THEN                                69 00290
              X1=EGRID(J)/ELMASS+ZL                                     69 00300
              X2=EGRID(J+1)/ELMASS+ZL                                   69 00310
              CALL SUBR(FUNC,X1,X2,TEMP(J))                             69 00320
              CALL SUBR1(FUNC1,X1,X2,ETEMP(J))                          69 00330
              IF(TEMP(J) .NE. 0.)ETEMP(J)=                              69 00340
     2          1000.*(ETEMP(J)/TEMP(J)-ZL)*ELMASS                      69 00350
              TEMP(J)=TEMP(J)/AREA                                      69 00360
              ETEMP(J)=ETEMP(J)*TEMP(J)                                 69 00370
              SUM=SUM+TEMP(J)                                           69 00380
           ENDIF                                                        69 00390
100     CONTINUE                                                        69 00400
        RETURN                                                          69 00410
        END                                                             69 00420
C                                                                       70 00010
        SUBROUTINE                                                      70 00020
     2    UNSPCT(Y,DY,N,RI,RIM,RIP,E,EM,EP,RIB,DRIB,EBAR,DEBAR)         70 00030
C                                                                       70 00040
C  Converts continua from one branch of B+- to absolute units and adds  70 00050
C    result to total continua                                           70 00060
C                                                                       70 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************70 00080
C*                        FORTRAN 77 Supplied                           70 00090
C*                        -------------------                           70 00100
C*  AMAX1   SQRT                                                        70 00110
C*                                                                      70 00120
C***********************************************************************70 00130
        INTEGER N                                                       70 00140
        REAL Y,DY,RI(N),RIM(N),RIP(N),E(N),EM(N),EP(N),RIB(N),DRIB(N),  70 00150
     2    EBAR(N),DEBAR(N)                                              70 00160
C                                                                       70 00170
        INTEGER J                                                       70 00180
        REAL DX,DE                                                      70 00190
C                                                                       70 00200
        REAL AMAX1,SQRT                                                 70 00210
        INTRINSIC AMAX1,SQRT                                            70 00220
C                                                                       70 00230
        DO 100 J=1,N                                                    70 00240
           IF(RI(J) .GT. 0.)THEN                                        70 00250
              DX=AMAX1(ABS(RI(J)-RIM(J)),ABS(RI(J)-RIP(J)))             70 00260
              DX=DX*DX/(RI(J)*RI(J))                                    70 00270
              RIB(J)=RIB(J)+Y*RI(J)                                     70 00280
              DRIB(J)=SQRT(DRIB(J)*DRIB(J)+Y*RI(J)*Y*RI(J)*(DX+DY))     70 00290
           ELSE                                                         70 00300
              IF(RI(J) .EQ. 0.)THEN                                     70 00310
                 IF(RIM(J) .GT. 0. .OR. RIP(J) .GT. 0.)THEN             70 00320
                    DX=AMAX1(RIM(J),RIP(J))                             70 00330
                    DRIB(J)=SQRT(DRIB(J)*DRIB(J)+Y*Y*DX*DX)             70 00340
                 ENDIF                                                  70 00350
              ELSE                                                      70 00360
                 RIB(J)=RI(J)                                           70 00370
              ENDIF                                                     70 00380
           ENDIF                                                        70 00390
           IF(E(J) .GT. 0.)THEN                                         70 00400
              DE=AMAX1(ABS(E(J)-EM(J)),ABS(E(J)-EP(J)))                 70 00410
              DE=(DE/E(J))**2                                           70 00420
              EBAR(J)=EBAR(J)+Y*E(J)                                    70 00430
              DEBAR(J)=SQRT(DEBAR(J)*DEBAR(J)+Y*E(J)*Y*E(J)*(DE+DY))    70 00440
           ELSE                                                         70 00450
              IF(EM(J) .GT. 0. .OR. EP(J) .GT. 0.)THEN                  70 00460
                 DE=AMAX1(EM(J),EP(J))                                  70 00470
                 DEBAR(J)=SQRT(DEBAR(J)*DEBAR(J)+Y*Y*DE*DE)             70 00480
              ENDIF                                                     70 00490
           ENDIF                                                        70 00500
100     CONTINUE                                                        70 00510
        RETURN                                                          70 00520
        END                                                             70 00530
C                                                                       71 00010
        REAL FUNCTION XF(X)                                             71 00020
C                                                                       71 00030
C  Used to calculate the average B+- energies                           71 00040
C                                                                       71 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************71 00060
C*                           Present Code                               71 00070
C*                           ------------                               71 00080
C*  FNEW                                                                71 00090
C*                                                                      71 00100
C***********************************************************************71 00110
        REAL X                                                          71 00120
C                                                                       71 00130
        REAL FNEW                                                       71 00140
        EXTERNAL FNEW                                                   71 00150
C                                                                       71 00160
        REAL Y                                                          71 00170
C                                                                       71 00180
        Y=FNEW(X)                                                       71 00190
        IF(X .NE. 0. .AND. Y .NE. 0.)THEN                               71 00200
           XF=X*Y                                                       71 00210
        ELSE                                                            71 00220
           XF=0.                                                        71 00230
        ENDIF                                                           71 00240
        RETURN                                                          71 00250
        END                                                             71 00260
C-----  Integration Routines                                            72 00010
        SUBROUTINE QROMB(FUNC,A,B,SS)                                   72 00020
C  Returns as SS the integral of the function FUNC FROM A TO B.         72 00030
C    Integration is performed by Romberg's method of order 2K,          72 00040
C    where, e.g., K=2 is Simpson's Rule                                 72 00050
C    [Numerical Recipes (The Art of Scientific Computing).  W.H. Press, 72 00060
C    et al.  Cambridge University Press (NY, 1986), p.114]              72 00070
C                                                                       72 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************72 00090
C*                           Present Code                               72 00100
C*                           ------------                               72 00110
C*  POLINT  TRAPZD                                                      72 00120
C*                                                                      72 00130
C*                        FORTRAN 77 Supplied                           72 00140
C*                        -------------------                           72 00150
C*  ABS                                                                 72 00160
C*                                                                      72 00170
C***********************************************************************72 00180
        REAL FUNC,A,B,SS                                                72 00190
        EXTERNAL FUNC                                                   72 00200
C                                                                       72 00210
        INTEGER JMAX,JMAXP,K,KM                                         72 00220
        PARAMETER (JMAX=30,JMAXP=JMAX+1,K=3,KM=K-1)                     72 00230
C                                                                       72 00240
        REAL EPS,DUM                                                    72 00250
        COMMON/PREC1/EPS,DUM                                            72 00260
C                                                                       72 00270
        REAL S(JMAXP),H(JMAXP),DSS                                      72 00280
        INTEGER J,JJ                                                    72 00290
C                                                                       72 00300
        REAL ABS                                                        72 00310
        INTRINSIC ABS                                                   72 00320
C                                                                       72 00330
        H(1)=1.                                                         72 00340
        DO 100 J=1,JMAX                                                 72 00350
           JJ=J                                                         72 00360
           CALL TRAPZD(FUNC,A,B,S(J),JJ)                                72 00370
           IF(J .GE. K)THEN                                             72 00380
              CALL POLINT(H(J-KM),S(J-KM),K,0.,SS,DSS)                  72 00390
              IF(ABS(DSS) .LT. EPS*ABS(SS))RETURN                       72 00400
C                                                                       72 00410
C       Add check for when integral is zero                             72 00420
              IF(SS .EQ. 0. .AND. DSS .EQ. 0.)RETURN                    72 00430
C                                                                       72 00440
           ENDIF                                                        72 00450
           S(J+1)=S(J)                                                  72 00460
           H(J+1)=0.25*H(J)                                             72 00470
100     CONTINUE                                                        72 00480
        PAUSE 'TOO MANY STEPS --- QROMB'                                72 00490
        END                                                             72 00500
C                                                                       73 00010
        SUBROUTINE QROMO(FUNC,A,B,SS,CHOOSE)                            73 00020
C  Romberg integration on an open interval.  Returns as SS the integral 73 00030
C    of the function FUNC from A to B, using any specified integrating  73 00040
C    subroutine CHOOSE and Romberg's method.  Normally CHOOSE will be an73 00050
C    open formula, not evaluating the function at the endpoints.  It is 73 00060
C    assumed that CHOOSE triples the number of steps on each call, and  73 00070
C    its error series contains only the even powers of the number of    73 00080
C    steps.  The subroutine MIDPNT has been chosen for the present case.73 00090
C    [Numerical Recipes (The Art of Scientific Computing).  W.H. Press, 73 00100
C    et al.  Cambridge University Press (NY, 1986), p.117]              73 00110
C                                                                       73 00120
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************73 00130
C*                           Present Code                               73 00140
C*                           ------------                               73 00150
C*  POLINT  FUNC*   CHOOSE*                                             73 00160
C*                                                                      73 00170
C*  *Dummy routines                                                     73 00180
C*                                                                      73 00190
C*                        FORTRAN 77 Supplied                           73 00200
C*                        -------------------                           73 00210
C*  ABS                                                                 73 00220
C*                                                                      73 00230
C***********************************************************************73 00240
        REAL FUNC,A,B,SS                                                73 00250
        EXTERNAL FUNC,CHOOSE                                            73 00260
C                                                                       73 00270
        INTEGER JMAX,JMAXP,K,KM                                         73 00280
        PARAMETER (JMAX=20,JMAXP=JMAX+1,K=3,KM=K-1)                     73 00290
C                                                                       73 00300
        REAL EPS,DUM                                                    73 00310
        COMMON/PREC2/EPS,DUM                                            73 00320
C                                                                       73 00330
        REAL S(JMAXP),H(JMAXP),DSS                                      73 00340
        INTEGER J,JJ                                                    73 00350
C                                                                       73 00360
        REAL ABS                                                        73 00370
        INTRINSIC ABS                                                   73 00380
C                                                                       73 00390
        H(1)=1.                                                         73 00400
        DO 100 J=1,JMAX                                                 73 00410
           JJ=J                                                         73 00420
           CALL CHOOSE(FUNC,A,B,S(J),JJ)                                73 00430
           IF(J .GE. K)THEN                                             73 00440
              CALL POLINT(H(J-KM),S(J-KM),K,0.,SS,DSS)                  73 00450
              IF(ABS(DSS) .LT. EPS*ABS(SS)) RETURN                      73 00460
C       Check for zero integral                                         73 00470
              IF(SS .EQ. 0. .AND. DSS .EQ. 0.)RETURN                    73 00480
           ENDIF                                                        73 00490
           S(J+1)=S(J)                                                  73 00500
C       This is where the assumption of step tripling and an even       73 00510
C         error series is used                                          73 00520
           H(J+1)=H(J)/9.                                               73 00530
C                                                                       73 00540
100     CONTINUE                                                        73 00550
        PAUSE 'TOO MANY STEPS --- QROMO'                                73 00560
        END                                                             73 00570
C                                                                       74 00010
        SUBROUTINE TRAPZD(FUNC,A,B,S,N)                                 74 00020
C  Compute's the Nth stage of refinement of an extended trapoziodal rule74 00030
C    FUNC is input as the name of the function to be integrated between 74 00040
C    limits A and B, also input.  S should not be modified between      74 00050
C    sequential calls.                                                  74 00060
C    [Numerical Recipes (The Art of Scientific Computing).  W.H. Press, 74 00070
C    et al.  Cambridge University Press (NY, 1986), p.111]              74 00080
C                                                                       74 00090
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************74 00100
C*                           Present Code                               74 00110
C*                           ------------                               74 00120
C*  FUNC*                                                               74 00130
C*                                                                      74 00140
C*  *Dummy routine                                                      74 00150
C*                                                                      74 00160
C***********************************************************************74 00170
        INTEGER N                                                       74 00180
        REAL FUNC,A,B,S                                                 74 00190
        EXTERNAL FUNC                                                   74 00200
C                                                                       74 00210
        INTEGER IT,J                                                    74 00220
        REAL TNM,DEL,SUM,X                                              74 00230
C                                                                       74 00240
        IF(N .EQ. 1)THEN                                                74 00250
           S=0.5*(B-A)*(FUNC(A)+FUNC(B))                                74 00260
           IT=1                                                         74 00270
        ELSE                                                            74 00280
           TNM=REAL(IT)                                                 74 00290
           DEL=(B-A)/TNM                                                74 00300
           X=A+0.5*DEL                                                  74 00310
           SUM=0.                                                       74 00320
           DO 100 J=1,IT                                                74 00330
              SUM=SUM+FUNC(X)                                           74 00340
              X=X+DEL                                                   74 00350
100        CONTINUE                                                     74 00360
           S=0.5*(S+(B-A)*SUM/TNM)                                      74 00370
           IT=2*IT                                                      74 00380
        ENDIF                                                           74 00390
        RETURN                                                          74 00400
        END                                                             74 00410
C                                                                       75 00010
        SUBROUTINE MIDPNT(FUNC,A,B,S,N)                                 75 00020
C  Computes the Nth stage of refinement of an extended Midpoint Rule.   75 00030
C    FUNC is input as the name of the function to be integrated         75 00040
C    between limits A and B.  S should not be modified between calls.   75 00050
C    [Numerical Recipes (The Art of Scientific Computing).  W.H. Press, 75 00060
C    et al.  Cambridge University Press (NY, 1986), p.116]              75 00070
C                                                                       75 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************75 00090
C*                           Present Code                               75 00100
C*                           ------------                               75 00110
C*  FUNC*                                                               75 00120
C*                                                                      75 00130
C*  *Dummy routine                                                      75 00140
C*                                                                      75 00150
C***********************************************************************75 00160
        INTEGER N                                                       75 00170
        REAL FUNC,A,B,S                                                 75 00180
        EXTERNAL FUNC                                                   75 00190
C                                                                       75 00200
        INTEGER IT,J                                                    75 00210
        REAL TNM,DEL,DDEL,X,SUM                                         75 00220
C                                                                       75 00230
        IF(N .EQ. 1)THEN                                                75 00240
           S=(B-A)*FUNC(0.5*(A+B))                                      75 00250
           IT=1                                                         75 00260
        ELSE                                                            75 00270
           TNM=REAL(IT)                                                 75 00280
           DEL=(B-A)/(3.*TNM)                                           75 00290
           DDEL=DEL+DEL                                                 75 00300
           X=A+0.5*DEL                                                  75 00310
           SUM=0.                                                       75 00320
           DO 100 J=1,IT                                                75 00330
              SUM=SUM+FUNC(X)                                           75 00340
              X=X+DDEL                                                  75 00350
              SUM=SUM+FUNC(X)                                           75 00360
              X=X+DEL                                                   75 00370
100        CONTINUE                                                     75 00380
           S=(S+(B-A)*SUM/TNM)/3.                                       75 00390
           IT=3*IT                                                      75 00400
        ENDIF                                                           75 00410
        RETURN                                                          75 00420
        END                                                             75 00430
C-----                                                                  76 00010
C-----  Polynomial Interpolation Routines                               76 00020
        SUBROUTINE LOCATE(XX,N,X,J)                                     76 00030
C                                                                       76 00040
C  Given an array XX of length N, and a given value X, returns a value J76 00050
C    such that X is between XX(J) and XX(J+1).  XX must be monotonic,   76 00060
C    either increasing or decreasing.  J=0 or J=N is returned to indicat76 00070
C    that X is out of the range.                                        76 00080
C    [Numerical Recipes (The Art of Scientific Computing.  W.H. Press,  76 00090
C    et al.  Cambridge University Press (NY, 1986), p.90]               76 00100
C                                                                       76 00110
        INTEGER N,J                                                     76 00120
        REAL XX(N),X                                                    76 00130
C                                                                       76 00140
        INTEGER JL,JU,JM                                                76 00150
C                                                                       76 00160
        JL=0                                                            76 00170
        JU=N+1                                                          76 00180
10      IF(JU-JL .GT. 1)THEN                                            76 00190
           JM=(JU+JL)/2                                                 76 00200
           IF((XX(N) .GT. XX(1)) .EQV. (X .GT. XX(JM)))THEN             76 00210
              JL=JM                                                     76 00220
           ELSE                                                         76 00230
              JU=JM                                                     76 00240
           ENDIF                                                        76 00250
           GOTO 10                                                      76 00260
        ENDIF                                                           76 00270
        J=JL                                                            76 00280
        RETURN                                                          76 00290
        END                                                             76 00300
C                                                                       77 00010
        SUBROUTINE POLDRI(X,N,XA,XB,Y,DY)                               77 00020
C                                                                       77 00030
C  Generalized driver for polynomial interpolation                      77 00040
C                                                                       77 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************77 00060
C*                           Present Code                               77 00070
C*                           ------------                               77 00080
C*  LOCATE  POLINT                                                      77 00090
C*                                                                      77 00100
C***********************************************************************77 00110
        INTEGER NSTEP                                                   77 00120
        PARAMETER (NSTEP=6)                                             77 00130
C                                                                       77 00140
        INTEGER N                                                       77 00150
        REAL X,XA(N),XB(N),Y,DY                                         77 00160
C                                                                       77 00170
        INTEGER LOWER                                                   77 00180
C                                                                       77 00190
        CALL LOCATE(XA,N,X,LOWER)                                       77 00200
        IF(LOWER .EQ. 0)THEN                                            77 00210
           IF(ABS(X-XA(1)) .LT. 0.000001)THEN                           77 00220
              DY=0.                                                     77 00230
              Y=XB(1)                                                   77 00240
              RETURN                                                    77 00250
           ENDIF                                                        77 00260
        ENDIF                                                           77 00270
        IF(LOWER .NE. 0)THEN                                            77 00280
           IF(ABS(X-XA(LOWER)) .LT. 0.000001)THEN                       77 00290
              DY=0.                                                     77 00300
              Y=XB(LOWER)                                               77 00310
              RETURN                                                    77 00320
           ENDIF                                                        77 00330
           IF(ABS(X-XA(LOWER+1)) .LT. 0.000001)THEN                     77 00340
              DY=0.                                                     77 00350
              Y=XB(LOWER+1)                                             77 00360
              RETURN                                                    77 00370
           ENDIF                                                        77 00380
           IF(LOWER .GT. N-1-NSTEP)THEN                                 77 00390
              LOWER=N-1-NSTEP                                           77 00400
           ELSE                                                         77 00410
              LOWER=LOWER-NSTEP/2                                       77 00420
              IF(LOWER .LE. 0)LOWER=1                                   77 00430
           ENDIF                                                        77 00440
           IF(LOWER .LE. N)THEN                                         77 00450
              CALL POLINT(XA(LOWER),XB(LOWER),NSTEP,X,Y,DY)             77 00460
              RETURN                                                    77 00470
           ENDIF                                                        77 00480
        ENDIF                                                           77 00490
        DY=1000.                                                        77 00500
        RETURN                                                          77 00510
        END                                                             77 00520
C                                                                       78 00010
        SUBROUTINE POLINT(XA,YA,N,X,Y,DY)                               78 00020
C  Given arrays XA and YA, each of length N, and given a value X, THE   78 00030
C    value Y and an error estimate DY are returned                      78 00040
C    [Numerical Recipes (The Art of Scientific Computing.  W.H. Press,  78 00050
C    et al.  Cambridge University Press (NY, 1986), p.82]               78 00060
C                                                                       78 00070
        INTEGER N                                                       78 00080
        REAL XA(N),YA(N),X,Y,DY                                         78 00090
C                                                                       78 00100
        INTEGER NMAX                                                    78 00110
        PARAMETER (NMAX=10)                                             78 00120
C                                                                       78 00130
        INTEGER NS,I,M                                                  78 00140
        REAL C(NMAX),D(NMAX),DIF,DIFT,HO,HP,DEN,W                       78 00150
C                                                                       78 00160
        IF(N .LE. 1 .OR. N .GT. NMAX)THEN                               78 00170
           DY=10000.                                                    78 00180
           RETURN                                                       78 00190
        ENDIF                                                           78 00200
        NS=1                                                            78 00210
        DIF=ABS(X-XA(1))                                                78 00220
        DO 100 I=1,N                                                    78 00230
           DIFT=ABS(X-XA(I))                                            78 00240
           IF(DIFT .LT. DIF)THEN                                        78 00250
              NS=I                                                      78 00260
              DIF=DIFT                                                  78 00270
           ENDIF                                                        78 00280
           C(I)=YA(I)                                                   78 00290
           D(I)=YA(I)                                                   78 00300
100     CONTINUE                                                        78 00310
        Y=YA(NS)                                                        78 00320
        NS=NS-1                                                         78 00330
        DO 200 M=1,N-1                                                  78 00340
           DO 150 I=1,N-M                                               78 00350
              HO=XA(I)-X                                                78 00360
              HP=XA(I+M)-X                                              78 00370
              W=C(I+1)-D(I)                                             78 00380
              DEN=HO-HP                                                 78 00390
              IF(DEN .EQ. 0.)THEN                                       78 00400
                 DY=1000.*Y                                             78 00410
                 RETURN                                                 78 00420
              ENDIF                                                     78 00430
              DEN=W/DEN                                                 78 00440
              D(I)=HP*DEN                                               78 00450
              C(I)=HO*DEN                                               78 00460
150        CONTINUE                                                     78 00470
           IF(2*NS .LT. N-M)THEN                                        78 00480
              DY=C(NS+1)                                                78 00490
           ELSE                                                         78 00500
              DY=D(NS)                                                  78 00510
              NS=NS-1                                                   78 00520
           ENDIF                                                        78 00530
           Y=Y+DY                                                       78 00540
200     CONTINUE                                                        78 00550
        RETURN                                                          78 00560
        END                                                             78 00570
C-----                                                                  79 00010
C-----  Internal Bremsstrahlung Calculation Routines                    79 00020
C%%%%%BREMST                                                            79 00030
        SUBROUTINE ECCONT(NK1,NE,IZD,AD)                                79 00040
C                                                                       79 00050
C  Calculates internal Bremsstrahlung associated with electron capture  79 00060
C                                                                       79 00070
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************79 00080
C*                           Present Code                               79 00090
C*                           ------------                               79 00100
C*  E1S     E1SU    E2P     E2S     E3P     I1S     I1SU    I2P         79 00110
C*  I2S     I3P     POLINT  QROMB                                       79 00120
C*                                                                      79 00130
C*                        FORTRAN 77 Supplied                           79 00140
C*                        -------------------                           79 00150
C*  SQRT                                                                79 00160
C*                                                                      79 00170
C***********************************************************************79 00180
        INTEGER NK1,NE,IZD(NE)                                          79 00190
        REAL AD(NE)                                                     79 00200
C                                                                       79 00210
        INTEGER AM,NGRMAX                                               79 00220
        PARAMETER (AM=99,NGRMAX=30)                                     79 00230
C                                                                       79 00240
        INTEGER IREPT                                                   79 00250
        COMMON /RPTUNT/IREPT                                            79 00260
C                                                                       79 00270
        INTEGER NTP,ITYPP(AM),KLASS(AM)                                 79 00280
        REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),    79 00290
     2    EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,   79 00300
     3    DTPI,AVPEX,DAVPX                                              79 00310
        COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,   79 00320
     2    PINT,DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP              79 00330
C                                                                       79 00340
        INTEGER NGRIDI                                                  79 00350
        REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),  79 00360
     2    DEBRIS(NGRMAX)                                                79 00370
        COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS           79 00380
C                                                                       79 00390
        REAL EPS,DUM                                                    79 00400
        COMMON/PREC1/EPS,DUM                                            79 00410
C                                                                       79 00420
        REAL Q1S,Q2S,Q2P,Q3P,EK                                         79 00430
        COMMON /QALL/Q1S,Q2S,Q2P,Q3P,EK                                 79 00440
C                                                                       79 00450
C  Atomic electron binding energies --- Taken from LOGFT 6(1)           79 00460
C    [ 6-AUG-86].  Converted to keV.  Note that the K-shell energies    79 00470
C    differ slightly from the atomic data file.  However, these         79 00480
C    energies are used to provide consistency with the intensities      79 00490
C    derived from LOGFT                                                 79 00500
      REAL BKL(127),BL1L(128),BL2L(128),BL3L(128)                       79 00510
C    K Shell (1S)                                                       79 00520
      DATA  BKL/    2*0.,  0.0555,  0.112 ,  0.188 ,  0.284 ,  0.4   ,  79 00530
     +   0.532 ,  0.68  ,  0.8669,  1.0721,  1.3050,  1.5596,  1.8389,  79 00540
     +   2.1455,  2.4720,  2.8224,  3.2029,  3.6074,  4.0381,  4.4928,  79 00550
     +   4.9664,  5.4651,  5.9892,  6.5390,  7.1120,  7.7089,  8.3328,  79 00560
     +   8.9789,  9.6586, 10.3671, 11.1031, 11.8667, 12.6578, 13.4737,  79 00570
     +  14.3256, 15.1997, 16.1046, 17.0384, 17.9976, 18.9856, 19.9995,  79 00580
     +  21.0440, 22.1172, 23.2199, 24.3503, 25.5140, 26.7112, 27.9399,  79 00590
     +  29.2001, 30.4912, 31.8138, 33.1694, 34.5614, 35.9846, 37.4406,  79 00600
     +  38.9246, 40.4430, 41.9906, 43.5689, 45.1840, 46.8342, 48.5190,  79 00610
     +  50.2391, 51.9957, 53.7885, 55.6177, 57.4855, 59.3896, 61.3323,  79 00620
     +  63.3138, 65.3508, 67.4164, 69.5250, 71.6764, 73.8708, 76.1110,  79 00630
     +  78.3948, 80.7249, 83.1023, 85.5304, 88.0045, 90.5259, 93.1050,  79 00640
     +  95.7299, 98.404 ,101.137 ,103.9219,106.7553,109.6509,112.6014,  79 00650
     + 115.6061,118.678 ,121 818 ,125.027 ,128.220 ,131.590 ,135.960 ,  79 00660
     + 139.490 ,143.090 ,146.780 ,150.54  ,      25*160./               79 00670
C    L1 Shell (2S)                                                      79 00680
      DATA  BL1L/ 9*0., 0.045 , 0.0633, 0.0894, 0.1177, 0.1487, 0.1893, 79 00690
     +  0.2292, 0.2702, 0.320 , 0.3771, 0.4378, 0.5004, 0.5637, 0.6282, 79 00700
     +  0.6946, 0.7690, 0.8461, 0.9256, 1.0081, 1.0966, 1.1936, 1.2977, 79 00710
     +  1.4143, 1.5265, 1.6539, 1.7820, 1.9210, 2.0651, 2.2163, 2.3725, 79 00720
     +  2.5316, 2.6977, 2.8655, 3.0425, 3.2240, 3.4119, 3.6043, 3.8058, 79 00730
     +  4.0180, 4.2375, 4.4647, 4.6983, 4.9392, 5.1881, 5.4528, 5.7143, 79 00740
     +  5.9888, 6.2663, 6.5488, 6.8348, 7.1260, 7.4279, 7.7368, 8.0520, 79 00750
     +  8.3756, 8.7080, 9.0458, 9.3942, 9.7513,10.1157,10.4864,10.8704, 79 00760
     + 11.2707,11.6815,12.0998,12.5267,12.9680,13.4185,13.8799,14.3528, 79 00770
     + 14.8393,15.3467,15.8608,16.3875,16.9393,17.493 ,18.049 ,18.639 , 79 00780
     + 19.2367,19.840 ,20.4721,21.1046,21.7574,22.4268,23.0972,23.7729, 79 00790
     + 24.460 ,25.275 ,26.110 ,26.900 ,27.700 ,28.530 ,29.380 ,30.240 , 79 00800
     + 25*31.    /                                                      79 00810
C    L2 Shell (2P)                                                      79 00820
      DATA  BL2L/ 9*0., 0.0183, 0.0311, 0.0514, 0.0731, 0.0992, 0.1322, 79 00830
     +  0.1648, 0.2016, 0.2473, 0.2963, 0.3500, 0.4067, 0.4615, 0.5205, 79 00840
     +  0.5837, 0.6514, 0.7211, 0.7936, 0.8719, 0.9510, 1.0428, 1.1423, 79 00850
     +  1.2478, 1.3586, 1.4762, 1.5960, 1.7272, 1.8639, 2.0068, 2.1555, 79 00860
     +  2.3067, 2.4647, 2.6251, 2.7932, 2.9669, 3.1461, 3.3303, 3.5237, 79 00870
     +  3.7270, 3.9380, 4.1561, 4.3804, 4.6120, 4.8521, 5.1037, 5.3594, 79 00880
     +  5.6236, 5.8906, 6.1642, 6.4404, 6.7215, 7.0128, 7.3118, 7.6171, 79 00890
     +  7.9303, 8.2516, 8.5806, 8.9178, 9.2643, 9.6169, 9.9782,10.3486, 79 00900
     + 10.7394,11.1361,11.5440,11.9587,12.3850,12.8241,13.2726,13.7336, 79 00910
     + 14.2087,14.6979,15.2000,15.7111,16.2443,16.7847,17.3371,17.9065, 79 00920
     + 18.4843,19.0832,19.6932,20.3137,20.9476,21.6005,22.2662,22.9440, 79 00930
     + 23.779 ,24.385 ,25.250 ,26.020 ,26.810 ,27.610 ,28.440 ,29.280 , 79 00940
     + 25*30.    /                                                      79 00950
C    L3 Shell (3P)                                                      79 00960
      DATA  BL3L/ 9*0., 0.0183, 0.0311, 0.0514, 0.0731, 0.0992, 0.1322, 79 00970
     +  0.1648, 0.2000, 0.2452, 0.2936, 0.3464, 0.4022, 0.4555, 0.5129, 79 00980
     +  0.5745, 0.6403, 0.7081, 0.7786, 0.8547, 0.9311, 1.0197, 1.1154, 79 00990
     +  1.2167, 1.3231, 1.4358, 1.5499, 1.6749, 1.8044, 1.9396, 2.0800, 79 01000
     +  2.2223, 2.3705, 2.5202, 2.6769, 2.8379, 3.0038, 3.1733, 3.3511, 79 01010
     +  3.5375, 3.7301, 3.9288, 4.1322, 4.3414, 4.5571, 4.7822, 5.0119, 79 01020
     +  5.2470, 5.4827, 5.7234, 5.9643, 6.2079, 6.4593, 6.7162, 6.9769, 79 01030
     +  7.2428, 7.5140, 7.7901, 8.0711, 8.3579, 8.6480, 8.9436, 9.2441, 79 01040
     +  9.5607, 9.8811,10.2068,10.5353,10.8709,11.2152,11.5637,11.9187, 79 01050
     + 12.2839,12.6575,13.0352,13.4186,13.8138,14.2135,14.6194,15.0312, 79 01060
     + 15.4444,15.8710,16.3003,16.7331,17.1663,17.6100,18.0568,18.5041, 79 01070
     + 18.930 ,19.452 ,19.930 ,20.410 ,20.900 ,21.390 ,21.880 ,22.360 , 79 01080
     + 25*25.    /                                                      79 01090
C                                                                       79 01100
C  Screening corrections from Fig. 36 of Bambynek for Z=10 to 100 in    79 01110
C    steps of 10.                                                       79 01120
        REAL ZSC(10),S1S(10),S2S(10),S2P(10),S3P(10)                    79 01130
        DATA ZSC/ 10.  , 20.  , 30.  , 40.  , 50.  , 60.  , 70.  ,      79 01140
     1     80.  , 90.  ,100.  /                                         79 01150
        DATA S1S/  0.87,  0.91,  0.93,  0.95,  0.97,  0.98,  0.98,      79 01160
     1      0.98,  0.99,  0.99/                                         79 01170
        DATA S2S/  0.51,  0.62,  0.69,  0.74,  0.79,  0.82,  0.85,      79 01180
     1      0.87,  0.88,  0.88/                                         79 01190
        DATA S2P/  0.35,  0.48,  0.55,  0.60,  0.65,  0.70,  0.72,      79 01200
     1      0.75,  0.78,  0.79/                                         79 01210
        DATA S3P/  0.00,  0.10,  0.23,  0.32,  0.40,  0.48,  0.53,      79 01220
     1      0.58,  0.61,  0.63/                                         79 01230
C    Temporary array to calculate and interpolate screening correction  79 01240
        REAL YS(10)                                                     79 01250
C                                                                       79 01260
C    Ratios of bound-state radial wave functions from Table 2           79 01270
C      (Martin and Blichert-Toft)                                       79 01280
        REAL GL1GK2(98)                                                 79 01290
        DATA GL1GK2/       4*0.00,.0405,.0493,.0541,.0564,.0577,.0584,  79 01300
     1    .0627,.0666,.0699,.0729,.0756,.0781,.0804,.0824,.0844,.0862,  79 01310
     2    .0879,.0896,.0910,.0924,.0938,.0950,.0962,.0974,.0985,.0995,  79 01320
     3    .1006,.1015,.1026,.1035,.1043,.1053,.1063,.1071,.1080,.1089,  79 01330
     4    .1098,.1107,.1115,.1124,.1133,.1142,.1150,.1159,.1168,.1178,  79 01340
     5    .1187,.1196,.1205,.1215,.1224,.1234,.1244,.1254,.1264,.1275,  79 01350
     6    .1285,.1296,.1306,.1317,.1328,.1340,.1351,.1362,.1374,.1386,  79 01360
     7    .1398,.1410,.1423,.1436,.1448,.1462,.1475,.1489,.1502,.1517,  79 01370
     8    .1531,.1546,.1561,.1576,.1591,.1607,.1623,.1639,.1656,.1673,  79 01380
     9    .1690,.1708,.1726,.1744,.1763,.1782,.1802,.1829/              79 01390
C                                                                       79 01400
C  Temporary arrays for IB spectra                                      79 01410
        REAL TEMPI(NGRMAX),DTEMPI(NGRMAX),ETEMPI(NGRMAX),DETMPI(NGRMAX) 79 01420
C                                                                       79 01430
        INTEGER IZ,I,J,K                                                79 01440
        REAL ELE,DY,Z,AREA,EAREA,CONST,SCREEN,DSCREE,X,DX,DS1,X1,X2,    79 01450
     2    ELEK,ELEL                                                     79 01460
C                                                                       79 01470
        REAL I1S,E1S,I1SU,E1SU,I2S,E2S,I2P,E2P,I3P,E3P                  79 01480
        EXTERNAL I1S,E1S,I1SU,E1SU,I2S,E2S,I2P,E2P,I3P,E3P              79 01490
C                                                                       79 01500
        REAL ELMASS                                                     79 01510
        DATA ELMASS/510.99906/                                          79 01520
C                                                                       79 01530
        DOUBLE PRECISION ALPHA,PI                                       79 01540
C                                                                       79 01550
        REAL SQRT                                                       79 01560
        INTRINSIC SQRT                                                  79 01570
C                                                                       79 01580
        EPS=1.E-4                                                       79 01590
        ALPHA=7.297735308D-03                                           79 01600
        PI=DBLE(3.14159265359)                                          79 01610
C                                                                       79 01620
        IF(NGRIDI .LE. 1)RETURN                                         79 01630
        DO 1000 I=1,NE                                                  79 01640
           IF(EECA(I) .EQ. 0. .OR. EC(I,1) .EQ. 0.)GOTO 1000            79 01650
           WRITE(IREPT,FMT='(10X,4HEEC=,F10.2)') EECA(I)                79 01660
           IF(BKL(IZD(I)) .EQ. 0.)THEN                                  79 01670
              WRITE(IREPT,*)'+                    Cannot calculate any' 79 01680
              GOTO 1000                                                 79 01690
           ENDIF                                                        79 01700
           DO 100 J=1,NGRIDI                                            79 01710
              TEMPI(J)=0.                                               79 01720
              DTEMPI(J)=0.                                              79 01730
              ETEMPI(J)=0.                                              79 01740
              DETMPI(J)=0.                                              79 01750
100        CONTINUE                                                     79 01760
           IF(BL1L(IZD(I)) .EQ. 0. .OR. IZD(I) .LT. INT(ZSC(1)))        79 01770
     2       WRITE(IREPT,*)'+                    Only 1S calculated'    79 01780
           Z=REAL(IZD(I))                                               79 01790
           DY=DEC(I,1)*DEC(I,1)/(EC(I,1)*EC(I,1))                       79 01800
           EK=BKL(IZD(I))/ELMASS                                        79 01810
           Q1S=(EECA(I)-BKL(IZD(I)))/ELMASS                             79 01820
           Q2S=(EECA(I)-BL1L(IZD(I)))/ELMASS                            79 01830
           Q2P=(EECA(I)-BL2L(IZD(I)))/ELMASS                            79 01840
           Q3P=(EECA(I)-BL3L(IZD(I)))/ELMASS                            79 01850
           DO 800 J=1,NGRIDI-1                                          79 01860
              IF(EBIS(J) .EQ. 0.)GOTO 800                               79 01870
              IF(1000.*EBIS(J) .GE. EECA(I))GOTO 900                    79 01880
              X1=1000.*EBIS(J)/ELMASS                                   79 01890
              X2=AMIN1(1000.*EBIS(J+1),EECA(I))/ELMASS                  79 01900
C       Screening uncertainty --- see equation 4.46 (Bambynek)          79 01910
              IF(X2 .LE. EK)THEN                                        79 01920
                 DS1=0.2                                                79 01930
              ELSE                                                      79 01940
                 IF(X2 .LE. 2.*EK)THEN                                  79 01950
                    DS1=0.1                                             79 01960
                 ELSE                                                   79 01970
                    DS1=0.02                                            79 01980
                 ENDIF                                                  79 01990
              ENDIF                                                     79 02000
              CONST=REAL(ALPHA/PI)                                      79 02010
              IF(ITYPP(I) .EQ. 1)THEN                                   79 02020
C       Special case for 1S first-forbidden unique                      79 02030
                 CALL QROMB(I1SU,X1,X2,AREA)                            79 02040
                 CALL QROMB(E1SU,X1,X2,EAREA)                           79 02050
              ELSE                                                      79 02060
C       All other 1S treated as allowed                                 79 02070
                 CALL QROMB(I1S,X1,X2,AREA)                             79 02080
                 CALL QROMB(E1S,X1,X2,EAREA)                            79 02090
              ENDIF                                                     79 02100
              TEMPI(J)=CONST*AREA+TEMPI(J)                              79 02110
              ETEMPI(J)=CONST*EAREA*ELMASS+ETEMPI(J)                    79 02120
C         Screening already included in EC but still must estimate      79 02130
C           uncertainty                                                 79 02140
              DTEMPI(J)=DTEMPI(J)+(DS1*CONST*AREA)**2                   79 02150
              DETMPI(J)=DETMPI(J)+(DS1*CONST*EAREA)**2                  79 02160
              IF(BL1L(IZD(I)) .EQ. 0. .OR. IZD(I) .LT. INT(ZSC(1)))     79 02170
     1          GOTO 800                                                79 02180
C       2S Calculations                                                 79 02190
              CALL QROMB(I2S,X1,X2,AREA)                                79 02200
              CALL QROMB(E2S,X1,X2,EAREA)                               79 02210
              DO 200 K=1,10                                             79 02220
                 YS(K)=S2S(K)/S1S(K)                                    79 02230
200           CONTINUE                                                  79 02240
              CALL POLINT(ZSC,YS,10,Z,SCREEN,DSCREE)                    79 02250
              IF(IZD(I) .GT. 98)THEN                                    79 02260
                 X=SCREEN*GL1GK2(98)*CONST                              79 02270
              ELSE                                                      79 02280
                 X=SCREEN*GL1GK2(IZD(I))*CONST                          79 02290
              ENDIF                                                     79 02300
              TEMPI(J)=X*AREA+TEMPI(J)                                  79 02310
              ETEMPI(J)=X*EAREA*ELMASS+ETEMPI(J)                        79 02320
C         Estimate uncertainty due to screening                         79 02330
C           From reading figure                                         79 02340
              DX=2*(0.01/SCREEN)**2                                     79 02350
C           From interpolation                                          79 02360
              DX=DX+(DSCREE/SCREEN)**2                                  79 02370
C           From theory                                                 79 02380
              DX=DX+DS1**2                                              79 02390
              DTEMPI(J)=DTEMPI(J)+DX*(X*AREA)**2                        79 02400
              DETMPI(J)=DETMPI(J)+DX*(X*EAREA)**2                       79 02410
C       2P Calculations                                                 79 02420
              CONST=4./REAL(PI*Z*Z*ALPHA)                               79 02430
              CALL QROMB(I2P,X1,X2,AREA)                                79 02440
              CALL QROMB(E2P,X1,X2,EAREA)                               79 02450
              DO 300 K=1,10                                             79 02460
                 YS(K)=S2P(K)/S1S(K)                                    79 02470
300           CONTINUE                                                  79 02480
              CALL POLINT(ZSC,YS,10,Z,SCREEN,DSCREE)                    79 02490
              X=SCREEN*CONST                                            79 02500
              TEMPI(J)=X*AREA+TEMPI(J)                                  79 02510
              ETEMPI(J)=X*EAREA*ELMASS+ETEMPI(J)                        79 02520
C         Estimate uncertainty due to screening                         79 02530
C           From reading figure                                         79 02540
              DX=0.01/SCREEN**2                                         79 02550
C           From interpolation                                          79 02560
              DX=DX+(DSCREE/SCREEN)**2                                  79 02570
C           From theory                                                 79 02580
              DX=DX+DS1**2                                              79 02590
              DTEMPI(J)=DTEMPI(J)+DX*(X*AREA)**2                        79 02600
              DETMPI(J)=DETMPI(J)+DX*(X*EAREA)**2                       79 02610
C       3P Calculations                                                 79 02620
              DO 400 K=1,10                                             79 02630
                 YS(K)=S3P(K)/S1S(K)                                    79 02640
400           CONTINUE                                                  79 02650
              CALL POLINT(ZSC,YS,10,Z,SCREEN,DSCREE)                    79 02660
              IF(SCREEN .LT. 1.E-9)GOTO 800                             79 02670
              CALL QROMB(I3P,X1,X2,AREA)                                79 02680
              CALL QROMB(E3P,X1,X2,EAREA)                               79 02690
              X=SCREEN*CONST                                            79 02700
              TEMPI(J)=X*AREA+TEMPI(J)                                  79 02710
              ETEMPI(J)=X*EAREA*ELMASS+ETEMPI(J)                        79 02720
C         Estimate uncertainty due to screening                         79 02730
C           From reading figure                                         79 02740
              DX=0.01/SCREEN**2                                         79 02750
C           From interpolation                                          79 02760
              DX=DX+(DSCREE*SCREEN)**2                                  79 02770
C           From theory                                                 79 02780
              DX=DX+DS1**2                                              79 02790
              DTEMPI(J)=DTEMPI(J)+DX*(X*AREA)**2                        79 02800
              DETMPI(J)=DETMPI(J)+DX*(X*EAREA)**2                       79 02810
800        CONTINUE                                                     79 02820
900        CONTINUE                                                     79 02830
           DO 950 J=1,NGRIDI                                            79 02840
              X=EC(I,1)*TEMPI(J)                                        79 02850
              RIBIS(J)=RIBIS(J)+X                                       79 02860
              IF(TEMPI(J) .NE. 0.)THEN                                  79 02870
                 DX=DTEMPI(J)/(TEMPI(J)*TEMPI(J))                       79 02880
              ELSE                                                      79 02890
                 DX=0.                                                  79 02900
              ENDIF                                                     79 02910
              DRIBIS(J)=SQRT((DRIBIS(J)**2)+(DX+DY)*X**2)               79 02920
              X=EC(I,1)*ETEMPI(J)                                       79 02930
              EBARIS(J)=EBARIS(J)+X                                     79 02940
              IF(ETEMPI(J) .NE. 0.)THEN                                 79 02950
                 DX=DETMPI(J)/(ETEMPI(J)*ETEMPI(J))                     79 02960
              ELSE                                                      79 02970
                 DX=0.                                                  79 02980
              ENDIF                                                     79 02990
              DEBRIS(J)=SQRT((DEBRIS(J)**2)+(DX+DY)*X**2)               79 03000
950        CONTINUE                                                     79 03010
1000    CONTINUE                                                        79 03020
        RETURN                                                          79 03030
C  Entry point to get electron energy for setting IB grid               79 03040
        ENTRY GETELE(IZ,ELEK,ELEL)                                      79 03050
        ELEK=BKL(IZ)                                                    79 03060
        ELEL=BL3L(IZ)                                                   79 03070
        RETURN                                                          79 03080
        END                                                             79 03090
C                                                                       80 00010
        SUBROUTINE GRIDIB(NE,NK1,NB,IZD)                                80 00020
C                                                                       80 00030
C  Grid for internal Bremsstrahlung must be obtained from maximum energy80 00040
C    available for B-, B+, and EC                                       80 00050
C                                                                       80 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************80 00070
C*                           Present Code                               80 00080
C*                           ------------                               80 00090
C*  GETELE  GRID    ZERO8                                               80 00100
C*                                                                      80 00110
C***********************************************************************80 00120
        INTEGER NE,NK1,NB,IZD(*)                                        80 00130
C                                                                       80 00140
        INTEGER AM,NGRMAX                                               80 00150
        PARAMETER (AM=99,NGRMAX=30)                                     80 00160
C                                                                       80 00170
      INTEGER NTP,KLASS(AM)                                             80 00180
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      80 00190
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5)                    80 00200
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,80 00210
     2  DPINT,EC                                                        80 00220
C                                                                       80 00230
        REAL  BME(AM),DBME(AM),BMI(AM)                                  80 00240
        COMMON /BDATA/ BME,DBME,BMI                                     80 00250
C                                                                       80 00260
        INTEGER NGRIDI                                                  80 00270
        REAL EBIS(NGRMAX),RIBIS(NGRMAX),DRIBIS(NGRMAX),EBARIS(NGRMAX),  80 00280
     2    DEBRIS(NGRMAX)                                                80 00290
        COMMON /IBSPCT/NGRIDI,EBIS,RIBIS,DRIBIS,EBARIS,DEBRIS           80 00300
C                                                                       80 00310
        INTEGER IZ,IE1,ITEST,I,J                                        80 00320
        REAL E,DE,STEP,STEP1,ELEK,ELEL,COMPB,COMPE,E1,E2,TEST           80 00330
C                                                                       80 00340
        INTEGER MAX0                                                    80 00350
        INTRINSIC MAX0                                                  80 00360
C                                                                       80 00370
        EXTERNAL GETELE,GRID,ZERO8                                      80 00380
C                                                                       80 00390
C  Zero array                                                           80 00400
        IF(NGRIDI .GT. 0)THEN                                           80 00410
           CALL ZERO8(NGRIDI,EBIS)                                      80 00420
           CALL ZERO8(NGRIDI,RIBIS)                                     80 00430
           CALL ZERO8(NGRIDI,DRIBIS)                                    80 00440
           CALL ZERO8(NGRIDI,EBARIS)                                    80 00450
           CALL ZERO8(NGRIDI,DEBRIS)                                    80 00460
           NGRIDI=0                                                     80 00470
        ENDIF                                                           80 00480
C                                                                       80 00490
        E=0.                                                            80 00500
C   Check for cases where contribution from EC is nonexistent or        80 00510
C     negliciable                                                       80 00520
C     Pure B- decay                                                     80 00530
        IF(NE .LE. 0 .AND. NB .GT. 0)THEN                               80 00540
           DO 100 I=1,NB                                                80 00550
              IF(BME(I) .GT. E .AND. BMI(I) .GT. 0.)THEN                80 00560
                 E=BME(I)                                               80 00570
                 DE=DBME(I)                                             80 00580
              ENDIF                                                     80 00590
100        CONTINUE                                                     80 00600
           STEP=0.02                                                    80 00610
           CALL GRID(E,DE,EBIS,NGRIDI,NGRMAX,STEP)                      80 00620
           RETURN                                                       80 00630
        ENDIF                                                           80 00640
C     Mixed decay modes --- compare sum of B+- intensities to sum of    80 00650
C       K-capture intensity.  If sum of K-capture <= 1% of B+-, assume  80 00660
C       no contribution from EC                                         80 00670
        IF(NE .GT. 0)THEN                                               80 00680
           COMPB=0.                                                     80 00690
           COMPE=0.                                                     80 00700
           DO 120 I=1,NE                                                80 00710
              COMPE=COMPE+EC(I,1)                                       80 00720
120        CONTINUE                                                     80 00730
           IF(NB .GT. 0)THEN                                            80 00740
              DO 130 I=1,NB                                             80 00750
                 COMPB=COMPB+BMI(I)                                     80 00760
130           CONTINUE                                                  80 00770
           ENDIF                                                        80 00780
           IF(NK1 .GT. 0)THEN                                           80 00790
              DO 140 I=1,NE                                             80 00800
                 COMPB=COMPB+PINT(I)                                    80 00810
140           CONTINUE                                                  80 00820
           ENDIF                                                        80 00830
           IF(COMPE .LE. 0.01*COMPB)THEN                                80 00840
              IF(NK1 .GT. 0)THEN                                        80 00850
                 DO 150 I=1,NE                                          80 00860
                    IF(EBP(I) .GT. E .AND. PINT(I) .GT. 0.)THEN         80 00870
                       E=EBP(I)                                         80 00880
                       DE=DEBP(I)                                       80 00890
                    ENDIF                                               80 00900
150              CONTINUE                                               80 00910
              ENDIF                                                     80 00920
              IF(NB .GT. 0)THEN                                         80 00930
                 DO 160 I=1,NB                                          80 00940
                    IF(BME(I) .GT. E .AND. BMI(I) .GT. 0.)THEN          80 00950
                       E=BME(I)                                         80 00960
                       DE=DBME(I)                                       80 00970
                    ENDIF                                               80 00980
160              CONTINUE                                               80 00990
              ENDIF                                                     80 01000
              STEP=0.02                                                 80 01010
              CALL GRID(E,DE,EBIS,NGRIDI,NGRMAX,STEP)                   80 01020
              RETURN                                                    80 01030
           ENDIF                                                        80 01040
        ENDIF                                                           80 01050
C   EC contribution significant --- Two problems:  formula for B2S      80 01060
C     undefined for ETA2>=1 and Q3P undefined for ETA3=1 and has resonan80 01070
C     structure for ETA3<=1.  Ad-hoc solution will be to start grid at  80 01080
C     K-electron binding energy and round up to next highest integer in 80 01090
C     units.                                                            80 01100
        IZ=IZD(1)                                                       80 01110
        DO 200 I=2,NE                                                   80 01120
           IZ=MAX0(IZ,IZD(I))                                           80 01130
200     CONTINUE                                                        80 01140
        CALL GETELE(IZ,ELEK,ELEL)                                       80 01150
C                                                                       80 01160
        IE1=INT(ELEK)                                                   80 01170
        IE1=IE1+1                                                       80 01180
        E1=REAL(IE1)                                                    80 01190
C                                                                       80 01200
        E2=0.                                                           80 01210
        DE=0.                                                           80 01220
        DO 210 I=1,NE                                                   80 01230
           IF(EECA(I) .GT. E2 .AND. EC(I,1) .GT. 0.)THEN                80 01240
              CALL GETELE(IZD(I),ELEK,ELEL)                             80 01250
              IF(ELEL .GT. 0.)THEN                                      80 01260
                 E2=EECA(I)-ELEL                                        80 01270
              ELSE                                                      80 01280
                 E2=EECA(I)-ELEK                                        80 01290
              ENDIF                                                     80 01300
              DE=DEECA(I)                                               80 01310
           ENDIF                                                        80 01320
           IF(EBP(I) .GT. E2 .AND. PINT(I) .GT. 0.)THEN                 80 01330
              E2=EBP(I)                                                 80 01340
              DE=DEBP(I)                                                80 01350
           ENDIF                                                        80 01360
210     CONTINUE                                                        80 01370
        IF(NB .GT. 0)THEN                                               80 01380
           DO 220 I=1,NB                                                80 01390
              IF(BME(I) .GT. E2 .AND. BMI(I) .GT. 0.)THEN               80 01400
                 E2=BME(I)                                              80 01410
                 DE=DBME(I)                                             80 01420
              ENDIF                                                     80 01430
220        CONTINUE                                                     80 01440
        ENDIF                                                           80 01450
        E2=E2+DE                                                        80 01460
C                                                                       80 01470
        E1=E1/1000.                                                     80 01480
        E2=E2/1000.                                                     80 01490
        NGRIDI=1                                                        80 01500
        EBIS(NGRIDI)=E1                                                 80 01510
        STEP=0.02                                                       80 01520
        IF(E1 .GE. 0.1)STEP=0.2                                         80 01530
300     CONTINUE                                                        80 01540
        STEP1=STEP                                                      80 01550
310     CONTINUE                                                        80 01560
        TEST=E1/STEP                                                    80 01570
        ITEST=INT(TEST)                                                 80 01580
        ITEST=ITEST+1                                                   80 01590
        DO 330 I=ITEST,5                                                80 01600
           TEST=REAL(I)                                                 80 01610
           NGRIDI=NGRIDI+1                                              80 01620
           IF(NGRIDI .GT. NGRMAX)THEN                                   80 01630
              STEP=10.*STEP                                             80 01640
              NGRIDI=1                                                  80 01650
              GOTO 300                                                  80 01660
           ENDIF                                                        80 01670
           EBIS(NGRIDI)=TEST*STEP                                       80 01680
C     Check for precision near end-point                                80 01690
           IF(EBIS(NGRIDI) .GE. E2)THEN                                 80 01700
              IF(ABS(EBIS(NGRIDI)-E2) .GT. 0.5*STEP)THEN                80 01710
                 EBIS(NGRIDI)=E2                                        80 01720
                 RETURN                                                 80 01730
              ELSE                                                      80 01740
                 NGRIDI=NGRIDI-2                                        80 01750
                 DO 320 J=1,100                                         80 01760
                    EBIS(NGRIDI+1)=EBIS(NGRIDI)+STEP1                   80 01770
                    IF(EBIS(NGRIDI+1) .GE. E2)THEN                      80 01780
                       EBIS(NGRIDI+1)=E2                                80 01790
                       NGRIDI=NGRIDI+1                                  80 01800
                       RETURN                                           80 01810
                    ENDIF                                               80 01820
                    NGRIDI=NGRIDI+1                                     80 01830
320              CONTINUE                                               80 01840
              ENDIF                                                     80 01850
           ENDIF                                                        80 01860
330     CONTINUE                                                        80 01870
        STEP1=STEP                                                      80 01880
        STEP=10.*STEP                                                   80 01890
        GOTO 310                                                        80 01900
        END                                                             80 01910
C                                                                       81 00010
        SUBROUTINE SPECTI(W0,NGRID,EGRID,RI,EBAR)                       81 00020
C                                                                       81 00030
C  Obtains IB continua from one B+- branch                              81 00040
C                                                                       81 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************81 00060
C*                           Present Code                               81 00070
C*                           ------------                               81 00080
C*  KST     QROMB   ST                                                  81 00090
C*                                                                      81 00100
C***********************************************************************81 00110
        INTEGER NGRID                                                   81 00120
        REAL W0,EGRID(NGRID),RI(NGRID),EBAR(NGRID)                      81 00130
C                                                                       81 00140
        REAL EMAX,K,AREAS                                               81 00150
        COMMON /MAXENG/EMAX,K,AREAS                                     81 00160
C                                                                       81 00170
        INTEGER NST                                                     81 00180
        COMMON/STCOMM/NST                                               81 00190
C                                                                       81 00200
        REAL ELMASS,ZL                                                  81 00210
        DATA ELMASS,ZL/0.51099906,1./                                   81 00220
C                                                                       81 00230
        REAL ST,KST                                                     81 00240
        EXTERNAL ST,KST,QROMB                                           81 00250
C                                                                       81 00260
        INTEGER J                                                       81 00270
        REAL SUMIBB,X1,X2                                               81 00280
        DOUBLE PRECISION ALPHA,PI                                       81 00290
C                                                                       81 00300
        ALPHA=7.29735308D-03                                            81 00310
        PI=DBLE(3.14159265359)                                          81 00320
C                                                                       81 00330
        EMAX=W0                                                         81 00340
        DO 100 J=1,NGRID                                                81 00350
           RI(J)=0.                                                     81 00360
           EBAR(J)=0.                                                   81 00370
           X1=EGRID(J)/ELMASS                                           81 00380
           IF(J .EQ. NGRID .OR. X1 .GE. EMAX-ZL)GOTO 100                81 00390
           X2=EGRID(J+1)/ELMASS                                         81 00400
           IF(X2 .GT. EMAX-ZL)X2=EMAX-ZL                                81 00410
           NST=1                                                        81 00420
C  Singularity in strength function does not allow integration of first 81 00430
C    bin                                                                81 00440
           IF(X1 .NE. 0.)THEN                                           81 00450
              CALL QROMB(ST,X1,X2,RI(J))                                81 00460
              RI(J)=REAL(ALPHA/PI)*RI(J)                                81 00470
           ELSE                                                         81 00480
              RI(J)=-999.                                               81 00490
           ENDIF                                                        81 00500
           CALL QROMB(KST,X1,X2,EBAR(J))                                81 00510
           EBAR(J)=1000.*REAL(ALPHA/PI)*EBAR(J)*ELMASS                  81 00520
100     CONTINUE                                                        81 00530
        RETURN                                                          81 00540
        END                                                             81 00550
C                                                                       82 00010
        REAL FUNCTION B1S2(K)                                           82 00020
C                                                                       82 00030
C  Function used in obtaining correction factor for IB from 1S Electron 82 00040
C  Capture                                                              82 00050
C                                                                       82 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************82 00070
C*                           Present Code                               82 00080
C*                           ------------                               82 00090
C*  ETA     KFUNC   LAMBDA  POLDRI                                      82 00100
C*                                                                      82 00110
C***********************************************************************82 00120
        REAL K                                                          82 00130
C  K=Photon energy measured in units of the K-shell binding energy      82 00140
C    BK=(ZALPHA)**2/2                                                   82 00150
C                                                                       82 00160
        INTEGER NTAB                                                    82 00170
        REAL PREC                                                       82 00180
        PARAMETER (NTAB=79,PREC=1.0E-2)                                 82 00190
C                                                                       82 00200
C  Table XXII from Bambynek, et al.  Rev. Mod. Phys. 49(1), 77 (1977)   82 00210
C    k=0 value taken from analytical analysis (See text in Bambynek)    82 00220
        REAL KTAB(NTAB),B(NTAB)                                         82 00230
        DATA KTAB/0.0,                                                  82 00240
     2      1.0,  1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,   1.8,  1.9, 82 00250
     3      2.0,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,  2.7,   2.8,  2.9, 82 00260
     4      3.0,  3.2,  3.4,  3.6,  3.8,  4.0,  4.2,  4.4,   4.6,  4.8, 82 00270
     5      5.0,  5.5,  6.0,  6.5,  7.0,  7.5,  8.0,  8.5,   9.0,  9.5, 82 00280
     6     10.0, 11.0, 12.0, 13.0, 14.0, 16.0, 18.0,  20.0, 22.0, 24.0, 82 00290
     7     26.0, 28.0, 30.0, 35.0, 40.0, 45.0, 50.0,  60.0, 70.0, 80.0, 82 00300
     8     90.0,100.0,120.0,140.0,160.0,180.0,200.0, 220.0,240.0,260.0, 82 00310
     9    280.0,300.0,350.0,400.0,450.0,500.0,700.0,1000.0/             82 00320
        DATA B/ .0000,                                                  82 00330
     2    .2745,.2898,.3042,.3175,.3300,.3418,.3529, .3634,.3733,.3828, 82 00340
     3    .3917,.4003,.4084,.4162,.4237,.4308,.4377, .4443,.4506,.4567, 82 00350
     4    .4626,.4738,.4842,.4940,.5032,.5118,.5200, .5278,.5351,.5421, 82 00360
     5    .5488,.5642,.5780,.5905,.6018,.6122,.6218, .6307,.6389,.6466, 82 00370
     6    .6537,.6668,.6784,.6888,.6982,.7146,.7285, .7405,.7510,.7602, 82 00380
     7    .7685,.7759,.7826,.7970,.8089,.8188,.8272, .8411,.8520,.9051, 82 00390
     8    .8683,.8747,.8850,.8930,.8996,.9051,.9097, .9138,.9173,.9204, 82 00400
     9    .9232,.9257,.9310,.9354,.9389,.9420,.9508, .9586/             82 00410
C                                                                       82 00420
        REAL ETA,LAMBDA,KFUNC                                           82 00430
        EXTERNAL ETA,LAMBDA,KFUNC                                       82 00440
C                                                                       82 00450
        REAL Y,DY,ETA1,LMBDA1,K1                                        82 00460
C                                                                       82 00470
C  Check range                                                          82 00480
        IF(K .GE. KTAB(1) .AND. K .LE. KTAB(NTAB))THEN                  82 00490
C                                                                       82 00500
C  Try polynomial interpolation                                         82 00510
           CALL POLDRI(K,NTAB,KTAB,B,Y,DY)                              82 00520
           IF(ABS(DY) .LE. PREC*ABS(Y))THEN                             82 00530
              B1S2=Y*Y                                                  82 00540
              RETURN                                                    82 00550
           ENDIF                                                        82 00560
        ENDIF                                                           82 00570
C                                                                       82 00580
C  Must calculate --- formula 4.24 of Bambynek, et al.                  82 00590
        ETA1=ETA(K,1)                                                   82 00600
        LMBDA1=LAMBDA(ETA1,1)                                           82 00610
        K1=KFUNC(LMBDA1,ETA1)                                           82 00620
        B1S2=1.+(ETA1*(2.*K1-1.)/(1.-ETA1))                             82 00630
        B1S2=1.-(4.*ETA1*B1S2/(3.*(1.+ETA1)))                           82 00640
        B1S2=B1S2*B1S2                                                  82 00650
C                                                                       82 00660
        RETURN                                                          82 00670
        END                                                             82 00680
C                                                                       83 00010
        REAL FUNCTION B2S2(K)                                           83 00020
C                                                                       83 00030
C  Function used in obtaining correction factor for IB from 2S Electron 83 00040
C  Capture                                                              83 00050
C                                                                       83 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************83 00070
C*                           Present Code                               83 00080
C*                           ------------                               83 00090
C*  ETA     KFUNC   LAMBDA  POLDRI                                      83 00100
C*                                                                      83 00110
C***********************************************************************83 00120
        REAL K                                                          83 00130
C  K=Photon energy measured in units of the K-shell binding energy      83 00140
C    BK=(ZALPHA)**2/2                                                   83 00150
C                                                                       83 00160
        INTEGER NTAB                                                    83 00170
        REAL PREC                                                       83 00180
        PARAMETER (NTAB=80,PREC=1.0E-2)                                 83 00190
C                                                                       83 00200
C  Table XXIII from Bambynek, et al.  Rev. Mod. Phys. 49(1), 77 (1977)  83 00210
C    k=0 value taken from analytical derivation (See text in Bambynek)  83 00220
C    k=0.75 value taken from Glauber and Martin                         83 00230
        REAL KTAB(NTAB),B(NTAB)                                         83 00240
        DATA KTAB/ 0.0, 0.75,                                           83 00250
     2      1.0,   1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,   1.8,  1.9,83 00260
     3      2.0,   2.1,  2.2,  2.3,  2.4,  2.5,  2.6,  2.7,   2.8,  2.9,83 00270
     4      3.0,   3.2,  3.4,  3.6,  3.8,  4.0,  4.2,  4.4,   4.6,  4.8,83 00280
     5      5.0,   5.5,  6.0,  6.5,  7.0,  7.5,  8.0,  8.5,   9.0,  9.5,83 00290
     6     10.0,  11.0, 12.0, 13.0, 14.0, 16.0, 18.0,  20.0, 22.0, 24.0,83 00300
     7     26.0,  28.0, 30.0, 35.0, 40.0, 45.0, 50.0,  60.0, 70.0, 80.0,83 00310
     8     90.0, 100.0,120.0,140.0,160.0,180.0,200.0, 220.0,240.0,260.0,83 00320
     9    280.0, 300.0,350.0,400.0,450.0,500.0,700.0,1000.0/            83 00330
        DATA B/ -1.500,-0.161,                                          83 00340
     2   -.0439,-.0069,.0262,.0561,.0832,.1080,.1308, .1518,.1713,.1894,83 00350
     3    .2063, .2222,.2371,.2511,.2644,.2769,.2888, .3001,.3109,.3211,83 00360
     4    .3309, .3492,.3661,.3816,.3960,.4094,.4220, .4337,.4447,.4551,83 00370
     5    .4649, .4872,.5068,.5243,.5400,.5542,.5672, .5790,.5899,.6000,83 00380
     6    .6093, .6262,.6410,.6541,.6659,.6861,.7031, .7175,.7299,.7409,83 00390
     7    .7505, .7592,.7670,.7836,.7970,.8082,.8177, .8331,.8451,.8549,83 00400
     8    .8630, .8698,.8809,.8896,.8966,.9024,.9073, .9115,.9153,.9185,83 00410
     9    .9214, .9241,.9296,.9341,.9379,.9410,.9501, .9582/            83 00420
C                                                                       83 00430
        REAL ETA,LAMBDA,KFUNC                                           83 00440
        EXTERNAL ETA,LAMBDA,KFUNC                                       83 00450
C                                                                       83 00460
        REAL Y,DY,ETA2,LMBDA2,K2,X1,X2                                  83 00470
C                                                                       83 00480
C  Check range                                                          83 00490
        IF(K .GE. KTAB(1) .AND. K .LE. KTAB(NTAB))THEN                  83 00500
C                                                                       83 00510
C  Try polynomial interpolation                                         83 00520
           CALL POLDRI(K,NTAB,KTAB,B,Y,DY)                              83 00530
           IF(ABS(DY) .LE. PREC*ABS(Y))THEN                             83 00540
              B2S2=Y*Y                                                  83 00550
              RETURN                                                    83 00560
           ENDIF                                                        83 00570
        ENDIF                                                           83 00580
C                                                                       83 00590
C  Must calculate --- formula 4.25 of Bambynek, et al.                  83 00600
        ETA2=ETA(K,2)                                                   83 00610
C    According to Glauber and Martin, this formula is only valid for    83 00620
C      ETA<1.                                                           83 00630
        IF(ETA2 .LT. 1.)THEN                                            83 00640
           LMBDA2=LAMBDA(ETA2,2)                                        83 00650
           K2=KFUNC(LMBDA2,ETA2)                                        83 00660
           X1=(4./3.+5.*ETA2/6.)                                        83 00670
           X1=ETA2*X1/(1.-(ETA2/2.)**2)                                 83 00680
           X2=8.*(1-ETA2*ETA2)*K2/3.                                    83 00690
           X2=X2-3.-ETA2-5.*ETA2*ETA2/4.                                83 00700
           X2=ETA2*ETA2*X2/(1.-(ETA2/2.)**2)**2                         83 00710
           B2S2=1.-X1-X2                                                83 00720
           B2S2=B2S2*B2S2                                               83 00730
        ELSE                                                            83 00740
           PAUSE 'ETA>=1 for B2S not valid'                             83 00750
        ENDIF                                                           83 00760
C                                                                       83 00770
        RETURN                                                          83 00780
        END                                                             83 00790
C                                                                       84 00010
        REAL FUNCTION ETA(K,ORDER)                                      84 00020
C                                                                       84 00030
C  Dimensionless parameter used in IB from Electron Capture ---         84 00040
C    paragraphs following formulae 4.27 and 4.33 of Bambynek            84 00050
C                                                                       84 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************84 00070
C*                        FORTRAN 77 Supplied                           84 00080
C*                        -------------------                           84 00090
C*  SQRT                                                                84 00100
C*                                                                      84 00110
C***********************************************************************84 00120
        INTEGER ORDER                                                   84 00130
        REAL K                                                          84 00140
C                                                                       84 00150
        REAL DIVIDE                                                     84 00160
C                                                                       84 00170
        REAL SQRT                                                       84 00180
        INTRINSIC SQRT                                                  84 00190
C                                                                       84 00200
        DIVIDE=REAL(ORDER)                                              84 00210
C                                                                       84 00220
        ETA=(1./(DIVIDE**2))+K                                          84 00230
        ETA=1./SQRT(ETA)                                                84 00240
        RETURN                                                          84 00250
        END                                                             84 00260
C                                                                       85 00010
        REAL FUNCTION FPHI(X)                                           85 00020
C                                                                       85 00030
C  Integrand for IB strength function from B+-                          85 00040
C                                                                       85 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************85 00060
C*                           Present Code                               85 00070
C*                           ------------                               85 00080
C*  FNEW    PHI                                                         85 00090
C*                                                                      85 00100
C***********************************************************************85 00110
        REAL X                                                          85 00120
C                                                                       85 00130
        REAL FNEW,PHI                                                   85 00140
        EXTERNAL FNEW,PHI                                               85 00150
C                                                                       85 00160
        REAL EMAX,K,AREA                                                85 00170
        COMMON/MAXENG/EMAX,K,AREA                                       85 00180
C                                                                       85 00190
        REAL Y,Z                                                        85 00200
C                                                                       85 00210
        Y=PHI(X,K)                                                      85 00220
        IF(Y .EQ. 0.)THEN                                               85 00230
           FPHI=0.                                                      85 00240
           RETURN                                                       85 00250
        ENDIF                                                           85 00260
        Z=FNEW(X)                                                       85 00270
        IF(Z .EQ. 0.)THEN                                               85 00280
           FPHI=0.                                                      85 00290
           RETURN                                                       85 00300
        ENDIF                                                           85 00310
        FPHI=Y*Z                                                        85 00320
        RETURN                                                          85 00330
        END                                                             85 00340
C                                                                       86 00010
        REAL FUNCTION KFUNC(LAMBDA,ETA)                                 86 00020
C                                                                       86 00030
C  K function used for IB from Electron Capture --- formula 4.27 of     86 00040
C    Bambynek                                                           86 00050
C                                                                       86 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************86 00070
C*                        FORTRAN 77 Supplied                           86 00080
C*                        -------------------                           86 00090
C*  ABS     ALOG                                                        86 00100
C*                                                                      86 00110
C***********************************************************************86 00120
        REAL LAMBDA,ETA                                                 86 00130
C                                                                       86 00140
        REAL PREC                                                       86 00150
        PARAMETER (PREC=1.0E-6)                                         86 00160
C                                                                       86 00170
        REAL ABS,ALOG                                                   86 00180
        INTRINSIC ABS,ALOG                                              86 00190
C                                                                       86 00200
        INTEGER J                                                       86 00210
        REAL TRY1,TRY2,AJ                                               86 00220
C                                                                       86 00230
        IF(LAMBDA .LT. 1.E-10)THEN                                      86 00240
           KFUNC=0.                                                     86 00250
           RETURN                                                       86 00260
        ENDIF                                                           86 00270
        TRY1=ALOG(1.+LAMBDA)                                            86 00280
        J=1                                                             86 00290
100     AJ=REAL(J)                                                      86 00300
        TRY2=TRY1-ETA*((-LAMBDA)**J)/(AJ*(AJ-ETA))                      86 00310
        IF(ABS(TRY2-TRY1) .LE. ABS(PREC*TRY1))THEN                      86 00320
           KFUNC=TRY2                                                   86 00330
           RETURN                                                       86 00340
        ELSE                                                            86 00350
           TRY1=TRY2                                                    86 00360
           J=J+1                                                        86 00370
           GOTO 100                                                     86 00380
        ENDIF                                                           86 00390
        END                                                             86 00400
C                                                                       87 00010
        REAL FUNCTION KST(K)                                            87 00020
C                                                                       87 00030
C  Integrand for calculating average energy for IB from B+-             87 00040
C                                                                       87 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************87 00060
C*                           Present Code                               87 00070
C*                           ------------                               87 00080
C*  ST                                                                  87 00090
C*                                                                      87 00100
C***********************************************************************87 00110
        REAL K                                                          87 00120
C                                                                       87 00130
        REAL ST                                                         87 00140
        EXTERNAL ST                                                     87 00150
C                                                                       87 00160
        IF(K .EQ. 0.)THEN                                               87 00170
           KST=0.                                                       87 00180
           RETURN                                                       87 00190
        ENDIF                                                           87 00200
        KST=K*ST(K)                                                     87 00210
        RETURN                                                          87 00220
        END                                                             87 00230
C                                                                       88 00010
        REAL FUNCTION I1S(K)                                            88 00020
C                                                                       88 00030
C       Intensity integrand for 1S allowed IB calculation               88 00040
C                                                                       88 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************88 00060
C*                           Present Code                               88 00070
C*                           ------------                               88 00080
C*  R1S                                                                 88 00090
C*                                                                      88 00100
C***********************************************************************88 00110
        REAL K                                                          88 00120
C                                                                       88 00130
        REAL Q1S,Q2S,Q2P,Q3P,EK                                         88 00140
        COMMON /QALL/Q1S,Q2S,Q2P,Q3P,EK                                 88 00150
C                                                                       88 00160
        REAL R1S                                                        88 00170
        EXTERNAL R1S                                                    88 00180
C                                                                       88 00190
        REAL KEK                                                        88 00200
C                                                                       88 00210
        KEK=K/EK                                                        88 00220
        IF(K .EQ. 0. .OR. K .EQ. Q1S)THEN                               88 00230
           I1S=0.                                                       88 00240
        ELSE                                                            88 00250
           I1S=(K*(1.-K/Q1S)**2)*R1S(KEK)                               88 00260
        ENDIF                                                           88 00270
        RETURN                                                          88 00280
        END                                                             88 00290
C                                                                       89 00010
        REAL FUNCTION E1S(K)                                            89 00020
C                                                                       89 00030
C       Energy integrand for 1S allowed IB calculation                  89 00040
C                                                                       89 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************89 00060
C*                           Present Code                               89 00070
C*                           ------------                               89 00080
C*  E1S                                                                 89 00090
C*                                                                      89 00100
C***********************************************************************89 00110
        REAL K                                                          89 00120
C                                                                       89 00130
        REAL Q1S                                                        89 00140
        COMMON /QALL/Q1S                                                89 00150
C                                                                       89 00160
        REAL I1S                                                        89 00170
        EXTERNAL I1S                                                    89 00180
C                                                                       89 00190
        IF(K .EQ. 0. .OR. K .EQ. Q1S)THEN                               89 00200
           E1S=0.                                                       89 00210
        ELSE                                                            89 00220
           E1S=K*I1S(K)                                                 89 00230
        ENDIF                                                           89 00240
        RETURN                                                          89 00250
        END                                                             89 00260
C                                                                       90 00010
        REAL FUNCTION I1SU(K)                                           90 00020
C                                                                       90 00030
C       Intensity integrand for 1S unique IB calculation                90 00040
C                                                                       90 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************90 00060
C*                           Present Code                               90 00070
C*                           ------------                               90 00080
C*  I1S                                                                 90 00090
C*                                                                      90 00100
C***********************************************************************90 00110
        REAL K                                                          90 00120
C                                                                       90 00130
        REAL Q1S                                                        90 00140
        COMMON /QALL/Q1S                                                90 00150
C                                                                       90 00160
        REAL I1S                                                        90 00170
        EXTERNAL I1S                                                    90 00180
C                                                                       90 00190
        IF(K .EQ. 0. .OR. K .EQ. Q1S)THEN                               90 00200
           I1SU=0.                                                      90 00210
        ELSE                                                            90 00220
           I1SU=I1S(K)*((1.-K/Q1S)**2+(K/Q1S)**2)                       90 00230
        ENDIF                                                           90 00240
        RETURN                                                          90 00250
        END                                                             90 00260
C                                                                       91 00010
        REAL FUNCTION E1SU(K)                                           91 00020
C                                                                       91 00030
C       Energy integrand for 1S unique IB calculation                   91 00040
C                                                                       91 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************91 00060
C*                           Present Code                               91 00070
C*                           ------------                               91 00080
C*  I1SU                                                                91 00090
C*                                                                      91 00100
C***********************************************************************91 00110
        REAL K                                                          91 00120
C                                                                       91 00130
        REAL Q1S                                                        91 00140
        COMMON /QALL/Q1S                                                91 00150
C                                                                       91 00160
        REAL I1SU                                                       91 00170
        EXTERNAL I1SU                                                   91 00180
C                                                                       91 00190
        IF(K .EQ. 0. .OR. K .EQ. Q1S)THEN                               91 00200
           E1SU=0.                                                      91 00210
        ELSE                                                            91 00220
           E1SU=K*I1SU(K)                                               91 00230
        ENDIF                                                           91 00240
        RETURN                                                          91 00250
        END                                                             91 00260
C                                                                       92 00010
        REAL FUNCTION I2S(K)                                            92 00020
C                                                                       92 00030
C       Intensity integrand for 2S IB calculation                       92 00040
C                                                                       92 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************92 00060
C*                           Present Code                               92 00070
C*                           ------------                               92 00080
C*  R2S                                                                 92 00090
C*                                                                      92 00100
C***********************************************************************92 00110
        REAL K                                                          92 00120
C                                                                       92 00130
        REAL Q1S,Q2S,Q2P,Q3P,EK                                         92 00140
        COMMON /QALL/Q1S,Q2S,Q2P,Q3P,EK                                 92 00150
C                                                                       92 00160
        REAL R2S                                                        92 00170
        EXTERNAL R2S                                                    92 00180
C                                                                       92 00190
        REAL KEK                                                        92 00200
C                                                                       92 00210
        KEK=K/EK                                                        92 00220
        IF(K .EQ. 0. .OR. K .EQ. Q2S)THEN                               92 00230
           I2S=0.                                                       92 00240
        ELSE                                                            92 00250
           I2S=(K*((Q2S-K)/Q1S)**2)*R2S(KEK)                            92 00260
        ENDIF                                                           92 00270
        RETURN                                                          92 00280
        END                                                             92 00290
C                                                                       93 00010
        REAL FUNCTION E2S(K)                                            93 00020
C                                                                       93 00030
C       Energy integrand for 2S IB calculation                          93 00040
C                                                                       93 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************93 00060
C*                           Present Code                               93 00070
C*                           ------------                               93 00080
C*  I2S                                                                 93 00090
C*                                                                      93 00100
C***********************************************************************93 00110
        REAL K                                                          93 00120
C                                                                       93 00130
        REAL Q1S,Q2S                                                    93 00140
        COMMON /QALL/Q1S,Q2S                                            93 00150
C                                                                       93 00160
        REAL I2S                                                        93 00170
        EXTERNAL I2S                                                    93 00180
C                                                                       93 00190
        IF(K .EQ. 0. .OR. K .EQ. Q2S)THEN                               93 00200
           E2S=0.                                                       93 00210
        ELSE                                                            93 00220
           E2S=K*I2S(K)                                                 93 00230
        ENDIF                                                           93 00240
        RETURN                                                          93 00250
        END                                                             93 00260
C                                                                       94 00010
        REAL FUNCTION I2P(K)                                            94 00020
C                                                                       94 00030
C       Intensity integrand for 2P IB calculation                       94 00040
C                                                                       94 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************94 00060
C*                           Present Code                               94 00070
C*                           ------------                               94 00080
C*  Q2P2                                                                94 00090
C*                                                                      94 00100
C***********************************************************************94 00110
        REAL K                                                          94 00120
C                                                                       94 00130
        REAL Q1S,Q2S,Q2P,Q3P,EK                                         94 00140
        COMMON /QALL/Q1S,Q2S,Q2P,Q3P,EK                                 94 00150
C                                                                       94 00160
        REAL Q2P2                                                       94 00170
        EXTERNAL Q2P2                                                   94 00180
C                                                                       94 00190
        REAL KEK                                                        94 00200
C                                                                       94 00210
        KEK=K/EK                                                        94 00220
        IF(K .EQ. 0. .OR. K .EQ. Q2P)THEN                               94 00230
           I2P=0.                                                       94 00240
        ELSE                                                            94 00250
           I2P=(K*((Q2P-K)/Q1S)**2)*Q2P2(KEK)                           94 00260
        ENDIF                                                           94 00270
        RETURN                                                          94 00280
        END                                                             94 00290
C                                                                       95 00010
        REAL FUNCTION E2P(K)                                            95 00020
C                                                                       95 00030
C       Energy integrand for 2P IB calculation                          95 00040
C                                                                       95 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************95 00060
C*                           Present Code                               95 00070
C*                           ------------                               95 00080
C*  I2P                                                                 95 00090
C*                                                                      95 00100
C***********************************************************************95 00110
        REAL K                                                          95 00120
C                                                                       95 00130
        REAL Q1S,Q2S,Q2P                                                95 00140
        COMMON /QALL/Q1S,Q2S,Q2P                                        95 00150
C                                                                       95 00160
        REAL I2P                                                        95 00170
        EXTERNAL I2P                                                    95 00180
C                                                                       95 00190
        IF(K .EQ. 0. .OR. K .EQ. Q2P)THEN                               95 00200
           E2P=0.                                                       95 00210
        ELSE                                                            95 00220
           E2P=K*I2P(K)                                                 95 00230
        ENDIF                                                           95 00240
        RETURN                                                          95 00250
        END                                                             95 00260
C                                                                       96 00010
        REAL FUNCTION I3P(K)                                            96 00020
C                                                                       96 00030
C       Intensity integrand for 3P IB calculation                       96 00040
C                                                                       96 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************96 00060
C*                           Present Code                               96 00070
C*                           ------------                               96 00080
C*  Q3P2                                                                96 00090
C*                                                                      96 00100
C***********************************************************************96 00110
        REAL K                                                          96 00120
C                                                                       96 00130
        REAL Q1S,Q2S,Q2P,Q3P,EK                                         96 00140
        COMMON /QALL/Q1S,Q2S,Q2P,Q3P,EK                                 96 00150
C                                                                       96 00160
        REAL Q3P2                                                       96 00170
        EXTERNAL Q3P2                                                   96 00180
C                                                                       96 00190
        REAL KEK                                                        96 00200
C                                                                       96 00210
        KEK=K/EK                                                        96 00220
        IF(K .EQ. 0. .OR. K .EQ. Q3P)THEN                               96 00230
           I3P=0.                                                       96 00240
        ELSE                                                            96 00250
           I3P=(K*((Q3P-K)/Q1S)**2)*Q3P2(KEK)                           96 00260
        ENDIF                                                           96 00270
        RETURN                                                          96 00280
        END                                                             96 00290
C                                                                       97 00010
        REAL FUNCTION E3P(K)                                            97 00020
C                                                                       97 00030
C       Energy integrand for 3P IB calculation                          97 00040
C                                                                       97 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************97 00060
C*                           Present Code                               97 00070
C*                           ------------                               97 00080
C*  I3P                                                                 97 00090
C*                                                                      97 00100
C***********************************************************************97 00110
        REAL K                                                          97 00120
C                                                                       97 00130
        REAL Q1S,Q2S,Q2P,Q3P                                            97 00140
        COMMON /QALL/Q1S,Q2S,Q2P,Q3P                                    97 00150
C                                                                       97 00160
        REAL I3P                                                        97 00170
        EXTERNAL I3P                                                    97 00180
C                                                                       97 00190
        IF(K .EQ. 0. .OR. K .EQ. Q2P)THEN                               97 00200
           E3P=0.                                                       97 00210
        ELSE                                                            97 00220
           E3P=K*I3P(K)                                                 97 00230
        ENDIF                                                           97 00240
        RETURN                                                          97 00250
        END                                                             97 00260
C                                                                       98 00010
C                                                                       98 00020
        REAL FUNCTION LAMBDA(ETA,ORDER)                                 98 00030
C                                                                       98 00040
C  Dimensionless parameter used in IB from Electron Capture ---         98 00050
C    paragraphs following formulae 4.24 and 4.25 of Bambynek            98 00060
C                                                                       98 00070
        INTEGER ORDER                                                   98 00080
        REAL ETA                                                        98 00090
C                                                                       98 00100
        REAL RORDER                                                     98 00110
C                                                                       98 00120
        RORDER=REAL(ORDER)                                              98 00130
        LAMBDA=(RORDER-ETA)/(RORDER+ETA)                                98 00140
        RETURN                                                          98 00150
        END                                                             98 00160
C                                                                       99 00010
        REAL FUNCTION PHI(WE,K)                                         99 00020
C                                                                       99 00030
C  Knipp-Uhlenbeck-Bloch formalism for internal Bremsstrahlung          99 00040
C    associated with B-decay                                            99 00050
C                                                                       99 00060
C    K=Photon energy                                                    99 00070
C    WE and W, PE and P=Energies and momenta of the electron            99 00080
C      before and after the emission of a photon with energy K          99 00090
C                                                                       99 00100
C    [B.G. Petterson, "The Internal Bremsstrahlung" in Alpha, Beta, and 99 00110
C    Gamma Spectroscopy ed. Siegbahn (North-Holland Publishing Co.,     99 00120
C    Amsterdam, 1965), Vol. 2, p.1569]                                  99 00130
C                                                                       99 00140
C  Note singularity at K=0                                              99 00150
C                                                                       99 00160
C  Constants from formula are applied in calling module after integratio99 00170
C                                                                       99 00180
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************99 00190
C*                        FORTRAN 77 Supplied                           99 00200
C*                        -------------------                           99 00210
C*  ALOG    SQRT                                                        99 00220
C*                                                                      99 00230
C***********************************************************************99 00240
        REAL WE,K                                                       99 00250
C                                                                       99 00260
        REAL W,P,PE,A                                                   99 00270
C                                                                       99 00280
        REAL ALOG,SQRT                                                  99 00290
        INTRINSIC ALOG,SQRT                                             99 00300
C                                                                       99 00310
        IF(WE .GT. K)THEN                                               99 00320
           W=WE-K                                                       99 00330
        ELSE                                                            99 00340
           PHI=0.                                                       99 00350
           RETURN                                                       99 00360
        ENDIF                                                           99 00370
        IF(W .GT. 1.)THEN                                               99 00380
           P=SQRT(W**2-1.0)                                             99 00390
        ELSE                                                            99 00400
           P=0.                                                         99 00410
        ENDIF                                                           99 00420
        IF(WE .GT. 1.)THEN                                              99 00430
           PE=SQRT(WE**2-1.0)                                           99 00440
        ELSE                                                            99 00450
           PE=0.                                                        99 00460
        ENDIF                                                           99 00470
        A=(WE**2+W**2)*ALOG(W+P)/WE                                     99 00480
        A=A-2.*P                                                        99 00490
        PHI=A/(PE*K)                                                    99 00500
        RETURN                                                          99 00510
        END                                                             99 00520
C                                                                       00 00010
        REAL FUNCTION Q2P2(K)                                           00 00020
C                                                                       00 00030
C  Correction facture for IB from 2P Electron Capture                   00 00040
C                                                                       00 00050
        REAL K                                                          00 00060
C  K=Photon energy measured in units of the K-shell binding energy      00 00070
C    BK=(ZALPHA)**2/2                                                   00 00080
C                                                                       00 00090
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************00 00100
C*                           Present Code                               00 00110
C*                           ------------                               00 00120
C*  ETA     KFUNC   LAMBDA  POLDRI                                      00 00130
C*                                                                      00 00140
C***********************************************************************00 00150
        INTEGER NTAB                                                    00 00160
        REAL PREC                                                       00 00170
        PARAMETER (NTAB=74,PREC=1.0E-4)                                 00 00180
C                                                                       00 00190
C  Table XXIV from Bambynek, et al.  Rev. Mod. Phys. 49(1), 77 (1977)   00 00200
C    k=0 value added from analytical analysis of Glauber and Martin     00 00210
        REAL KTAB(NTAB),Q(NTAB)                                         00 00220
        DATA KTAB/  0.0,                                                00 00230
     2       1.0,   1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,  1.8,  1.9,00 00240
     3       2.0,   2.1,  2.2,  2.3,  2.4,  2.5,  2.6,  2.7,  2.8,  2.9,00 00250
     4       3.0,   3.2,  3.4,  3.6,  3.8,  4.0,  4.2,  4.4,  4.6,  4.8,00 00260
     5       5.0,   5.2,  5.4,  5.6,  5.8,  6.0,  6.2,  6.4,  6.6,  6.8,00 00270
     6       7.0,   7.2,  7.4,  7.6,  7.8,  8.0,  8.2,  8.4,  8.6,  8.8,00 00280
     7       9.0,   9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5,00 00290
     8      14.0,  14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5,00 00300
     9      19.0,  19.5, 20.0/                                          00 00310
        DATA Q/ -0.75  ,                                                00 00320
     2    1.5215,1.0737,.8259,.6690,.5608,.4819,.4219,.3747,.3367,.3055,00 00330
     3     .2793, .2572,.2382,.2217,.2072,.1945,.1832,.1731,.1640,.1557,00 00340
     4     .1483, .1352,.1242,.1148,.1067,.0996,.0934,.0879,.0830,.0785,00 00350
     5     .0746, .0709,.0677,.0647,.0619,.0594,.0570,.0548,.0528,.0510,00 00360
     6     .0492, .0476,.0460,.0446,.0432,.0419,.0407,.0396,.0385,.0375,00 00370
     7     .0365, .0343,.0323,.0305,.0289,.0275,.0262,.0250,.0239,.0229,00 00380
     8     .0220, .0212,.0204,.0196,.0190,.0183,.0177,.0172,.0166,.0161,00 00390
     9     .0157, .0152,.0148/                                          00 00400
C                                                                       00 00410
        REAL LAMBDA,ETA,KFUNC                                           00 00420
        EXTERNAL LAMBDA,ETA,KFUNC                                       00 00430
C                                                                       00 00440
        REAL Y,DY,ETA2,LMBDA2,K2                                        00 00450
C                                                                       00 00460
C  Check range                                                          00 00470
        IF(K .GE. KTAB(1) .AND. K .LE. KTAB(NTAB))THEN                  00 00480
C                                                                       00 00490
C  Try polynomial interpolation                                         00 00500
           CALL POLDRI(K,NTAB,KTAB,Q,Y,DY)                              00 00510
           IF(ABS(DY) .LE. PREC*ABS(Y))THEN                             00 00520
              Q2P2=Y*Y                                                  00 00530
              RETURN                                                    00 00540
           ENDIF                                                        00 00550
        ENDIF                                                           00 00560
C                                                                       00 00570
C  Must calculate --- formula 4.32 of Bambynek, et al.                  00 00580
        ETA2=ETA(K,2)                                                   00 00590
        LMBDA2=LAMBDA(ETA2,2)                                           00 00600
        K2=KFUNC(LMBDA2,ETA2)                                           00 00610
        Q2P2=1.+(2.*ETA2/3.)-(7.*ETA2*ETA2/12.)+(4.*ETA2*ETA2*K2/3.)    00 00620
        Q2P2=(ETA2*ETA2*Q2P2)/(4.*(1-(ETA2/2.)**2)**2)                  00 00630
        Q2P2=Q2P2*Q2P2                                                  00 00640
C                                                                       00 00650
        RETURN                                                          00 00660
        END                                                             00 00670
C                                                                       01 00010
        REAL FUNCTION Q3P2(K)                                           01 00020
C                                                                       01 00030
C  Correction facture for IB from 3P Electron Capture                   01 00040
C                                                                       01 00050
        REAL K                                                          01 00060
C  K=Photon energy measured in units of the K-shell binding energy      01 00070
C    BK=(ZALPHA)**2/2                                                   01 00080
C                                                                       01 00090
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************01 00100
C*                           Present Code                               01 00110
C*                           ------------                               01 00120
C*  ETA     KFUNC   LAMBDA  POLDRI                                      01 00130
C*                                                                      01 00140
C***********************************************************************01 00150
        INTEGER NTAB                                                    01 00160
        REAL PREC                                                       01 00170
        PARAMETER (NTAB=73,PREC=1.0E-4)                                 01 00180
C                                                                       01 00190
C  Table XXIV from Bambynek, et al.  Rev. Mod. Phys. 49(1), 77 (1977)   01 00200
        REAL KTAB(NTAB),Q(NTAB)                                         01 00210
        DATA KTAB/                                                      01 00220
     2       1.0,  1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,  1.8,  1.9, 01 00230
     3       2.0,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,  2.7,  2.8,  2.9, 01 00240
     4       3.0,  3.2,  3.4,  3.6,  3.8,  4.0,  4.2,  4.4,  4.6,  4.8, 01 00250
     5       5.0,  5.2,  5.4,  5.6,  5.8,  6.0,  6.2,  6.4,  6.6,  6.8, 01 00260
     6       7.0,  7.2,  7.4,  7.6,  7.8,  8.0,  8.2,  8.4,  8.6,  8.8, 01 00270
     7       9.0,  9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5, 13.0, 13.5, 01 00280
     8      14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 01 00290
     9      19.0, 19.5, 20.0/                                           01 00300
        DATA Q/                                                         01 00310
     2    1.7104,.9070,.6183,.4691,.3778,.3161,.2715,.2379,.2115,.1903, 01 00320
     3     .1729,.1584,.1460,.1354,.1262,.1181,.1110,.1047,.0990,.0939, 01 00330
     4     .0893,.0813,.0745,.0688,.0639,.0596,.0558,.0525,.0595,.0468, 01 00340
     5     .0444,.0423,.0403,.0385,.0368,.0353,.0339,.0326,.0314,.0303, 01 00350
     6     .0292,.0283,.0273,.0265,.0257,.0249,.0242,.0235,.0229,.0223, 01 00360
     7     .0217,.0204,.0192,.0181,.0172,.1063,.0155,.0148,.0142,.0136, 01 00370
     8     .0131,.0126,.0121,.0117,.0112,.0109,.0105,.0102,.0099,.0096, 01 00380
     9     .0093,.0090,.0088/                                           01 00390
C                                                                       01 00400
        REAL LAMBDA,ETA,KFUNC                                           01 00410
        EXTERNAL LAMBDA,ETA,KFUNC                                       01 00420
C                                                                       01 00430
        REAL Y,DY,ETA3,LMBDA3,K3                                        01 00440
C                                                                       01 00450
C  Check range                                                          01 00460
        IF(K .GE. KTAB(1) .AND. K .LE. KTAB(NTAB))THEN                  01 00470
C                                                                       01 00480
C  Try polynomial interpolation                                         01 00490
           CALL POLDRI(K,NTAB,KTAB,Q,Y,DY)                              01 00500
           IF(ABS(DY) .LE. PREC*ABS(Y))THEN                             01 00510
              Q3P2=Y*Y                                                  01 00520
              RETURN                                                    01 00530
           ENDIF                                                        01 00540
        ENDIF                                                           01 00550
C                                                                       01 00560
C  Must calculate --- formula 4.33 of Bambynek, et al.                  01 00570
        ETA3=ETA(K,3)                                                   01 00580
        LMBDA3=LAMBDA(ETA3,3)                                           01 00590
        K3=KFUNC(LMBDA3,ETA3)                                           01 00600
        Q3P2=1.+ETA3-2.*(ETA3/3.)**2-8.*(ETA3/3.)**3                    01 00610
        Q3P2=(1.-ETA3/3.)*Q3P2                                          01 00620
        Q3P2=Q3P2+4.*ETA3*ETA3*(1.-ETA3*ETA3/3.)*K3/3.                  01 00630
        Q3P2=(4.*ETA3*ETA3*Q3P2)/(27.*(1-(ETA3/3.)**2)**3)              01 00640
        Q3P2=Q3P2*Q3P2                                                  01 00650
C                                                                       01 00660
        RETURN                                                          01 00670
        END                                                             01 00680
C                                                                       02 00010
        REAL FUNCTION R1S(K)                                            02 00020
C                                                                       02 00030
C  Relativistic Coulomb correction factor for IB from 1S shell          02 00040
C                                                                       02 00050
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************02 00060
C*                           Present Code                               02 00070
C*                           ------------                               02 00080
C*  B1S2    POLDRI                                                      02 00090
C*                                                                      02 00100
C***********************************************************************02 00110
        REAL K                                                          02 00120
C  K=Photon energy measured in units of the K-shell binding energy      02 00130
C    BK=(ZALPHA)**2/2                                                   02 00140
C                                                                       02 00150
        INTEGER NTAB                                                    02 00160
        REAL PREC                                                       02 00170
        PARAMETER (NTAB=79,PREC=1.0E-4)                                 02 00180
C                                                                       02 00190
        REAL B1S2                                                       02 00200
        EXTERNAL B1S2                                                   02 00210
C                                                                       02 00220
C  Table XXII from Bambynek, et al.  Rev. Mod. Phys. 49(1), 77 (1977)   02 00230
C    k=0 value taken from anaylytical analysis                          02 00240
        REAL KTAB(NTAB),R(NTAB)                                         02 00250
        DATA KTAB/0.0,                                                  02 00260
     2      1.0,  1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,   1.8,  1.9, 02 00270
     3      2.0,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,  2.7,   2.8,  2.9, 02 00280
     4      3.0,  3.2,  3.4,  3.6,  3.8,  4.0,  4.2,  4.4,   4.6,  4.8, 02 00290
     5      5.0,  5.5,  6.0,  6.5,  7.0,  7.5,  8.0,  8.5,   9.0,  9.5, 02 00300
     6     10.0, 11.0, 12.0, 13.0, 14.0, 16.0, 18.0,  20.0, 22.0, 24.0, 02 00310
     7     26.0, 28.0, 30.0, 35.0, 40.0, 45.0, 50.0,  60.0, 70.0, 80.0, 02 00320
     8     90.0,100.0,120.0,140.0,160.0,180.0,200.0, 220.0,240.0,260.0, 02 00330
     9    280.0,300.0,350.0,400.0,450.0,500.0,700.0,1000.0/             02 00340
        DATA R/ .5000,                                                  02 00350
     2    .5377,.5420,.5463,.5504,.5545,.5584,.5623, .5660,.5697,.5733, 02 00360
     3    .5767,.5801,.5834,.5866,.5897,.5928,.5958, .5987,.6015,.6043, 02 00370
     4    .6070,.6122,.6172,.6220,.6266,.6310,.6352, .6393,.6432,.6470, 02 00380
     5    .6506,.6592,.6670,.6743,.6811,.6874,.6933, .6989,.7041,.7090, 02 00390
     6    .7137,.7223,.7301,.7372,.7438,.7554,.7654, .7742,.7820,.7890, 02 00400
     7    .7953,.8010,.8063,.8176,.9374,.8352,.8422, .8537,.8629,.8706, 02 00410
     8    .8770,.8825,.8916,.8988,.9046,.9096,.9138, .9175,.9207,0.9236,02 00420
     9    .9261,.9285,.9334,.9374,.9408,.9437,.9520, .9595/             02 00430
C                                                                       02 00440
        REAL Y,DY                                                       02 00450
C                                                                       02 00460
C  Check range                                                          02 00470
        IF(K .GE. KTAB(1) .AND. K .LE. KTAB(NTAB))THEN                  02 00480
C                                                                       02 00490
C  Try polynomial interpolation                                         02 00500
           CALL POLDRI(K,NTAB,KTAB,R,Y,DY)                              02 00510
           IF(ABS(DY) .LE. PREC*ABS(Y))THEN                             02 00520
              R1S=Y                                                     02 00530
              RETURN                                                    02 00540
           ENDIF                                                        02 00550
        ENDIF                                                           02 00560
C                                                                       02 00570
C  Must calculate --- formula 4.23 of Bambynek, et al.                  02 00580
        R1S=0.5*(1.+B1S2(K))                                            02 00590
C                                                                       02 00600
        RETURN                                                          02 00610
        END                                                             02 00620
C                                                                       03 00010
C                                                                       03 00020
        REAL FUNCTION R2S(K)                                            03 00030
C                                                                       03 00040
C  Correction facture for IB from 2S Electron Capture                   03 00050
C                                                                       03 00060
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************03 00070
C*                           Present Code                               03 00080
C*                           ------------                               03 00090
C*  B2S2    POLDRI                                                      03 00100
C*                                                                      03 00110
C***********************************************************************03 00120
        REAL K                                                          03 00130
C  K=Photon energy measured in units of the K-shell binding energy      03 00140
C    BK=(ZALPHA)**2/2                                                   03 00150
C                                                                       03 00160
        INTEGER NTAB                                                    03 00170
        REAL PREC                                                       03 00180
        PARAMETER (NTAB=80,PREC=1.0E-4)                                 03 00190
C                                                                       03 00200
        REAL B2S2                                                       03 00210
        EXTERNAL B2S2                                                   03 00220
C                                                                       03 00230
        REAL Y,DY                                                       03 00240
C                                                                       03 00250
C  Table XXIII from Bambynek, et al.  Rev. Mod. Phys. 49(1), 77 (1977)  03 00260
C    k=0. and 0.75 values added                                         03 00270
        REAL KTAB(NTAB),R(NTAB)                                         03 00280
        DATA KTAB/0.0, 0.75,                                            03 00290
     2      1.0,  1.1,  1.2,  1.3,  1.4,  1.5,  1.6,  1.7,   1.8,  1.9, 03 00300
     3      2.0,  2.1,  2.2,  2.3,  2.4,  2.5,  2.6,  2.7,   2.8,  2.9, 03 00310
     4      3.0,  3.2,  3.4,  3.6,  3.8,  4.0,  4.2,  4.4,   4.6,  4.8, 03 00320
     5      5.0,  5.5,  6.0,  6.5,  7.0,  7.5,  8.0,  8.5,   9.0,  9.5, 03 00330
     6     10.0, 11.0, 12.0, 13.0, 14.0, 16.0, 18.0,  20.0, 22.0, 24.0, 03 00340
     7     26.0, 28.0, 30.0, 35.0, 40.0, 45.0, 50.0,  60.0, 70.0, 80.0, 03 00350
     8     90.0,100.0,120.0,140.0,160.0,180.0,200.0, 220.0,240.0,260.0, 03 00360
     9    280.0,300.0,350.0,400.0,450.0,500.0,700.0,1000.0/             03 00370
        DATA R/ 1.625,.5130,                                            03 00380
     2    .5010,.5000,.5003,.5016,.5035,.5058,.5085, .5115,.5147,.5179, 03 00390
     3    .5213,.5247,.5281,.5315,.5349,.5383,.5417, .5450,.5483,.5516, 03 00400
     4    .5547,.5610,.5670,.5728,.5784,.5838,.5890, .5940,.5989,.6036, 03 00410
     5    .6081,.6187,.6284,.6375,.6458,.6536,.6608, .6678,.6740,.6800, 03 00420
     6    .6856,.6960,.7054,.7139,.7217,.7354,.7471, .7574,.7664,.7744, 03 00430
     7    .7505,.7882,.7942,.8070,.8176,.8266,.8343, .8470,.8571,.8654, 03 00440
     8    .8723,.8783,.8880,.8957,.9019,.9071,.9116, .9155,.9188,.9218, 03 00450
     9    .9214,.9270,.9321,.9363,.9398,.9427,.9513, .9590/             03 00460
C                                                                       03 00470
C  Check range                                                          03 00480
        IF(K .GE. KTAB(1) .AND. K .LE. KTAB(NTAB))THEN                  03 00490
C                                                                       03 00500
C  Try polynomial interpolation                                         03 00510
           CALL POLDRI(K,NTAB,KTAB,R,Y,DY)                              03 00520
           IF(ABS(DY) .LE. PREC*ABS(Y))THEN                             03 00530
              R2S=Y                                                     03 00540
              RETURN                                                    03 00550
           ENDIF                                                        03 00560
        ENDIF                                                           03 00570
C                                                                       03 00580
C  Must calculate --- formula 4.23 of Bambynek, et al.                  03 00590
        R2S=0.5*(1.+B2S2(K))                                            03 00600
C                                                                       03 00610
        RETURN                                                          03 00620
        END                                                             03 00630
C                                                                       04 00010
        REAL FUNCTION ST(KK)                                            04 00020
C                                                                       04 00030
C  Strength function for IB from B+-.                                   04 00040
C    [B.G. Petterson, "The Internal Bremsstrahlung" in Alpha, Beta, and 04 00050
C    Gamma Spectroscopy ed. Siegbahn (North-Holland Publishing Co.,     04 00060
C    Amsterdam, 1965), Vol. 2, p.1569]                                  04 00070
C                                                                       04 00080
C***************** SUBROUTINES AND FUNCTIONS CALLED ********************04 00090
C*                           Present Code                               04 00100
C*                           ------------                               04 00110
C*  FPHI    LOCATE  MIDPNT  POLINT  QROMO   Y1                          04 00120
C*                                                                      04 00130
C*                        FORTRAN 77 Supplied                           04 00140
C*                        -------------------                           04 00150
C*  ABS                                                                 04 00160
C*                                                                      04 00170
C***********************************************************************04 00180
        REAL KK                                                         04 00190
C                                                                       04 00200
        INTEGER NSAV,NSET,NSTEPM                                        04 00210
        PARAMETER (NSAV=200,NSET=3,NSTEPM=6)                            04 00220
C                                                                       04 00230
        REAL Y1,FPHI,MIDPNT                                             04 00240
        EXTERNAL Y1,FPHI,QROMO,MIDPNT                                   04 00250
C                                                                       04 00260
        REAL EMAX,K,AREA                                                04 00270
        COMMON/MAXENG/EMAX,K,AREA                                       04 00280
C                                                                       04 00290
        INTEGER NST                                                     04 00300
        COMMON/STCOMM/NST                                               04 00310
C                                                                       04 00320
        REAL DUM,EPREC                                                  04 00330
        COMMON/PREC2/DUM,EPREC                                          04 00340
C                                                                       04 00350
        INTEGER I,J,LOWER,NSTEP                                         04 00360
        REAL X,Y,DY,SS,TEMP1,TEMP2,KSAV(NSAV),STSAV(NSAV)               04 00370
C                                                                       04 00380
        REAL ABS                                                        04 00390
        INTRINSIC ABS                                                   04 00400
C                                                                       04 00410
        IF(AREA .EQ. 0.)THEN                                            04 00420
           ST=0.                                                        04 00430
           RETURN                                                       04 00440
        ENDIF                                                           04 00450
        K=KK                                                            04 00460
        IF(NST .GE. NSET .AND. K .LE. KSAV(NST-1))THEN                  04 00470
           CALL LOCATE(KSAV,NST-1,K,LOWER)                              04 00480
           IF(LOWER .EQ. 0)THEN                                         04 00490
              IF(ABS(K-KSAV(1)) .LT. 0.000001)THEN                      04 00500
                 ST=STSAV(1)                                            04 00510
                 RETURN                                                 04 00520
              ENDIF                                                     04 00530
           ENDIF                                                        04 00540
           IF(LOWER .NE. 0)THEN                                         04 00550
              IF(ABS(K-KSAV(LOWER)) .LT. 0.000001)THEN                  04 00560
                 ST=STSAV(LOWER)                                        04 00570
                 RETURN                                                 04 00580
              ENDIF                                                     04 00590
              IF(ABS(K-KSAV(LOWER+1)) .LT. 0.000001)THEN                04 00600
                 ST=STSAV(LOWER+1)                                      04 00610
                 RETURN                                                 04 00620
              ENDIF                                                     04 00630
              NSTEP=MIN0(NST-1,NSTEPM)                                  04 00640
              IF(LOWER .GT. NST-1-NSTEP)THEN                            04 00650
                 LOWER=NST-1-NSTEP                                      04 00660
              ELSE                                                      04 00670
                 LOWER=LOWER-NSTEP/2                                    04 00680
              ENDIF                                                     04 00690
              IF(LOWER .GE. 1)THEN                                      04 00700
                 NSTEP=MIN0(NST-1-LOWER,NSTEPM)                         04 00710
                 CALL POLINT(KSAV(LOWER),STSAV(LOWER),NSTEP,X,Y,DY)     04 00720
                 IF(ABS(DY) .LE. EPREC*ABS(Y))THEN                      04 00730
                    ST=Y                                                04 00740
                    RETURN                                              04 00750
                 ENDIF                                                  04 00760
              ENDIF                                                     04 00770
           ENDIF                                                        04 00780
        ENDIF                                                           04 00790
        CALL QROMO(FPHI,Y1(K),EMAX,SS,MIDPNT)                           04 00800
        ST=SS/AREA                                                      04 00810
        IF(NST .GT. NSAV)RETURN                                         04 00820
        KSAV(NST)=K                                                     04 00830
        STSAV(NST)=ST                                                   04 00840
        IF(NST .GT. 1)THEN                                              04 00850
           DO 200 I=1,NST-1                                             04 00860
              DO 100 J=I+1,NST                                          04 00870
                 IF(KSAV(I) .GT. KSAV(J))THEN                           04 00880
                    TEMP1=KSAV(J)                                       04 00890
                    TEMP2=STSAV(J)                                      04 00900
                    KSAV(J)=KSAV(I)                                     04 00910
                    STSAV(J)=STSAV(I)                                   04 00920
                    KSAV(I)=TEMP1                                       04 00930
                    STSAV(I)=TEMP2                                      04 00940
                 ENDIF                                                  04 00950
100           CONTINUE                                                  04 00960
200        CONTINUE                                                     04 00970
        ENDIF                                                           04 00980
        NST=NST+1                                                       04 00990
        RETURN                                                          04 01000
        END                                                             04 01010
C                                                                       05 00010
        REAL FUNCTION Y1(K)                                             05 00020
C                                                                       05 00030
C  Dummy function to allow proper passing of values to integration      05 00040
C    subroutines in the double integration required for IB from B+-     05 00050
C                                                                       05 00060
        REAL K                                                          05 00070
        Y1=1.+K                                                         05 00080
        RETURN                                                          05 00090
        END                                                             05 00100
C                                                                       06 00010
C^^^^^BREMST                                                            06 00020
C-----                                                                  06 00030
C^^^^^SPECTR                                                            06 00040
C=====                                                                  06 00050
C%%%%%MIRD                                                              06 00060
      SUBROUTINE MIRTAB(NDK,RTYPE,ARATIO)                               06 00070
C     Outputs file for MIRD-like tables and organizes data for plotting 06 00080
C                                                                       06 00090
C     Number of radiation lines limit                                   06 00100
C        If the total is .LE. CUT1 then all put out                     06 00110
C        Else increase by 0.1% steps in minimum cutoff                  06 00120
C          until .LE. CUT2                                              06 00130
C                                                                       06 00140
      INTEGER NDK                                                       06 00150
      REAL RTYPE(NDK),ARATIO                                            06 00160
C                                                                       06 00170
      INTEGER GMA,AM,MAXDCY,NLMAX                                       06 00180
      PARAMETER (GMA=999,AM=99,MAXDCY=4,NLMAX=2000)                     06 00190
C                                                                       06 00200
      INTEGER NRKMAX,NRDMAX                                             06 00210
      PARAMETER (NRKMAX=GMA+3*AM,NRDMAX=NRKMAX+NLMAX)                   06 00220
      INTEGER KEPREC(NRKMAX),DELREC(NRDMAX)                             06 00230
      COMMON /KEPDEL/KEPREC,DELREC                                      06 00240
C                                                                       06 00250
      INTEGER ITRMOU,ITRMIN                                             06 00260
      COMMON /TTYUNT/ITRMOU,ITRMIN                                      06 00270
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      06 00280
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               06 00290
C                                                                       06 00300
      REAL EA(AM),DEA(AM),IA(AM),DIA(AM)                                06 00310
      COMMON /ADATA/ EA,DEA,IA,DIA                                      06 00320
C                                                                       06 00330
      INTEGER NTB,ITYPM(AM)                                             06 00340
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 06 00350
     2  AVBEX,DAVBX                                                     06 00360
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,   06 00370
     2  NTB,ITYPM                                                       06 00380
C                                                                       06 00390
      INTEGER NTP,ITYPP(AM),KLASS(AM)                                   06 00400
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      06 00410
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,06 00420
     3  AVPEX,DAVPX                                                     06 00430
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,06 00440
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP                     06 00450
C                                                                       06 00460
      INTEGER IDECAY(GMA)                                               06 00470
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5),E2I,06 00480
     2  DE2I                                                            06 00490
      COMMON /GDATA/ EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY             06 00500
C                                                                       06 00510
      INTEGER NA,NB,NE,NK1,NG,NTOP                                      06 00520
      COMMON /COUNTS/ NA,NB,NE,NK1,NG,NTOP                              06 00530
C                                                                       06 00540
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          06 00550
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 06 00560
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       06 00570
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          06 00580
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   06 00590
      INTEGER IDREC(MAXDCY)                                             06 00600
      INTEGER NLEV,NREC                                                 06 00610
      INTEGER MIRDAT                                                    06 00620
      CHARACTER*10 MIRPUB                                               06 00630
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   06 00640
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 06 00650
     3  IDREC,MIRDAT,MIRPUB                                             06 00660
      REAL RTYPG(GMA)                                                   06 00670
      COMMON /GFROM/RTYPG                                               06 00680
      INTEGER NISMAX                                                    06 00690
      PARAMETER (NISMAX=10)                                             06 00700
      CHARACTER*5 ISDAUG(NISMAX,MAXDCY)                                 06 00710
      INTEGER NISO,ISOREC(NISMAX,MAXDCY)                                06 00720
      COMMON /ISOMER/NISO,ISOREC,ISDAUG                                 06 00730
      REAL ISOFED(NISMAX,MAXDCY)                                        06 00740
      REAL MTSEC,MDTSEC                                                 06 00750
      CHARACTER MTIM*10,MDTIM*6,MPARNT*5,MMETA*2                        06 00760
      COMMON /PARINF/MTSEC,MDTSEC,MTIM,MDTIM,MPARNT,MMETA               06 00770
      CHARACTER*5 MDAU(MAXDCY)                                          06 00780
      CHARACTER*16 DAUT12(MAXDCY)                                       06 00790
      REAL MBR(MAXDCY),MDBR(MAXDCY)                                     06 00800
      COMMON /MIRDBR/MBR,MDBR,MDAU,DAUT12                               06 00810
C                                                                       06 00820
      REAL TERMK(MAXDCY),TERMK1(MAXDCY),TERML(MAXDCY),TERML1(MAXDCY),   06 00830
     2  DTERMK(MAXDCY),DTERML(MAXDCY),DTRMK1(MAXDCY),DTRML1(MAXDCY)     06 00840
      COMMON /XCOM/ TERMK,TERMK1,TERML,TERML1,DTERMK,DTERML,DTRMK1,     06 00850
     2  DTRML1                                                          06 00860
C                                                                       06 00870
      REAL WK(MAXDCY),DWK(MAXDCY),WL(MAXDCY),DWL(MAXDCY),ENKL(MAXDCY),  06 00880
     2  DENKL(MAXDCY),BTOA(MAXDCY),DBTOA(MAXDCY),A2TOA1(MAXDCY),        06 00890
     3  DEA2A1(MAXDCY),BE(MAXDCY,5),DBE(MAXDCY,5),ET(MAXDCY,6),         06 00900
     4  DET(MAXDCY,6)                                                   06 00910
      COMMON /ELCOM/ WK,DWK,WL,DWL,ENKL,DENKL,BTOA,DBTOA,A2TOA1,DEA2A1, 06 00920
     3  BE,DBE,ET,DET                                                   06 00930
C                                                                       06 00940
      INTEGER CUT1,CUT2                                                 06 00950
      PARAMETER (CUT1=32,CUT2=175)                                      06 00960
C                                                                       06 00970
      INTEGER NXMAX,NCEMAX,NAUMAX                                       06 00980
      PARAMETER (NXMAX=4,NCEMAX=5,NAUMAX=2)                             06 00990
      REAL XE(MAXDCY,NXMAX),XDE(MAXDCY,NXMAX),XI(MAXDCY,NXMAX),         06 01000
     2  XDI(MAXDCY,NXMAX)                                               06 01010
      REAL AUE(MAXDCY,NAUMAX),AUDE(MAXDCY,NAUMAX),AUI(MAXDCY,NAUMAX),   06 01020
     2  AUDI(MAXDCY,NAUMAX),CEE(GMA,NCEMAX),CEDE(GMA,NCEMAX)            06 01030
      LOGICAL AUKEEP(MAXDCY,NAUMAX),CEKEEP(GMA,NCEMAX),                 06 01040
     2  XKEEP(MAXDCY,NXMAX)                                             06 01050
      REAL ADOS(AM),BMDOS(AM),BPDOS(AM),GDOS(GMA),XDOS(MAXDCY,NXMAX),   06 01060
     2  CEDOS(GMA,NCEMAX),AUDOS(MAXDCY,NAUMAX)                          06 01070
      REAL ARE(AM),ARDE(AM),ARI(AM),ARDI(AM),ARDOS(AM)                  06 01080
C                                                                       06 01090
      INTEGER INDEXA(AM),INDEXB(AM),INDEXE(AM),INDEXP(AM),INDEXG(GMA)   06 01100
      INTEGER NINDXP,NINDXG(MAXDCY),INDXG2(GMA,MAXDCY)                  06 01110
C                                                                       06 01120
      COMMON /PASPLT/INDXG2,CEKEEP,INDEXA,INDEXB,INDEXE,INDEXP,         06 01130
     2  INDEXG                                                          06 01140
C                                                                       06 01150
      INTEGER LINES                                                     06 01160
      COMMON/LINCNT/LINES                                               06 01170
C                                                                       06 01180
      INTEGER I,J,L,NTOT                                                06 01190
      REAL A,B,C,D,F,SIZE                                               06 01200
      REAL D1,D2,D3,D4,D5,RI1,DRI1,RI2                                  06 01210
      REAL TOTALP,LISALP,OMIALP,TOTELE,LISELE,OMIELE,                   06 01220
     2  TOTPHO,LISPHO,OMIPHO,ANNIDO,LISTOT,OMITOT                       06 01230
      INTEGER MAXA,MAXB,MAXE,MAXG,MAXG2(MAXDCY)                         06 01240
      REAL ANNIHI                                                       06 01250
      LOGICAL ISANNI,STAR,AMPER                                         06 01260
C                                                                       06 01270
      INTEGER NUMSIZ                                                    06 01280
      PARAMETER (NUMSIZ=2)                                              06 01290
      CHARACTER*(NUMSIZ) NUMBER                                         06 01300
      CHARACTER*50 FORMIT                                               06 01310
      CHARACTER*50 BLANKS                                               06 01320
      DATA BLANKS/' '/                                                  06 01330
      REAL TEST                                                         06 01340
      INTEGER CHARGE                                                    06 01350
      INTEGER NRKEEP,NRDELE                                             06 01360
      INTEGER ALNGTH                                                    06 01370
C                                                                       06 01380
      NTOT=0                                                            06 01390
      TOTALP=0.                                                         06 01400
      TOTELE=0.                                                         06 01410
      TOTPHO=0.                                                         06 01420
      LISALP=0.                                                         06 01430
      OMIALP=0.                                                         06 01440
      LISELE=0.                                                         06 01450
      OMIELE=0.                                                         06 01460
      LISPHO=0.                                                         06 01470
      OMIPHO=0.                                                         06 01480
      ISANNI=.FALSE.                                                    06 01490
      STAR=.FALSE.                                                      06 01500
      AMPER=.FALSE.                                                     06 01510
      ANNIHI=0.                                                         06 01520
      ANNIDO=0.                                                         06 01530
      NRKEEP=0                                                          06 01540
      NRDELE=0                                                          06 01550
      IF(NISO .GE. 1)CALL CHKISO(NISO,NDK,ISOREC,ISOFED,NRKEEP,NRDELE)  06 01560
C     Sort Alpha's and calculate doses                                  06 01570
      IF(NA .GT. 0)THEN                                                 06 01580
         CALL MIRDOS(NA,EA,IA,ADOS,AKEEP,NTOT,TOTALP,MAXA)              06 01590
C        Special for Alpha's---Recoil energies will be output           06 01600
         DO 90 I=1,NA                                                   06 01610
            ARE(I)=EA(I)*(1.-ARATIO)                                    06 01620
            ARDE(I)=DEA(I)*(1.-ARATIO)                                  06 01630
            ARI(I)=IA(I)                                                06 01640
            ARDI(I)=DIA(I)                                              06 01650
            ARDOS(I)=ARE(I)*ARI(I)                                      06 01660
            IF(ARDOS(I) .GT. 0.)THEN                                    06 01670
               TOTALP=TOTALP+ARDOS(I)                                   06 01680
               NTOT=NTOT+1                                              06 01690
            ENDIF                                                       06 01700
90       CONTINUE                                                       06 01710
         CALL ZERO4(NA,INDEXA)                                          06 01720
         CALL INDEXX(NA,EA,INDEXA)                                      06 01730
      ENDIF                                                             06 01740
C     Sort Beta-'s  and calculate doses                                 06 01750
      IF(NB .GT. 0)THEN                                                 06 01760
         CALL MIRDOS(NB,EVM,BMI,BMDOS,BKEEP,NTOT,TOTELE,MAXB)           06 01770
         CALL ZERO4(NB,INDEXB)                                          06 01780
         CALL INDEXX(NB,BME,INDEXB)                                     06 01790
      ENDIF                                                             06 01800
C     Sort EC's,Beta+'s  and calculate doses                            06 01810
      IF(NE .GT. 0)THEN                                                 06 01820
         CALL MIRDOS(NE,EVP,PINT,BPDOS,EKEEP,NTOT,TOTELE,MAXE)          06 01830
         CALL ZERO4(NE,INDEXE)                                          06 01840
         CALL INDEXX(NE,EECA,INDEXE)                                    06 01850
         NINDXP=0                                                       06 01860
         CALL ZERO4(NE,INDEXP)                                          06 01870
         DO 95 I=1,NE                                                   06 01880
            IF(EKEEP(INDEXE(I)))THEN                                    06 01890
C           Separate index for positrons                                06 01900
               NINDXP=NINDXP+1                                          06 01910
               INDEXP(NINDXP)=INDEXE(I)                                 06 01920
C              If positron, save annihilation                           06 01930
               TOTPHO=TOTPHO+2.*0.51099906*PINT(INDEXE(I))              06 01940
               ANNIHI=ANNIHI+2.*PINT(INDEXE(I))                         06 01950
            ENDIF                                                       06 01960
95       CONTINUE                                                       06 01970
         IF(TOTPHO .GT. 0.)THEN                                         06 01980
            NTOT=NTOT+1                                                 06 01990
            ANNIDO=TOTPHO                                               06 02000
            ISANNI=.TRUE.                                               06 02010
         ENDIF                                                          06 02020
      ENDIF                                                             06 02030
C     Sort Gamma's and calculate doses                                  06 02040
      IF(NG .GT. 0)THEN                                                 06 02050
         CALL MIRDOS(NG,EG,IG,GDOS,GKEEP,NTOT,TOTPHO,MAXG)              06 02060
C        Conversion electron calculations                               06 02070
         DO 400 I=1,NG                                                  06 02080
            DO 350  L=1,NCEMAX                                          06 02090
               CEE(I,L)=                                                06 02100
     2           EG(I)-(BE(IDECAY(I),L))/1000.                          06 02110
               CEDE(I,L)=                                               06 02120
     2           SQRT(DEG(I)**2+DBE(IDECAY(I),L)**2)                    06 02130
               IF(DEG(I) .EQ. 0.)CEDE(I,L)=0.                           06 02140
               ICE(I,L)=ICE(I,L)/100.                                   06 02150
               CEDOS(I,L)=CEE(I,L)*ICE(I,L)                             06 02160
               IF(CEDOS(I,L) .GT. 0.)THEN                               06 02170
                  CEKEEP(I,L)=.TRUE.                                    06 02180
                  NTOT=NTOT+1                                           06 02190
               ELSE                                                     06 02200
                  CEKEEP(I,L)=.FALSE.                                   06 02210
               ENDIF                                                    06 02220
350         CONTINUE                                                    06 02230
400      CONTINUE                                                       06 02240
         CALL ZERO4(NG,INDEXG)                                          06 02250
         CALL INDEXX(NG,EG,INDEXG)                                      06 02260
C        Set up a secondary index if necessary for more than one        06 02270
C          decay mode                                                   06 02280
         CALL ZERO4(GMA*MAXDCY,INDXG2)                                  06 02290
         IF(NDK .EQ. 1)THEN                                             06 02300
            DO 100 I=1,NG                                               06 02310
               INDXG2(I,1)=INDEXG(I)                                    06 02320
100         CONTINUE                                                    06 02330
            NINDXG(1)=NG                                                06 02340
            MAXG2(1)=MAXG                                               06 02350
         ELSE                                                           06 02360
            DO 200 I=1,NDK                                              06 02370
               TEST=0.                                                  06 02380
               NINDXG(NDK)=0                                            06 02390
               MAXG2(I)=0                                               06 02400
               DO 150 J=1,NG                                            06 02410
                  IF(RTYPE(I) .EQ. RTYPG(INDEXG(J)))THEN                06 02420
                     NINDXG(I)=NINDXG(I)+1                              06 02430
                     INDXG2(NINDXG(I),I)=INDEXG(J)                      06 02440
                     IF(GDOS(J) .GT. TEST)THEN                          06 02450
                        MAXG2(I)=J                                      06 02460
                        TEST=GDOS(J)                                    06 02470
                     ENDIF                                              06 02480
                  ENDIF                                                 06 02490
150            CONTINUE                                                 06 02500
200         CONTINUE                                                    06 02510
         ENDIF                                                          06 02520
      ENDIF                                                             06 02530
      IF(NG+NE .GT. 0)THEN                                              06 02540
C        Calculate Auger data --- Based on logic in subroutine STORE    06 02550
         DO 300 I=1,NDK                                                 06 02560
            AUI(I,1)=(TERMK(I)+TERMK1(I))*(1.-WK(I))/100.               06 02570
            B=(TERMK(I)+TERMK1(I))**2                                   06 02580
            C=(DWK(I)/(1.0-WK(I)))**2                                   06 02590
            IF (B.NE.0.)THEN                                            06 02600
               A=DTERMK(I)**2+DTRMK1(I)**2                              06 02610
               B=A/B                                                    06 02620
            ENDIF                                                       06 02630
            AUDI(I,1)=AUI(I,1)*SQRT(B+C)                                06 02640
            AUE(I,1)=ET(I,1)/1000.                                      06 02650
            AUDE(I,1)=DET(I,1)/1000.                                    06 02660
            AUDOS(I,1)=AUE(I,1)*AUI(I,1)                                06 02670
            IF(AUDOS(I,1) .GT. 0.)THEN                                  06 02680
               AUKEEP(I,1)=.TRUE.                                       06 02690
               TOTELE=TOTELE+AUDOS(I,1)                                 06 02700
               NTOT=NTOT+1                                              06 02710
            ELSE                                                        06 02720
               AUKEEP(I,1)=.FALSE.                                      06 02730
            ENDIF                                                       06 02740
            C=(DWL(I)/(1.0-WL(I)))**2                                   06 02750
            F=(TERML1(I)+TERML(I)+(TERMK(I)+TERMK1(I))*ENKL(I))**2      06 02760
            AUI(I,2)=(TERML1(I)+TERML(I)+(TERMK(I)+TERMK1(I))           06 02770
     2        *ENKL(I))*(1.0-WL(I))/100.                                06 02780
            IF (F.NE.0.)THEN                                            06 02790
               A=DTERML(I)**2+DTRML1(I)**2                              06 02800
               B=(ENKL(I)**2)*(DTERMK(I)**2+DTRMK1(I)**2)               06 02810
               D=((TERMK(I)+TERMK1(I))*DENKL(I))**2                     06 02820
               F=(A+B+D)/F                                              06 02830
            ENDIF                                                       06 02840
            AUDI(I,2)=AUI(I,2)*SQRT(F+C)                                06 02850
            AUE(I,2)=ET(I,2)/1000.                                      06 02860
            AUDE(I,2)=DET(I,2)/1000.                                    06 02870
            AUDOS(I,2)=AUE(I,2)*AUI(I,2)                                06 02880
            IF(AUDOS(2,1) .GT. 0.)THEN                                  06 02890
               AUKEEP(2,1)=.TRUE.                                       06 02900
               TOTELE=TOTELE+AUDOS(2,1)                                 06 02910
               NTOT=NTOT+1                                              06 02920
            ELSE                                                        06 02930
               AUKEEP(2,1)=.FALSE.                                      06 02940
            ENDIF                                                       06 02950
300      CONTINUE                                                       06 02960
C        Calculate X-ray data                                           06 02970
         DO 340 I=1,NDK                                                 06 02980
            RI1=WK(I)*(TERMK(I)+TERMK1(I))                              06 02990
            DO 310 J=1,4                                                06 03000
               L=J+2                                                    06 03010
               XE(I,J)=ET(I,L)/1000.                                    06 03020
               XDE(I,J)=DET(I,L)/1000.                                  06 03030
               XI(I,J)=0.                                               06 03040
310         CONTINUE                                                    06 03050
            IF (RI1 .GT. 0.) THEN                                       06 03060
               D1=0.                                                    06 03070
               D2=0.                                                    06 03080
               D1=(DTERMK(I)**2+DTRMK1(I)**2)/                          06 03090
     2           ((TERMK(I)+TERMK1(I))**2)                              06 03100
               D2=(DWK(I)/WK(I))**2                                     06 03110
               DRI1=RI1*SQRT(D1+D2)                                     06 03120
               RI2=RI1/(1.+BTOA(I))                                     06 03130
               D1=0.                                                    06 03140
               D2=0.                                                    06 03150
               D3=0.                                                    06 03160
               D4=0.                                                    06 03170
               D5=0.                                                    06 03180
               D1=(DRI1/RI1)**2                                         06 03190
               D2 =(DBTOA(I)/(1.+BTOA(I)))**2                           06 03200
               D4=(DEA2A1(I)/(1.+A2TOA1(I)))**2                         06 03210
               IF (A2TOA1(I).NE.0.) D3=D4/((A2TOA1(I))**2)              06 03220
               IF (BTOA(I) .NE. 0.) D5=D2/((BTOA(I))**2)                06 03230
               IF(XE(I,1) .GT. 0.)THEN                                  06 03240
                  XI(I,1)=(RI2/(1.+A2TOA1(I)))/100.                     06 03250
                  XDI(I,1)=XI(I,1)*SQRT(D1+D2+D4)                       06 03260
               ELSE                                                     06 03270
                  XI(I,1)=0.                                            06 03280
                  XDI(I,1)=0.                                           06 03290
               ENDIF                                                    06 03300
               IF(XE(I,2) .GT. 0.)THEN                                  06 03310
                  XI(I,2)=(RI2/100.)-XI(I,1)                            06 03320
               ELSE                                                     06 03330
                  XI(I,2)=0.                                            06 03340
                  XDI(I,2)=0.                                           06 03350
               ENDIF                                                    06 03360
               IF(XE(I,3) .GT. 0.)THEN                                  06 03370
                  XI(I,3)=(RI1*BTOA(I)/(1.+BTOA(I)))/100.               06 03380
               ELSE                                                     06 03390
                  XI(I,3)=0.                                            06 03400
                  XDI(I,3)=0.                                           06 03410
               ENDIF                                                    06 03420
               XDI(I,2)=XI(I,2)*SQRT(D1+D2+D3)                          06 03430
               XDI(I,3)=XI(I,3)*SQRT(D1+D5)                             06 03440
            ENDIF                                                       06 03450
            IF(XE(I,4) .GT. 0.)THEN                                     06 03460
               XI(I,4)=WL(I)*(TERML(I)+TERML1(I)                        06 03470
     2           +(TERMK(I)+TERMK1(I))*ENKL(I))/100.                    06 03480
            ELSE                                                        06 03490
               XI(I,4)=0.                                               06 03500
            ENDIF                                                       06 03510
            IF (XI(I,4) .NE. 0.) THEN                                   06 03520
               D1=0.                                                    06 03530
               D2=0.                                                    06 03540
               D3=0.                                                    06 03550
               D4=0.                                                    06 03560
               D5=0.                                                    06 03570
               D1=DTERML(I)**2+DTRML1(I)**2                             06 03580
               D2=ENKL(I)*(TERMK1(I)+TERMK(I))                          06 03590
               IF (ENKL(I) .NE.0.) D3=(DENKL(I)/ENKL(I))**2             06 03600
               IF (RI1.NE.0.) D4=(DTERMK(I)**2+DTRMK1(I)**2)            06 03610
     2           / ((TERMK(I)+TERMK1(I))**2)                            06 03620
               D5=D1+D2*D2*(D3+D4)                                      06 03630
               D3=TERML(I)+TERML1(I)+ ENKL(I)*(TERMK(I)+TERMK1(I))      06 03640
               D1=0.                                                    06 03650
               D2=0.                                                    06 03660
               IF (WL(I) .NE.0.) D1 =(DWL(I)/WL(I))**2                  06 03670
               IF (D3.NE.0.) D2=D5/(D3*D3)                              06 03680
               XDI(I,4)=XI(I,4)*SQRT(D1+D2)                             06 03690
            ELSE                                                        06 03700
               XDI(I,4)=0.                                              06 03710
            ENDIF                                                       06 03720
            DO 335 J=1,NXMAX                                            06 03730
               XDOS(I,J)=XE(I,J)*XI(I,J)                                06 03740
               IF(XDOS(I,J) .GT. 0.)THEN                                06 03750
                  XKEEP(I,J)=.TRUE.                                     06 03760
                  TOTPHO=TOTPHO+XDOS(I,J)                               06 03770
                  NTOT=NTOT+1                                           06 03780
               ELSE                                                     06 03790
                  XKEEP(I,J)=.FALSE.                                    06 03800
               ENDIF                                                    06 03810
335         CONTINUE                                                    06 03820
340      CONTINUE                                                       06 03830
      ENDIF                                                             06 03840
C                                                                       06 03850
C     Select radiations to save                                         06 03860
      SIZE=0.0                                                          06 03870
1000  CONTINUE                                                          06 03880
      IF(SIZE .EQ. 0.)GO TO 1600                                        06 03890
      LISELE=0.                                                         06 03900
      OMIELE=0.                                                         06 03910
      LISPHO=0.                                                         06 03920
      OMIPHO=0.                                                         06 03930
      IF(NA .GT. 0)THEN                                                 06 03940
         CALL SELECT(NA,SIZE,ADOS,AKEEP,TOTALP,LISALP,OMIALP,NTOT)      06 03950
      ENDIF                                                             06 03960
      IF(NB .GT. 0)                                                     06 03970
     2  CALL SELECT(NB,SIZE,BMDOS,BKEEP,TOTELE,LISELE,OMIELE,NTOT)      06 03980
      IF(NE .GT. 0)THEN                                                 06 03990
         CALL SELECT(NE,SIZE,BPDOS,EKEEP,TOTELE,LISELE,OMIELE,NTOT)     06 04000
      ENDIF                                                             06 04010
      IF(NG .GT. 0)THEN                                                 06 04020
         CALL SELECT(NG,SIZE,GDOS,GKEEP,TOTPHO,LISPHO,OMIPHO,NTOT)      06 04030
         IF(TOTELE .GT. 0.)THEN                                         06 04040
            DO 1200 I=1,NG                                              06 04050
               DO 1100 J=1,NCEMAX                                       06 04060
                  IF(CEKEEP(I,J))THEN                                   06 04070
                     IF(CEDOS(I,J) .GE. SIZE*TOTELE)THEN                06 04080
                        LISELE=LISELE+CEDOS(I,J)                        06 04090
                     ELSE                                               06 04100
                        CEKEEP(I,J)=.FALSE.                             06 04110
                        OMIELE=OMIELE+CEDOS(I,J)                        06 04120
                        NTOT=NTOT-1                                     06 04130
                     ENDIF                                              06 04140
                  ELSE                                                  06 04150
                     OMIELE=OMIELE+CEDOS(I,J)                           06 04160
                  ENDIF                                                 06 04170
1100           CONTINUE                                                 06 04180
1200        CONTINUE                                                    06 04190
         ENDIF                                                          06 04200
      ENDIF                                                             06 04210
      IF(ANNIDO .NE. 0.)THEN                                            06 04220
         IF(ANNIDO .GE. SIZE*TOTPHO)THEN                                06 04230
            LISPHO=LISPHO+ANNIDO                                        06 04240
         ELSE                                                           06 04250
            OMIPHO=OMIPHO+ANNIDO                                        06 04260
            ANNIDO=0.                                                   06 04270
            NTOT=NTOT-1                                                 06 04280
         ENDIF                                                          06 04290
      ENDIF                                                             06 04300
      IF(NG+NE .GT. 0)THEN                                              06 04310
         DO 1400 I=1,NDK                                                06 04320
            DO 1300 J=1,NXMAX                                           06 04330
               IF(XKEEP(I,J))THEN                                       06 04340
                  IF(XDOS(I,J) .GE. SIZE*TOTPHO)THEN                    06 04350
                     LISPHO=LISPHO+XDOS(I,J)                            06 04360
                  ELSE                                                  06 04370
                     XKEEP(I,J)=.FALSE.                                 06 04380
                     OMIPHO=OMIPHO+XDOS(I,J)                            06 04390
                     NTOT=NTOT-1                                        06 04400
                  ENDIF                                                 06 04410
               ELSE                                                     06 04420
                  OMIPHO=OMIPHO+XDOS(I,J)                               06 04430
               ENDIF                                                    06 04440
1300        CONTINUE                                                    06 04450
            DO 1350 J=1,NAUMAX                                          06 04460
               IF(AUKEEP(I,J))THEN                                      06 04470
                  IF(AUDOS(I,J) .GE. SIZE*TOTELE)THEN                   06 04480
                     LISELE=LISELE+AUDOS(I,J)                           06 04490
                  ELSE                                                  06 04500
                     AUKEEP(I,J)=.FALSE.                                06 04510
                     OMIELE=OMIELE+AUDOS(I,J)                           06 04520
                     NTOT=NTOT-1                                        06 04530
                  ENDIF                                                 06 04540
               ELSE                                                     06 04550
                  OMIELE=OMIELE+AUDOS(I,J)                              06 04560
               ENDIF                                                    06 04570
1350        CONTINUE                                                    06 04580
1400     CONTINUE                                                       06 04590
      ENDIF                                                             06 04600
1600  CONTINUE                                                          06 04610
      IF(NTOT .GT. CUT1)THEN                                            06 04620
         IF(SIZE .EQ. 0.0)THEN                                          06 04630
            SIZE=SIZE+0.1E-2                                            06 04640
            GOTO 1000                                                   06 04650
         ELSE                                                           06 04660
            IF(NTOT .GT. CUT2)THEN                                      06 04670
               SIZE=SIZE+0.1E-2                                         06 04680
               GOTO 1000                                                06 04690
            ENDIF                                                       06 04700
         ENDIF                                                          06 04710
      ENDIF                                                             06 04720
C     Output header information                                         06 04730
      IF(NTOT .GT. 0)THEN                                               06 04740
         CALL HEADER(MIRDAT,MIRPUB,MTIM,MDTIM,MPARNT,MMETA,NDK,RTYPE,   06 04750
     2  ISANNI,CHARGE)                                                  06 04760
      ELSE                                                              06 04770
         RETURN                                                         06 04780
      ENDIF                                                             06 04790
C     Output the tabular portion of the radiations                      06 04800
C     ALPHA Decay                                                       06 04810
      IF(NA .GT. 0)THEN                                                 06 04820
c         CALL FORFOR(FORMIT,NUMSIZ,'a ')                               06 04830
         CALL FORFOR(FORMIT,NUMSIZ,'$0 ')                               06 04840
         DO 2100 I=1,NA                                                 06 04850
            IF(AKEEP(INDEXA(I)))THEN                                    06 04860
               CALL NUMSTR(I,NUMBER)                                    06 04870
               CALL SQZSTR(NUMBER,' ')                                  06 04880
               CALL CHKCON(.TRUE.)                                      06 04890
               WRITE(UNIT=MIRDRP,FMT=FORMIT)                            06 04900
     2           NUMBER,IA(INDEXA(I)),EA(INDEXA(I)),' ',ADOS(INDEXA(I)) 06 04910
               CALL CHKCON(.TRUE.)                                      06 04920
c               WRITE(UNIT=MIRDRP,                                      06 04930
c     2           FMT='(8Ha recoil,9X,1PE8.2,5X,E9.3,5X,E8.2)')         06 04940
c     3           IA(INDEXA(I)),ARE(INDEXA(I)),ARDOS(INDEXA(I))         06 04950
               WRITE(UNIT=MIRDRP,                                       06 04960
     2           FMT='(9H$0 recoil,9X,1PE8.2,5X,E9.3,5X,E8.2)')         06 04970
     3           IA(INDEXA(I)),ARE(INDEXA(I)),ARDOS(INDEXA(I))          06 04980
            ENDIF                                                       06 04990
2100     CONTINUE                                                       06 05000
         DO 2200 I=1,NDK                                                06 05010
            IF(RTYPE(I) .EQ. 4.0)THEN                                   06 05020
               CALL OUTGAM(NINDXG(I),I,INDXG2,GDOS,GKEEP,               06 05030
     2           CEE,CEDOS,CEKEEP,AMPER)                                06 05040
               CALL OUTXRY(I,XE,XI,XDOS,XKEEP,STAR,CHARGE)              06 05050
               CALL OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)               06 05060
            ENDIF                                                       06 05070
2200     CONTINUE                                                       06 05080
      ENDIF                                                             06 05090
C     EC Decay                                                          06 05100
      IF(NE .GT. 0)THEN                                                 06 05110
         STAR=.TRUE.                                                    06 05120
         IF(NINDXP .GT. 0)THEN                                          06 05130
c            CALL FORFOR(FORMIT,NUMSIZ,'b+ ')                           06 05140
            CALL FORFOR(FORMIT,NUMSIZ,'$1<+> ')                         06 05150
            DO 2600 I=1,NINDXP                                          06 05160
               IF(EKEEP(INDEXP(I)))THEN                                 06 05170
                  CALL NUMSTR(I,NUMBER)                                 06 05180
                  CALL SQZSTR(NUMBER,' ')                               06 05190
                  CALL CHKCON(.TRUE.)                                   06 05200
                  WRITE(UNIT=MIRDRP,FMT=FORMIT)                         06 05210
     2              NUMBER,PINT(INDEXP(I)),EVP(INDEXP(I)),'<*>',        06 05220
     3              BPDOS(INDEXP(I))                                    06 05230
               ENDIF                                                    06 05240
2600        CONTINUE                                                    06 05250
         ENDIF                                                          06 05260
         IF(ANNIDO .GT. 0)THEN                                          06 05270
            CALL CHKCON(.TRUE.)                                         06 05280
c            WRITE(UNIT=MIRDRP,                                         06 05290
c     2        FMT='(3Hg+-,14X,1PE8.2,5X,E9.3,5X,E8.2)')                06 05300
c     3        ANNIHI,510.99906,ANNIDO                                  06 05310
            WRITE(UNIT=MIRDRP,                                          06 05320
     2        FMT='(4H$2$+,15X,1PE8.2,5X,E9.3,5X,E8.2)')                06 05330
     3        ANNIHI,510.99906,ANNIDO                                   06 05340
         ENDIF                                                          06 05350
         DO 2700 I=1,NDK                                                06 05360
            IF(RTYPE(I) .EQ. 2.0)THEN                                   06 05370
               CALL OUTGAM(NINDXG(I),I,INDXG2,GDOS,GKEEP,               06 05380
     2           CEE,CEDOS,CEKEEP,AMPER)                                06 05390
               CALL OUTXRY(I,XE,XI,XDOS,XKEEP,STAR,CHARGE)              06 05400
               CALL OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)               06 05410
            ENDIF                                                       06 05420
2700     CONTINUE                                                       06 05430
      ENDIF                                                             06 05440
      DO 2800 I=1,NDK                                                   06 05450
         IF(RTYPE(I) .EQ. 2.7)THEN                                      06 05460
            CALL OUTGAM(NINDXG(I),I,INDXG2,GDOS,GKEEP,                  06 05470
     2        CEE,CEDOS,CEKEEP,AMPER)                                   06 05480
            CALL OUTXRY(I,XE,XI,XDOS,XKEEP,STAR,CHARGE)                 06 05490
            CALL OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)                  06 05500
         ENDIF                                                          06 05510
2800  CONTINUE                                                          06 05520
C     IT decay                                                          06 05530
      DO 2000 I=1,NDK                                                   06 05540
         IF(RTYPE(I) .EQ. 3.0)THEN                                      06 05550
            CALL OUTGAM(NINDXG(I),I,INDXG2,GDOS,GKEEP,                  06 05560
     2        CEE,CEDOS,CEKEEP,AMPER)                                   06 05570
            CALL OUTXRY(I,XE,XI,XDOS,XKEEP,STAR,CHARGE)                 06 05580
            CALL OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)                  06 05590
         ENDIF                                                          06 05600
2000  CONTINUE                                                          06 05610
C     BETA- Decay                                                       06 05620
      IF(NB .GT. 0)THEN                                                 06 05630
         STAR=.TRUE.                                                    06 05640
c         CALL FORFOR(FORMIT,NUMSIZ,'b- ')                              06 05650
         CALL FORFOR(FORMIT,NUMSIZ,'$1<-> ')                            06 05660
         DO 2300 I=1,NB                                                 06 05670
            IF(BKEEP(INDEXB(I)))THEN                                    06 05680
               CALL NUMSTR(I,NUMBER)                                    06 05690
               CALL SQZSTR(NUMBER,' ')                                  06 05700
               CALL CHKCON(.TRUE.)                                      06 05710
               WRITE(UNIT=MIRDRP,FMT=FORMIT)                            06 05720
     2           NUMBER,BMI(INDEXB(I)),EVM(INDEXB(I)),'<*>',            06 05730
     3           BMDOS(INDEXB(I))                                       06 05740
            ENDIF                                                       06 05750
2300     CONTINUE                                                       06 05760
         DO 2400 I=1,NDK                                                06 05770
            IF(RTYPE(I) .EQ. 1.0)THEN                                   06 05780
               CALL OUTGAM(NINDXG(I),I,INDXG2,GDOS,GKEEP,               06 05790
     2           CEE,CEDOS,CEKEEP,AMPER)                                06 05800
               CALL OUTXRY(I,XE,XI,XDOS,XKEEP,STAR,CHARGE)              06 05810
               CALL OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)               06 05820
            ENDIF                                                       06 05830
2400     CONTINUE                                                       06 05840
      ENDIF                                                             06 05850
      DO 2500 I=1,NDK                                                   06 05860
         IF(RTYPE(I) .EQ. 1.5)THEN                                      06 05870
            CALL OUTGAM(NINDXG(I),I,INDXG2,GDOS,GKEEP,                  06 05880
     2        CEE,CEDOS,CEKEEP,AMPER)                                   06 05890
            CALL OUTXRY(I,XE,XI,XDOS,XKEEP,STAR,CHARGE)                 06 05900
            CALL OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)                  06 05910
         ENDIF                                                          06 05920
2500  CONTINUE                                                          06 05930
C     Output summary information                                        06 05940
      IF((LISALP+OMIALP) .EQ. 0.)LISALP=TOTALP                          06 05950
      IF((LISELE+OMIELE) .EQ. 0.)LISELE=TOTELE                          06 05960
      IF((LISPHO+OMIPHO) .EQ. 0.)LISPHO=TOTPHO                          06 05970
      LISTOT=LISALP+LISELE+LISPHO                                       06 05980
      OMITOT=OMIALP+OMIELE+OMIPHO                                       06 05990
      CALL CHKCON(.FALSE.)                                              06 06000
      WRITE(UNIT=MIRDRP,FMT='(1X)')                                     06 06010
C                                                                       06 06020
      ALNGTH=47                                                         06 06030
      IF(LISPHO .GT. 0)THEN                                             06 06040
         CALL CHKCON(.FALSE.)                                           06 06050
c         WRITE(UNIT=MIRDRP,FMT=1)                                      06 06060
c     2     'LISTED X, g AND g+- RADIATIONS'//BLANKS,LISPHO             06 06070
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06080
     2     'LISTED X, $2 AND $2$+ RADIATIONS'//BLANKS,LISPHO            06 06090
c1        FORMAT(A44,P1E8.2)                                            06 06100
1        FORMAT(A47,1PE8.2)                                             06 06110
      ENDIF                                                             06 06120
      IF(OMIPHO .GT. 0)THEN                                             06 06130
         CALL CHKCON(.FALSE.)                                           06 06140
c         WRITE(UNIT=MIRDRP,FMT=1)                                      06 06150
c     2     'OMITTED X, g AND g+- RADIATIONS**'//BLANKS,OMIPHO          06 06160
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06170
     2     'OMITTED X, $2 AND $2$+ RADIATIONS**'//BLANKS,OMIPHO         06 06180
      ENDIF                                                             06 06190
C                                                                       06 06200
      ALNGTH=45                                                         06 06210
      IF(LISELE .GT. 0)THEN                                             06 06220
         CALL CHKCON(.FALSE.)                                           06 06230
c         WRITE(UNIT=MIRDRP,FMT=1)                                      06 06240
c     2     'LISTED b, ce AND Auger RADIATIONS'//BLANKS,LISELE          06 06250
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06260
     2     'LISTED $1, ce AND Auger RADIATIONS'//BLANKS,LISELE          06 06270
      ENDIF                                                             06 06280
      IF(OMIELE .GT. 0)THEN                                             06 06290
         CALL CHKCON(.FALSE.)                                           06 06300
c         WRITE(UNIT=MIRDRP,FMT=1)                                      06 06310
c     2     'OMITTED b, ce AND Auger RADIATIONS**'//BLANKS,OMIELE       06 06320
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06330
     2     'OMITTED $1, ce AND Auger RADIATIONS**'//BLANKS,OMIELE       06 06340
      ENDIF                                                             06 06350
C                                                                       06 06360
      ALNGTH=46                                                         06 06370
      IF(LISALP .GT. 0)THEN                                             06 06380
         CALL CHKCON(.FALSE.)                                           06 06390
c         WRITE(UNIT=MIRDRP,FMT=1)                                      06 06400
c     2    'LISTED a AND a recoil RADIATIONS'//BLANKS,LISALP            06 06410
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06420
     2    'LISTED $0 AND $0 recoil RADIATIONS'//BLANKS,LISALP           06 06430
      ENDIF                                                             06 06440
      IF(OMIALP .GT. 0)THEN                                             06 06450
         CALL CHKCON(.FALSE.)                                           06 06460
c         WRITE(UNIT=MIRDRP,FMT=1)                                      06 06470
c     2     'OMITTED a AND a recoil RADIATIONS**'//BLANKS,OMIALP        06 06480
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06490
     2     'OMITTED $0 AND $0 recoil RADIATIONS**'//BLANKS,OMIALP       06 06500
      ENDIF                                                             06 06510
C                                                                       06 06520
      ALNGTH=44                                                         06 06530
      IF(LISTOT .GT. 0)THEN                                             06 06540
         CALL CHKCON(.FALSE.)                                           06 06550
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06560
     2     'LISTED RADIATIONS'//BLANKS,LISTOT                           06 06570
      ENDIF                                                             06 06580
      IF(OMITOT .GT. 0)THEN                                             06 06590
         CALL CHKCON(.FALSE.)                                           06 06600
         WRITE(UNIT=MIRDRP,FMT=1)                                       06 06610
     2     'OMITTED RADIATIONS**'//BLANKS,OMITOT                        06 06620
      ENDIF                                                             06 06630
C                                                                       06 06640
      CALL CHKCON(.FALSE.)                                              06 06650
      WRITE(UNIT=MIRDRP,FMT='(1X)')                                     06 06660
      IF(STAR)THEN                                                      06 06670
         CALL CHKCON(.FALSE.)                                           06 06680
         WRITE(UNIT=MIRDRP,FMT=3)                                       06 06690
3        FORMAT('<*>  AVERAGE ENERGY (MeV).')                           06 06700
      ENDIF                                                             06 06710
      IF(AMPER)THEN                                                     06 06720
         CALL CHKCON(.FALSE.)                                           06 06730
         WRITE(UNIT=MIRDRP,FMT=4)                                       06 06740
4        FORMAT('<a>  MAXIMUM ENERGY (MeV) FOR SUBSHELL.')              06 06750
      ENDIF                                                             06 06760
      IF(OMITOT .GT. 0)THEN                                             06 06770
         SIZE=100.*SIZE                                                 06 06780
         CALL CHKCON(.FALSE.)                                           06 06790
         WRITE(UNIT=MIRDRP,FMT=2)SIZE                                   06 06800
c2        FORMAT('** EACH OMITTED TRANSITION CONTRIBUTES'/              06 06810
c     2     1X,3X,'<',F5.3,'% TO SUMOF(y(i)xE(i)) IN ITS CATEGORY.')    06 06820
2        FORMAT('<**> EACH OMITTED TRANSITION CONTRIBUTES'/             06 06830
     2     1X,3X,'$<',F5.3,'% TO SUMOF(y(i)xE(i)) IN ITS CATEGORY.')    06 06840
      ENDIF                                                             06 06850
C     Output information on daughters                                   06 06860
      CALL TRAILR(NDK,MDAU,DAUT12,MBR,NISO,ISDAUG,ISOFED,ISOREC)        06 06870
C     Finish selection of records which should be output for plotting   06 06880
      IF(NLEV .GT. 0)CALL MIRPLT(NDK,NINDXP,NA,NB,NE,NG,NINDXG,         06 06890
     2  MAXA,MAXB,MAXE,MAXG,MAXG2,NRKEEP,NRDELE)                        06 06900
      RETURN                                                            06 06910
      END                                                               06 06920
                                                                       07 00010
      SUBROUTINE MIRPLT(NDK,NINDXP,NA,NB,NE,NG,NINDXG,                  07 00020
     2  MAXA,MAXB,MAXE,MAXG,MAXG2,NRKEEP,NRDELE)                        07 00030
C     Outputs file for MIRD-like plotting                               07 00040
C                                                                       07 00050
      INTEGER NDK,NINDXP,NA,NB,NE,NG,NINDXG(NDK),MAXA,MAXB,MAXE,        07 00060
     2  MAXG,MAXG2(NDK),NRKEEP,NRDELE                                   07 00070
C                                                                       07 00080
      INTEGER GMA,AM,MAXDCY,NLMAX,NCEMAX                                07 00090
      PARAMETER (GMA=999,AM=99,MAXDCY=4,NLMAX=2000,NCEMAX=5)            07 00100
C                                                                       07 00110
      INTEGER NRKMAX,NRDMAX                                             07 00120
      PARAMETER (NRKMAX=GMA+3*AM,NRDMAX=NRKMAX+NLMAX)                   07 00130
      INTEGER KEPREC(NRKMAX),DELREC(NRDMAX)                             07 00140
      COMMON /KEPDEL/KEPREC,DELREC                                      07 00150
C                                                                       07 00160
      INTEGER ITRMOU,ITRMIN                                             07 00170
      COMMON /TTYUNT/ITRMOU,ITRMIN                                      07 00180
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      07 00190
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               07 00200
C                                                                       07 00210
      INTEGER INDXG2(GMA,MAXDCY)                                        07 00220
      INTEGER INDEXA(AM),INDEXB(AM),INDEXE(AM),INDEXP(AM),              07 00230
     2  INDEXG(GMA)                                                     07 00240
      LOGICAL CEKEEP(GMA,NCEMAX)                                        07 00250
      COMMON /PASPLT/INDXG2,CEKEEP,INDEXA,INDEXB,INDEXE,INDEXP,         07 00260
     2  INDEXG                                                          07 00270
C                                                                       07 00280
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          07 00290
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 07 00300
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       07 00310
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          07 00320
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   07 00330
      INTEGER IDREC(MAXDCY)                                             07 00340
      INTEGER NLEV,NREC                                                 07 00350
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   07 00360
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 07 00370
     3  IDREC                                                           07 00380
C                                                                       07 00390
      INTEGER I,J                                                       07 00400
      LOGICAL LKEEP(NLMAX)                                              07 00410
C                                                                       07 00420
      CHARACTER*(*) SYMBOL                                              07 00430
      PARAMETER (SYMBOL='MIRDSYM=')                                     07 00440
      INTEGER TMPNUM,DELSTA,KEPSTA                                      07 00450
      CHARACTER*30 ADDLIN(NRKMAX),TMPSTR                                07 00460
      CHARACTER*80 CARD                                                 07 00470
      CHARACTER*3 NUMBER                                                07 00480
C                                                                       07 00490
      INTEGER LENSTR                                                    07 00500
      EXTERNAL LENSTR                                                   07 00510
C                                                                       07 00520
C     First keep any gammas whose ce's have been kept                   07 00530
C        unless the gamma is unplaced                                   07 00540
      IF(NG .GT. 0)THEN                                                 07 00550
         DO 200 I=1,NG                                                  07 00560
            IF(GLTO(INDEXG(I)) .EQ. -1                                  07 00570
     2        .OR. GLFROM(INDEXG(I)) .EQ. -1)THEN                       07 00580
               GKEEP(INDEXG(I))=.FALSE.                                 07 00590
            ELSE                                                        07 00600
               IF(.NOT.GKEEP(INDEXG(I)))THEN                            07 00610
                  DO 100 J=1,NCEMAX                                     07 00620
                     GKEEP(INDEXG(I))=CEKEEP(INDEXG(I),J)               07 00630
                     IF(GKEEP(INDEXG(I)))GOTO 200                       07 00640
100               CONTINUE                                              07 00650
               ENDIF                                                    07 00660
            ENDIF                                                       07 00670
200      CONTINUE                                                       07 00680
      ENDIF                                                             07 00690
C     Next must check to see that we save at least the principal        07 00700
C       radiations from each decay mode.                                07 00710
      IF(NDK .GT. 1)THEN                                                07 00720
C        First check for non-gammas                                     07 00730
         IF(NA .GT. 0 .AND. MAXA .GT. 0)AKEEP(MAXA)=.TRUE.              07 00740
         IF(NB .GT. 0 .AND. MAXB .GT. 0)BKEEP(MAXB)=.TRUE.              07 00750
         IF(NINDXP .GT. 0 .AND. MAXE .GT. 0)EKEEP(MAXE)=.TRUE.          07 00760
C                                                                       07 00770
         DO 1000 I=1,NDK                                                07 00780
            IF(MAXG2(I) .GT. 0)GKEEP(MAXG2(I))=.TRUE.                   07 00790
1000     CONTINUE                                                       07 00800
      ENDIF                                                             07 00810
C     Now see which levels and omitted feeding radiations to keep       07 00820
      IF(NLEV .EQ. 1)LKEEP(1)=.TRUE.                                    07 00830
      IF(NLEV .GT. 1)THEN                                               07 00840
C        Do gammas first and separately from rest of radiations         07 00850
C          since this will give which omitted feeding radiations        07 00860
C          to keep                                                      07 00870
         DO 1200 I=1,NLEV                                               07 00880
            IF(NG .GT. 0)THEN                                           07 00890
               DO 1100 J=1,NG                                           07 00900
                  IF(LREC(I) .EQ. GLFROM(INDEXG(J))                     07 00910
     2              .OR. LREC(I) .EQ. GLTO(INDEXG(J)))THEN              07 00920
                     IF(GKEEP(INDEXG(J)))THEN                           07 00930
                        LKEEP(I)=.TRUE.                                 07 00940
                        GOTO 1200                                       07 00950
                     ELSE                                               07 00960
                        LKEEP(I)=.FALSE.                                07 00970
                     ENDIF                                              07 00980
                  ENDIF                                                 07 00990
1100           CONTINUE                                                 07 01000
            ENDIF                                                       07 01010
1200     CONTINUE                                                       07 01020
         DO 1600 I=1,NLEV                                               07 01030
            IF(NA .GT. 0)THEN                                           07 01040
               DO 1300 J=1,NA                                           07 01050
                  IF(LREC(I) .EQ. ALTO(INDEXA(J)))THEN                  07 01060
                     IF(AKEEP(INDEXA(J)))THEN                           07 01070
                        LKEEP(I)=.TRUE.                                 07 01080
                     ELSE                                               07 01090
                        IF(LKEEP(I))AKEEP(INDEXA(J))=.TRUE.             07 01100
                     ENDIF                                              07 01110
                     GOTO 1600                                          07 01120
                  ENDIF                                                 07 01130
1300           CONTINUE                                                 07 01140
            ENDIF                                                       07 01150
            IF(NB .GT. 0)THEN                                           07 01160
               DO 1400 J=1,NB                                           07 01170
                  IF(LREC(I) .EQ. BLTO(INDEXB(J)))THEN                  07 01180
                     IF(BKEEP(INDEXB(J)))THEN                           07 01190
                        LKEEP(I)=.TRUE.                                 07 01200
                     ELSE                                               07 01210
                        IF(LKEEP(I))BKEEP(INDEXB(J))=.TRUE.             07 01220
                     ENDIF                                              07 01230
                     GOTO 1600                                          07 01240
                  ENDIF                                                 07 01250
1400           CONTINUE                                                 07 01260
            ENDIF                                                       07 01270
            IF(NE .GT. 0)THEN                                           07 01280
               DO 1500 J=1,NE                                           07 01290
                  IF(LREC(I) .EQ. ELTO(INDEXE(J)))THEN                  07 01300
                     IF(EKEEP(INDEXE(J)))THEN                           07 01310
                        LKEEP(I)=.TRUE.                                 07 01320
                     ELSE                                               07 01330
                        IF(LKEEP(I))EKEEP(INDEXE(J))=.TRUE.             07 01340
                     ENDIF                                              07 01350
                     GOTO 1600                                          07 01360
                  ENDIF                                                 07 01370
1500           CONTINUE                                                 07 01380
            ENDIF                                                       07 01390
1600     CONTINUE                                                       07 01400
      ENDIF                                                             07 01410
C     Now construct lists of radiation records to keep and delete       07 01420
C       and construct records to be added.  Also check for unplaced     07 01430
C       radiations                                                      07 01440
      IF(NA .EQ. 1 .AND. NLEV .GT. 0 .AND. AREC(1) .GT. LREC(1))THEN    07 01450
         NRKEEP=NRKEEP+1                                                07 01460
         I=1                                                            07 01470
         CALL NUMSTR(I,NUMBER)                                          07 01480
         CALL SQZSTR(NUMBER,' ')                                        07 01490
         ADDLIN(NRKEEP)='L A '//SYMBOL//'A'//NUMBER                     07 01500
         KEPREC(NRKEEP)=AREC(1)                                         07 01510
      ENDIF                                                             07 01520
      IF(NA .GT. 1)THEN                                                 07 01530
         DO 2000 I=1,NA                                                 07 01540
            IF(AKEEP(INDEXA(I)) .AND. NLEV .GT. 0                       07 01550
     2        .AND. AREC(INDEXA(I)) .GT. LREC(1))THEN                   07 01560
               NRKEEP=NRKEEP+1                                          07 01570
               CALL NUMSTR(I,NUMBER)                                    07 01580
               CALL SQZSTR(NUMBER,' ')                                  07 01590
               ADDLIN(NRKEEP)='L A '//SYMBOL//'A'//NUMBER               07 01600
               KEPREC(NRKEEP)=AREC(INDEXA(I))                           07 01610
            ELSE                                                        07 01620
               NRDELE=NRDELE+1                                          07 01630
               DELREC(NRDELE)=AREC(INDEXA(I))                           07 01640
            ENDIF                                                       07 01650
2000     CONTINUE                                                       07 01660
      ENDIF                                                             07 01670
      IF(NB .EQ. 1 .AND. NLEV .GT. 0 .AND. BREC(1) .GT. LREC(1))THEN    07 01680
         NRKEEP=NRKEEP+1                                                07 01690
         I=1                                                            07 01700
         CALL NUMSTR(I,NUMBER)                                          07 01710
         CALL SQZSTR(NUMBER,' ')                                        07 01720
         ADDLIN(NRKEEP)='L B '//SYMBOL//'B'//NUMBER                     07 01730
         KEPREC(NRKEEP)=BREC(1)                                         07 01740
      ENDIF                                                             07 01750
      IF(NB .GT. 1)THEN                                                 07 01760
         DO 2100 I=1,NB                                                 07 01770
            IF(BKEEP(INDEXB(I)) .AND. NLEV .GT. 0                       07 01780
     2        .AND. BREC(INDEXB(I)) .GT. LREC(1))THEN                   07 01790
               NRKEEP=NRKEEP+1                                          07 01800
               CALL NUMSTR(I,NUMBER)                                    07 01810
               CALL SQZSTR(NUMBER,' ')                                  07 01820
               ADDLIN(NRKEEP)='L B '//SYMBOL//'B-'//NUMBER              07 01830
               KEPREC(NRKEEP)=BREC(INDEXB(I))                           07 01840
            ELSE                                                        07 01850
               NRDELE=NRDELE+1                                          07 01860
               DELREC(NRDELE)=BREC(INDEXB(I))                           07 01870
            ENDIF                                                       07 01880
2100     CONTINUE                                                       07 01890
      ENDIF                                                             07 01900
      IF(NE .EQ. 1 .AND. NLEV .GT. 0 .AND. EREC(1) .GT. LREC(1))THEN    07 01910
         NRKEEP=NRKEEP+1                                                07 01920
         I=1                                                            07 01930
         CALL NUMSTR(I,NUMBER)                                          07 01940
         CALL SQZSTR(NUMBER,' ')                                        07 01950
         ADDLIN(NRKEEP)='L E '//SYMBOL//'EC'//NUMBER                    07 01960
         KEPREC(NRKEEP)=EREC(1)                                         07 01970
         IF(NINDXP .EQ. 1)THEN                                          07 01980
            CALL NUMSTR(I,NUMBER)                                       07 01990
            CALL SQZSTR(NUMBER,' ')                                     07 02000
            CALL ADDSTR(ADDLIN(NRKEEP),LENSTR(ADDLIN(NRKEEP))+1,        07 02010
     2        ',B+'//NUMBER)                                            07 02020
         ENDIF                                                          07 02030
      ENDIF                                                             07 02040
      IF(NE .GT. 1)THEN                                                 07 02050
         DO 2200 I=1,NE                                                 07 02060
            IF(EKEEP(INDEXE(I)) .AND. NLEV .GT. 0                       07 02070
     2        .AND. EREC(INDEXE(I)) .GT. LREC(1))THEN                   07 02080
               NRKEEP=NRKEEP+1                                          07 02090
               CALL NUMSTR(I,NUMBER)                                    07 02100
               CALL SQZSTR(NUMBER,' ')                                  07 02110
               ADDLIN(NRKEEP)='L E '//SYMBOL//'EC'//NUMBER              07 02120
               KEPREC(NRKEEP)=EREC(INDEXE(I))                           07 02130
               DO 2150 J=1,NINDXP                                       07 02140
                  IF(INDEXE(I) .EQ. INDEXP(J))THEN                      07 02150
                     CALL NUMSTR(J,NUMBER)                              07 02160
                     CALL SQZSTR(NUMBER,' ')                            07 02170
                     CALL ADDSTR(ADDLIN(NRKEEP),                        07 02180
     2                 LENSTR(ADDLIN(NRKEEP))+1,',B+'//NUMBER)          07 02190
                  ENDIF                                                 07 02200
2150           CONTINUE                                                 07 02210
            ELSE                                                        07 02220
               NRDELE=NRDELE+1                                          07 02230
               DELREC(NRDELE)=EREC(INDEXE(I))                           07 02240
            ENDIF                                                       07 02250
2200     CONTINUE                                                       07 02260
      ENDIF                                                             07 02270
      IF(NG .GT. 0)THEN                                                 07 02280
         DO 2300 I=1,NDK                                                07 02290
            DO 2250 J=1,NINDXG(I)                                       07 02300
               IF(INDXG2(J,I) .LE. 0)GOTO 2250                          07 02310
               IF(GKEEP(INDXG2(J,I)) .AND. NLEV .GT. 0                  07 02320
     2           .AND. GREC(INDXG2(J,I)) .GT. LREC(1))THEN              07 02330
                  NRKEEP=NRKEEP+1                                       07 02340
                  CALL NUMSTR(J,NUMBER)                                 07 02350
                  CALL SQZSTR(NUMBER,' ')                               07 02360
                  ADDLIN(NRKEEP)='L G '//SYMBOL//'G'//NUMBER            07 02370
                  KEPREC(NRKEEP)=GREC(INDXG2(J,I))                      07 02380
               ELSE                                                     07 02390
                  NRDELE=NRDELE+1                                       07 02400
                  DELREC(NRDELE)=GREC(INDXG2(J,I))                      07 02410
               ENDIF                                                    07 02420
2250        CONTINUE                                                    07 02430
2300     CONTINUE                                                       07 02440
      ENDIF                                                             07 02450
      IF(NLEV .GT. 0)THEN                                               07 02460
         DO 2325 I=1,NLEV                                               07 02470
            IF(.NOT.LKEEP(I))THEN                                       07 02480
               NRDELE=NRDELE+1                                          07 02490
               DELREC(NRDELE)=LREC(I)                                   07 02500
            ENDIF                                                       07 02510
2325     CONTINUE                                                       07 02520
      ENDIF                                                             07 02530
C     Now to sort the two lists                                         07 02540
      IF(NRDELE .GT. 1)THEN                                             07 02550
         DO 2400 I=1,NRDELE-1                                           07 02560
            DO 2350 J=I+1,NRDELE                                        07 02570
               IF(DELREC(I) .GT. DELREC(J))THEN                         07 02580
                  TMPNUM=DELREC(I)                                      07 02590
                  DELREC(I)=DELREC(J)                                   07 02600
                  DELREC(J)=TMPNUM                                      07 02610
               ENDIF                                                    07 02620
2350        CONTINUE                                                    07 02630
2400     CONTINUE                                                       07 02640
      ENDIF                                                             07 02650
      IF(NRKEEP .GT. 1)THEN                                             07 02660
         DO 2500 I=1,NRKEEP-1                                           07 02670
            DO 2450 J=I+1,NRKEEP                                        07 02680
               IF(KEPREC(I) .GT. KEPREC(J))THEN                         07 02690
                  TMPNUM=KEPREC(I)                                      07 02700
                  TMPSTR=ADDLIN(I)                                      07 02710
                  KEPREC(I)=KEPREC(J)                                   07 02720
                  ADDLIN(I)=ADDLIN(J)                                   07 02730
                  KEPREC(J)=TMPNUM                                      07 02740
                  ADDLIN(J)=TMPSTR                                      07 02750
               ENDIF                                                    07 02760
2450        CONTINUE                                                    07 02770
2500     CONTINUE                                                       07 02780
      ENDIF                                                             07 02790
C     Output the ENSDF-like file for plotting                           07 02800
      KEPSTA=1                                                          07 02810
      DELSTA=1                                                          07 02820
      I=1                                                               07 02830
      READ(UNIT=MIRDTM,REC=I,ERR=3900)CARD                              07 02840
3000  CONTINUE                                                          07 02850
      IF(I .GT. NREC)GOTO 4000                                          07 02860
      IF(DELSTA .LE. NRDELE)THEN                                        07 02870
         IF(I .EQ. DELREC(DELSTA))THEN                                  07 02880
            DELSTA=DELSTA+1                                             07 02890
3100        CONTINUE                                                    07 02900
            I=I+1                                                       07 02910
            IF(I .GT. NREC)GOTO 4000                                    07 02920
            READ(UNIT=MIRDTM,REC=I,ERR=3900)CARD                        07 02930
            IF(CARD(6:7) .EQ. ' ')THEN                                  07 02940
               GOTO 3000                                                07 02950
            ELSE                                                        07 02960
               GOTO 3100                                                07 02970
            ENDIF                                                       07 02980
         ENDIF                                                          07 02990
      ENDIF                                                             07 03000
      IF(KEPSTA .LE. NRKEEP)THEN                                        07 03010
         IF(I .EQ. KEPREC(KEPSTA))THEN                                  07 03020
            WRITE(UNIT=MIRDPL,FMT=1)CARD                                07 03030
1           FORMAT(A)                                                   07 03040
            WRITE(UNIT=MIRDPL,FMT=1)CARD(1:5)//ADDLIN(KEPSTA)           07 03050
            KEPSTA=KEPSTA+1                                             07 03060
            I=I+1                                                       07 03070
            IF(I .GT. NREC)GOTO 4000                                    07 03080
            READ(UNIT=MIRDTM,REC=I,ERR=3900)CARD                        07 03090
            GOTO 3000                                                   07 03100
         ENDIF                                                          07 03110
      ENDIF                                                             07 03120
      WRITE(UNIT=MIRDPL,FMT=1)CARD                                      07 03130
      I=I+1                                                             07 03140
      IF(I .GT. NREC)GOTO 4000                                          07 03150
      READ(UNIT=MIRDTM,REC=I,ERR=3900)CARD                              07 03160
      GOTO 3000                                                         07 03170
3900  CONTINUE                                                          07 03180
      WRITE(UNIT=ITRMOU,FMT='(1X,A,I3,I8,A)')                           07 03190
     2  'ERROR in reading direct access file (',MIRDTM,I,')'            07 03200
4000  CONTINUE                                                          07 03210
      IF(CARD .NE. ' ')WRITE(UNIT=MIRDPL,FMT=1)' '                      07 03220
      RETURN                                                            07 03230
      END                                                               07 03240
                                                                       08 00010
      SUBROUTINE INDEXX(N,E,INDX)                                       08 00020
C     Indexes an array E of length N.  That is, outputs the array INDX  08 00030
C       such that E(INDX(J)) is in ascending order for J=1,N.  Inputs   08 00040
C       N and E are not modified.                                       08 00050
C                                                                       08 00060
C     Based on routine on page 233 of Numerical Receipes, The Art of    08 00070
C       Scientific Computing by W.H. Press, et al. (Cambridge Press,    08 00080
C       1986).                                                          08 00090
C                                                                       08 00100
      INTEGER N,INDX(N)                                                 08 00110
      REAL E(N)                                                         08 00120
C                                                                       08 00130
      INTEGER I,L,IR,INDXT,J                                            08 00140
      REAL Q                                                            08 00150
C                                                                       08 00160
      IF(N .LT. 1)RETURN                                                08 00170
      DO 100 I=1,N                                                      08 00180
         INDX(I)=I                                                      08 00190
100   CONTINUE                                                          08 00200
      IF(N .EQ. 1)RETURN                                                08 00210
      L=N/2+1                                                           08 00220
      IR=N                                                              08 00230
200   CONTINUE                                                          08 00240
      IF(L .GT. 1)THEN                                                  08 00250
         L=L-1                                                          08 00260
         INDXT=INDX(L)                                                  08 00270
         Q=E(INDXT)                                                     08 00280
      ELSE                                                              08 00290
         INDXT=INDX(IR)                                                 08 00300
         Q=E(INDXT)                                                     08 00310
         INDX(IR)=INDX(1)                                               08 00320
         IR=IR-1                                                        08 00330
         IF(IR .EQ. 1)THEN                                              08 00340
            INDX(1)=INDXT                                               08 00350
            RETURN                                                      08 00360
         ENDIF                                                          08 00370
      ENDIF                                                             08 00380
      I=L                                                               08 00390
      J=L+L                                                             08 00400
300   CONTINUE                                                          08 00410
      IF(J .LE. IR)THEN                                                 08 00420
         IF(J .LT. IR)THEN                                              08 00430
            IF(E(INDX(J)) .LT. E(INDX(J+1)))J=J+1                       08 00440
         ENDIF                                                          08 00450
         IF(Q .LT. E(INDX(J)))THEN                                      08 00460
            INDX(I)=INDX(J)                                             08 00470
            I=J                                                         08 00480
            J=J+J                                                       08 00490
         ELSE                                                           08 00500
            J=IR+1                                                      08 00510
         ENDIF                                                          08 00520
         GOTO 300                                                       08 00530
      ENDIF                                                             08 00540
      INDX(I)=INDXT                                                     08 00550
      GOTO 200                                                          08 00560
      END                                                               08 00570
                                                                       09 00010
      SUBROUTINE MIRDOS(N,E,I,DOS,KEEP,NTOT,TOTAL,MAX)                  09 00020
C     Dose calculations for MIRD-like output and conversion to MIRD unit09 00030
C       Also keeps track of element with largest dose                   09 00040
C                                                                       09 00050
      INTEGER N,NTOT,MAX                                                09 00060
      REAL E(N),I(N),DOS(N),TOTAL                                       09 00070
      LOGICAL KEEP(N)                                                   09 00080
C                                                                       09 00090
      INTEGER J                                                         09 00100
      REAL TEST                                                         09 00110
C                                                                       09 00120
      TEST=0.                                                           09 00130
      MAX=0                                                             09 00140
      DO 100 J=1,N                                                      09 00150
         E(J)=E(J)/1000.                                                09 00160
         I(J)=I(J)/100.                                                 09 00170
         DOS(J)=E(J)*I(J)                                               09 00180
         IF(DOS(J) .GT. 0.)THEN                                         09 00190
            KEEP(J)=.TRUE.                                              09 00200
            TOTAL=TOTAL+DOS(J)                                          09 00210
            NTOT=NTOT+1                                                 09 00220
            IF(DOS(J) .GT. TEST)THEN                                    09 00230
               MAX=J                                                    09 00240
               TEST=DOS(J)                                              09 00250
            ENDIF                                                       09 00260
         ELSE                                                           09 00270
            KEEP(J)=.FALSE.                                             09 00280
         ENDIF                                                          09 00290
100   CONTINUE                                                          09 00300
      RETURN                                                            09 00310
      END                                                               09 00320
                                                                       10 00010
      SUBROUTINE SELECT(N,SIZE,DOSE,KEEP,TOTAL,LIST,OMIT,NTOT)          10 00020
C     Selects radiations to be kept for MIRD-like output                10 00030
C                                                                       10 00040
      INTEGER N,NTOT                                                    10 00050
      REAL SIZE,DOSE(N),TOTAL,LIST,OMIT                                 10 00060
      LOGICAL KEEP(N)                                                   10 00070
C                                                                       10 00080
      INTEGER I                                                         10 00090
C                                                                       10 00100
      LIST=0.                                                           10 00110
      OMIT=0.                                                           10 00120
      DO 100 I=1,N                                                      10 00130
         IF(KEEP(I))THEN                                                10 00140
            IF(DOSE(I) .GE. SIZE*TOTAL)THEN                             10 00150
               LIST=LIST+DOSE(I)                                        10 00160
            ELSE                                                        10 00170
               KEEP(I)=.FALSE.                                          10 00180
               OMIT=OMIT+DOSE(I)                                        10 00190
               NTOT=NTOT-1                                              10 00200
            ENDIF                                                       10 00210
         ELSE                                                           10 00220
            OMIT=OMIT+DOSE(I)                                           10 00230
         ENDIF                                                          10 00240
100   CONTINUE                                                          10 00250
      RETURN                                                            10 00260
      END                                                               10 00270
                                                                       11 00010
      SUBROUTINE OUTGAM(NG,NDK,INDXG2,GDOS,GKEEP,                       11 00020
     2  CEE,CEDOS,CEKEEP,AMPER)                                         11 00030
C     Outputs tabular data for gammas                                   11 00040
C                                                                       11 00050
      INTEGER NG,NDK                                                    11 00060
      LOGICAL AMPER                                                     11 00070
C                                                                       11 00080
      INTEGER GMA,MAXDCY,NCEMAX                                         11 00090
      PARAMETER (GMA=999,MAXDCY=4,NCEMAX=5)                             11 00100
      INTEGER INDXG2(GMA,MAXDCY)                                        11 00110
      REAL GDOS(GMA)                                                    11 00120
      REAL CEE(GMA,NCEMAX),CEDOS(GMA,NCEMAX)                            11 00130
      LOGICAL GKEEP(GMA),CEKEEP(GMA,NCEMAX)                             11 00140
C                                                                       11 00150
      INTEGER IDECAY(GMA)                                               11 00160
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),ICE(GMA,5),DICE(GMA,5),E2I,11 00170
     2  DE2I                                                            11 00180
      COMMON /GDATA/ EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY             11 00190
C                                                                       11 00200
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      11 00210
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               11 00220
C                                                                       11 00230
      INTEGER LINES                                                     11 00240
      COMMON/LINCNT/LINES                                               11 00250
C                                                                       11 00260
      CHARACTER*(*) FORMG,FORMCB,FORMCE                                 11 00270
c      PARAMETER (FORMG='(2Hg ,A3,12X,1PE8.2,5X,E9.3,5X,E8.2)',         11 00280
c     2           FORMCB='(3Hce-,',                                     11 00290
c     3           FORMCE=',1PE8.2,5X,E9.3,A1,4X,E8.2)')                 11 00300
      PARAMETER (FORMG='(3H$2 ,A3,12X,1PE8.2,5X,E9.3,5X,E8.2)',         11 00310
     2           FORMCB='(3Hce-,',                                      11 00320
     3           FORMCE=',1PE8.2,5X,E9.3,A,4X,E8.2)')                   11 00330
c      CHARACTER*14 CETYPE(NCEMAX)                                      11 00340
      CHARACTER*17 CETYPE(NCEMAX)                                       11 00350
      CHARACTER*3 FLAG(NCEMAX)                                          11 00360
      INTEGER I                                                         11 00370
      DATA (FLAG(I),I=1,NCEMAX)/' ','<a>','<a>','<a>','<a>'/            11 00380
      DATA (CETYPE(I),I=1,NCEMAX)/                                      11 00390
     A  '6HK, $2 ,A3,6X',                                               11 00400
     B  '6HL, $2 ,A3,6X',                                               11 00410
     C  '6HM, $2 ,A3,6X',                                               11 00420
     D  '9HN<+>, $2 ,A3,5X',                                            11 00430
     E  '9HM<+>, $2 ,A3,5X'/                                            11 00440
C                                                                       11 00450
      CHARACTER*3 NUMBER                                                11 00460
      INTEGER J,K                                                       11 00470
C                                                                       11 00480
      DO 200 I=1,NG                                                     11 00490
         IF(INDXG2(I,NDK) .LE. 0)GOTO 200                               11 00500
         CALL NUMSTR(I,NUMBER)                                          11 00510
         CALL SQZSTR(NUMBER,' ')                                        11 00520
         IF(GKEEP(INDXG2(I,NDK)))THEN                                   11 00530
            CALL CHKCON(.TRUE.)                                         11 00540
            WRITE(UNIT=MIRDRP,FMT=FORMG)                                11 00550
     2        NUMBER,IG(INDXG2(I,NDK)),EG(INDXG2(I,NDK)),               11 00560
     3        GDOS(INDXG2(I,NDK))                                       11 00570
         ENDIF                                                          11 00580
         DO 100 J=1,NCEMAX                                              11 00590
            IF(CEKEEP(INDXG2(I,NDK),J))THEN                             11 00600
               CALL CHKCON(.TRUE.)                                      11 00610
               IF(FLAG(J) .NE. ' ')THEN                                 11 00620
                  AMPER=.TRUE.                                          11 00630
                  K=3                                                   11 00640
               ELSE                                                     11 00650
                  K=1                                                   11 00660
               ENDIF                                                    11 00670
               WRITE(UNIT=MIRDRP,                                       11 00680
     2           FMT=FORMCB//CETYPE(J)//FORMCE)                         11 00690
     3           NUMBER,ICE(INDXG2(I,NDK),J),CEE(INDXG2(I,NDK),J),      11 00700
     4           FLAG(J)(1:K),CEDOS(INDXG2(I,NDK),J)                    11 00710
            ENDIF                                                       11 00720
100      CONTINUE                                                       11 00730
200   CONTINUE                                                          11 00740
      RETURN                                                            11 00750
      END                                                               11 00760
                                                                       12 00010
      SUBROUTINE OUTXRY(NDK,XE,XI,XDOS,XKEEP,STAR,Z)                    12 00020
C     Outputs tabular data for X-rays                                   12 00030
C                                                                       12 00040
      INTEGER NDK,Z                                                     12 00050
      LOGICAL STAR                                                      12 00060
C                                                                       12 00070
      INTEGER MAXDCY,NXMAX,NXFORM                                       12 00080
      PARAMETER (MAXDCY=4,NXMAX=4,NXFORM=NXMAX+1)                       12 00090
      REAL XE(MAXDCY,NXMAX),XI(MAXDCY,NXMAX),XDOS(MAXDCY,NXMAX)         12 00100
      LOGICAL XKEEP(MAXDCY,NXMAX)                                       12 00110
C                                                                       12 00120
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      12 00130
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               12 00140
C                                                                       12 00150
      INTEGER LINES                                                     12 00160
      COMMON/LINCNT/LINES                                               12 00170
C                                                                       12 00180
      CHARACTER*(*) FORMEN                                              12 00190
      PARAMETER (FORMEN=',1PE8.2,5X,E9.3,A,4X,E8.2)')                   12 00200
      INTEGER I,K                                                       12 00210
      CHARACTER*3 FLAG(NXFORM)                                          12 00220
      DATA (FLAG(I),I=1,NXFORM)/' ',' ','<*>','<*>','<*>'/              12 00230
      CHARACTER*22 FORMX(NXFORM)                                        12 00240
      DATA (FORMX(I),I=1,NXFORM)/                                       12 00250
     A  '(12HK$0>1< X-ray,8X',                                          12 00260
     B  '(12HK$0>2< X-ray,8X',                                          12 00270
     C  '(9HK$1 X-ray,9X',                                              12 00280
     D  '(7HL X-ray,10X',                                               12 00290
     E  '(7HK X-ray,10X'/                                               12 00300
C                                                                       12 00310
      DO 100 I=1,NXMAX                                                  12 00320
         IF(XKEEP(NDK,I))THEN                                           12 00330
            CALL CHKCON(.TRUE.)                                         12 00340
            IF(Z .GE. 20)THEN                                           12 00350
               IF(FLAG(I) .NE. ' ')THEN                                 12 00360
                  STAR=.TRUE.                                           12 00370
                  K=3                                                   12 00380
               ELSE                                                     12 00390
                  K=1                                                   12 00400
               ENDIF                                                    12 00410
               WRITE(UNIT=MIRDRP,FMT=FORMX(I)//FORMEN)                  12 00420
     2           XI(NDK,I),XE(NDK,I),FLAG(I)(1:K),XDOS(NDK,I)           12 00430
            ELSE                                                        12 00440
               STAR=.TRUE.                                              12 00450
               WRITE(UNIT=MIRDRP,FMT=FORMX(NXFORM)//FORMEN)             12 00460
     2           XI(NDK,I),XE(NDK,I),FLAG(NXFORM),XDOS(NDK,I)           12 00470
            ENDIF                                                       12 00480
         ENDIF                                                          12 00490
100   CONTINUE                                                          12 00500
      RETURN                                                            12 00510
      END                                                               12 00520
                                                                       13 00010
      SUBROUTINE OUTAUG(NDK,AUE,AUI,AUDOS,AUKEEP,STAR)                  13 00020
C     Outputs tabular data for Auger electrons                          13 00030
C                                                                       13 00040
      INTEGER NDK                                                       13 00050
      LOGICAL STAR                                                      13 00060
C                                                                       13 00070
      INTEGER MAXDCY,NAUMAX                                             13 00080
      PARAMETER (MAXDCY=4,NAUMAX=2)                                     13 00090
      REAL AUE(MAXDCY,NAUMAX),AUI(MAXDCY,NAUMAX),AUDOS(MAXDCY,NAUMAX)   13 00100
      LOGICAL AUKEEP(MAXDCY,NAUMAX)                                     13 00110
C                                                                       13 00120
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      13 00130
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               13 00140
C                                                                       13 00150
      INTEGER LINES                                                     13 00160
      COMMON/LINCNT/LINES                                               13 00170
C                                                                       13 00180
      CHARACTER*(*) FORM                                                13 00190
      PARAMETER (FORM='(6HAuger-,A1,10X,1PE8.2,5X,E9.3,3H<*>,4X,E8.2)') 13 00200
      INTEGER I                                                         13 00210
      CHARACTER*1 AUGTYP(NAUMAX)                                        13 00220
      DATA (AUGTYP(I),I=1,NAUMAX)/'K','L'/                              13 00230
C                                                                       13 00240
      DO 100 I=1,NAUMAX                                                 13 00250
         IF(AUKEEP(NDK,I))THEN                                          13 00260
            STAR=.TRUE.                                                 13 00270
            CALL CHKCON(.TRUE.)                                         13 00280
            WRITE(UNIT=MIRDRP,FMT=FORM)                                 13 00290
     2        AUGTYP(I),AUI(NDK,I),AUE(NDK,I),AUDOS(NDK,I)              13 00300
         ENDIF                                                          13 00310
100   CONTINUE                                                          13 00320
C                                                                       13 00330
      RETURN                                                            13 00340
      END                                                               13 00350
                                                                       14 00010
      SUBROUTINE FORFOR(FORMIT,SIZE,STR)                                14 00020
C     Makes up the format for tabular output of Alpha's, Beta+-'s       14 00030
C                                                                       14 00040
      CHARACTER*(*) FORMIT,STR                                          14 00050
      INTEGER SIZE                                                      14 00060
C                                                                       14 00070
      INTEGER LENLAB                                                    14 00080
      PARAMETER (LENLAB=17)                                             14 00090
      CHARACTER*(*) ENDFOR                                              14 00100
      PARAMETER (ENDFOR='1PE8.2,5X,E9.3,A,4X,E8.2)')                    14 00110
C                                                                       14 00120
      INTEGER DIFF,STRSIZ,I,J                                           14 00130
      CHARACTER*3 STRTMP                                                14 00140
C                                                                       14 00150
      INTEGER LENSTR                                                    14 00160
      EXTERNAL LENSTR                                                   14 00170
C                                                                       14 00180
      FORMIT=' '                                                        14 00190
      CALL ADDSTR(FORMIT,1,'H'//STR//',')                               14 00200
      STRSIZ=LEN(STR)                                                   14 00210
      CALL NUMSTR(STRSIZ,STRTMP)                                        14 00220
      CALL SQZSTR(STRTMP,' ')                                           14 00230
      CALL ADDSTR(FORMIT,1,'('//STRTMP(1:LENSTR(STRTMP)))               14 00240
      CALL NUMSTR(SIZE,STRTMP)                                          14 00250
      CALL SQZSTR(STRTMP,' ')                                           14 00260
      CALL ADDSTR(FORMIT,LENSTR(FORMIT)+1,                              14 00270
     2  'A'//STRTMP(1:LENSTR(STRTMP))//',')                             14 00280
      DIFF=LENLAB-SIZE-STRSIZ                                           14 00290
      DO 100 I=1,LEN(STR)                                               14 00300
         IF(STR(I:I) .EQ. '$' .OR. STR(I:I) .EQ. '<'                    14 00310
     2     .OR. STR(I:I) .EQ. '>')DIFF=DIFF+1                           14 00320
100   CONTINUE                                                          14 00330
      CALL NUMSTR(DIFF,STRTMP)                                          14 00340
      CALL SQZSTR(STRTMP,' ')                                           14 00350
      CALL ADDSTR(FORMIT,LENSTR(FORMIT)+1,                              14 00360
     2  STRTMP(1:LENSTR(STRTMP))//'X,')                                 14 00370
      CALL ADDSTR(FORMIT,LENSTR(FORMIT)+1,ENDFOR)                       14 00380
      RETURN                                                            14 00390
      END                                                               14 00400
                                                                       15 00010
      SUBROUTINE CHKISO(NISO,NDK,ISOREC,ISOFED,NRKEEP,NRDELE)           15 00020
C     Removes gammas deexciting isomers and calculates feeding of isomer15 00030
C                                                                       15 00040
      INTEGER NISO,NDK,NRKEEP,NRDELE                                    15 00050
C                                                                       15 00060
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      15 00070
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               15 00080
C                                                                       15 00090
      INTEGER GMA,AM,NLMAX,NCEMAX,MAXDCY,NISMAX                         15 00100
      PARAMETER (GMA=999,AM=99,NLMAX=2000,NCEMAX=5,MAXDCY=4,NISMAX=10)  15 00110
      INTEGER ISOREC(NISMAX,MAXDCY)                                     15 00120
      REAL ISOFED(NISMAX,MAXDCY)                                        15 00130
C                                                                       15 00140
      INTEGER NRKMAX,NRDMAX                                             15 00150
      PARAMETER (NRKMAX=GMA+3*AM,NRDMAX=NRKMAX+NLMAX)                   15 00160
      INTEGER KEPREC(NRKMAX),DELREC(NRDMAX)                             15 00170
      COMMON /KEPDEL/KEPREC,DELREC                                      15 00180
C                                                                       15 00190
C                                                                       15 00200
      INTEGER IDECAY(GMA)                                               15 00210
      REAL EG(GMA),DEG(GMA),IG(GMA),DIG(GMA),                           15 00220
     2  ICE(GMA,NCEMAX),DICE(GMA,NCEMAX),E2I,DE2I                       15 00230
      COMMON /GDATA/ EG,DEG,IG,DIG,ICE,DICE,E2I,DE2I,IDECAY             15 00240
C                                                                       15 00250
      REAL EA(AM),DEA(AM),IA(AM),DIA(AM)                                15 00260
      COMMON /ADATA/ EA,DEA,IA,DIA                                      15 00270
C                                                                       15 00280
      INTEGER NTB,ITYPM(AM)                                             15 00290
      REAL BME(AM),DBME(AM),BMI(AM),DBMI(AM),EVM(AM),DEVM(AM),TBI,DTBI, 15 00300
     2  AVBEX,DAVBX                                                     15 00310
      COMMON /BDATA/ BME,DBME,BMI,DBMI,EVM,DEVM,TBI,DTBI,AVBEX,DAVBX,   15 00320
     2  NTB,ITYPM                                                       15 00330
C                                                                       15 00340
      INTEGER NTP,ITYPP(AM),KLASS(AM)                                   15 00350
      REAL EECA(AM),DEECA(AM),ECAI(AM),DECAI(AM),EBP(AM),DEBP(AM),      15 00360
     2  EVP(AM),DEVP(AM),PINT(AM),DPINT(AM),EC(AM,5),DEC(AM,5),TPI,DTPI,15 00370
     3  AVPEX,DAVPX                                                     15 00380
      COMMON /EDATA/ EECA,DEECA,ECAI,DECAI,KLASS,EBP,DEBP,EVP,DEVP,PINT,15 00390
     2  DPINT,EC,DEC,TPI,DTPI,AVPEX,DAVPX,NTP,ITYPP                     15 00400
C                                                                       15 00410
      INTEGER NA,NB,NE,NK1,NG,NTOP                                      15 00420
      COMMON /COUNTS/ NA,NB,NE,NK1,NG,NTOP                              15 00430
C                                                                       15 00440
      INTEGER ALTO(AM),BLTO(AM),ELTO(AM),GLFROM(GMA),GLTO(GMA)          15 00450
      LOGICAL AKEEP(AM),BKEEP(AM),EKEEP(AM),GKEEP(GMA),                 15 00460
     2  LLFROM(NLMAX),LLTO(NLMAX)                                       15 00470
      INTEGER AREC(AM),BREC(AM),EREC(AM),GREC(GMA),LREC(NLMAX)          15 00480
      REAL LENGY(NLMAX),LDENGY(NLMAX)                                   15 00490
      INTEGER IDREC(MAXDCY)                                             15 00500
      INTEGER NLEV,NREC                                                 15 00510
      INTEGER MIRDAT                                                    15 00520
      CHARACTER*10 MIRPUB                                               15 00530
      COMMON /MRECDS/ALTO,AKEEP,AREC,BLTO,BKEEP,BREC,ELTO,EKEEP,EREC,   15 00540
     2  GLFROM,GLTO,GKEEP,GREC,LENGY,LDENGY,LREC,LLFROM,LLTO,NLEV,NREC, 15 00550
     3  IDREC,MIRDAT,MIRPUB                                             15 00560
C                                                                       15 00570
      INTEGER I,J,K,L,IDK                                               15 00580
      CHARACTER*80 CARD                                                 15 00590
C                                                                       15 00600
C     Check for gammas deexciting isomer and remove                     15 00610
      DO 1000 I=1,NISO                                                  15 00620
         DO 900 IDK=1,NDK                                               15 00630
            IF(ISOREC(I,IDK) .LE. 0)GOTO 900                            15 00640
            J=1                                                         15 00650
200         CONTINUE                                                    15 00660
            IF(J .GT. NG)GOTO 900                                       15 00670
            IF(ISOREC(I,IDK) .EQ. GLFROM(J))THEN                        15 00680
               NRDELE=NRDELE+1                                          15 00690
               DELREC(NRDELE)=GREC(J)                                   15 00700
               IF(J .LT. NG)THEN                                        15 00710
                  DO 500 K=J,NG-1                                       15 00720
                     EG(K)=EG(K+1)                                      15 00730
                     DEG(K)=DEG(K+1)                                    15 00740
                     IG(K)=IG(K+1)                                      15 00750
                     DIG(K)=DIG(K+1)                                    15 00760
                     GLFROM(K)=GLFROM(K+1)                              15 00770
                     GLTO(K)=GLTO(K+1)                                  15 00780
                     GREC(K)=GREC(K+1)                                  15 00790
                     IDECAY(K)=IDECAY(K+1)                              15 00800
                     DO 400 L=1,NCEMAX                                  15 00810
                        ICE(K,L)=ICE(K+1,L)                             15 00820
                        DICE(K,L)=DICE(K+1,L)                           15 00830
400                  CONTINUE                                           15 00840
500               CONTINUE                                              15 00850
               ENDIF                                                    15 00860
               NG=NG-1                                                  15 00870
            ELSE                                                        15 00880
               J=J+1                                                    15 00890
            ENDIF                                                       15 00900
            GOTO 200                                                    15 00910
900      CONTINUE                                                       15 00920
1000  CONTINUE                                                          15 00930
      DO 2000 I=1,NISO                                                  15 00940
         DO 1900 IDK=1,NDK                                              15 00950
            IF(ISOREC(I,IDK) .LE. 0)GOTO 1900                           15 00960
            ISOFED(I,IDK)=0.                                            15 00970
            IF(NA .GT. 0)THEN                                           15 00980
               DO 1100 J=1,NA                                           15 00990
                  IF(ISOREC(I,IDK) .EQ. ALTO(J))                        15 01000
     2              ISOFED(I,IDK)=ISOFED(I,IDK)+IA(J)                   15 01010
1100           CONTINUE                                                 15 01020
            ENDIF                                                       15 01030
            IF(NB .GT. 0)THEN                                           15 01040
               DO 1200 J=1,NB                                           15 01050
                  IF(ISOREC(I,IDK) .EQ. BLTO(J))                        15 01060
     2              ISOFED(I,IDK)=ISOFED(I,IDK)+BMI(J)                  15 01070
1200           CONTINUE                                                 15 01080
            ENDIF                                                       15 01090
            IF(NE .GT. 0)THEN                                           15 01100
               DO 1400 J=1,NE                                           15 01110
                  IF(ISOREC(I,IDK) .EQ. ELTO(J))THEN                    15 01120
                     ISOFED(I,IDK)=ISOFED(I,IDK)+PINT(J)                15 01130
                     DO 1300 K=1,5                                      15 01140
                        ISOFED(I,IDK)=ISOFED(I,IDK)+EC(J,K)             15 01150
1300                 CONTINUE                                           15 01160
                  ENDIF                                                 15 01170
1400           CONTINUE                                                 15 01180
            ENDIF                                                       15 01190
            IF(NG .GT. 0)THEN                                           15 01200
               DO 1600 J=1,NG                                           15 01210
                  IF(ISOREC(I,IDK) .EQ. GLTO(J))THEN                    15 01220
                     ISOFED(I,IDK)=ISOFED(I,IDK)+IG(J)                  15 01230
                     DO 1500 K=1,5                                      15 01240
                        ISOFED(I,IDK)=ISOFED(I,IDK)+ICE(J,K)            15 01250
1500                 CONTINUE                                           15 01260
                  ENDIF                                                 15 01270
1600           CONTINUE                                                 15 01280
            ENDIF                                                       15 01290
            ISOFED(I,IDK)=ISOFED(I,IDK)/100.                            15 01300
1900     CONTINUE                                                       15 01310
2000  CONTINUE                                                          15 01320
      RETURN                                                            15 01330
      END                                                               15 01340
                                                                       16 00010
      SUBROUTINE TRAILR(NDK,MDAU,DAUT12,MBR,NISO,ISDAUG,ISOFED,ISOREC)  16 00020
C     Outputs information on the daughters for MIRD-like tables         16 00030
C                                                                       16 00040
      INTEGER NDK,NISO                                                  16 00050
      CHARACTER*5 MDAU(NDK)                                             16 00060
      CHARACTER*16 DAUT12(NDK)                                          16 00070
      REAL MBR(NDK)                                                     16 00080
C                                                                       16 00090
      INTEGER NISMAX,MAXDCY                                             16 00100
      PARAMETER (NISMAX=10,MAXDCY=4)                                    16 00110
      CHARACTER*5 ISDAUG(NISMAX,MAXDCY)                                 16 00120
      INTEGER ISOREC(NISMAX,MAXDCY)                                     16 00130
      REAL ISOFED(NISMAX,MAXDCY)                                        16 00140
C                                                                       16 00150
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      16 00160
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               16 00170
C                                                                       16 00180
      INTEGER LINES                                                     16 00190
      COMMON/LINCNT/LINES                                               16 00200
C                                                                       16 00210
      INTEGER NALL                                                      16 00220
      PARAMETER (NALL=NISMAX*MAXDCY)                                    16 00230
      INTEGER MASS(NALL),CHARGE(NALL)                                   16 00240
      CHARACTER*2 SYMB(NALL)                                            16 00250
      CHARACTER*2 META(NALL)                                            16 00260
      LOGICAL STABLE(NALL)                                              16 00270
      REAL FEED(NALL)                                                   16 00280
C                                                                       16 00290
      CHARACTER*(*) LINSTA,LINRAD                                       16 00300
      PARAMETER (LINSTA='IS STABLE.',LINRAD='IS RADIOACTIVE.')          16 00310
C                                                                       16 00320
      INTEGER IVLSTR,INDEX,LENSTR,IFIX                                  16 00330
      INTRINSIC INDEX,IFIX                                              16 00340
      EXTERNAL IVLSTR,LENSTR                                            16 00350
      CHARACTER*1 CHAR                                                  16 00360
      INTRINSIC CHAR                                                    16 00370
      CHARACTER*12 ELENAM                                               16 00380
      EXTERNAL ELENAM                                                   16 00390
C                                                                       16 00400
      INTEGER I,J,NMODE,KEEP,METNUM                                     16 00410
      INTEGER ZA1,ZA2                                                   16 00420
      INTEGER TEMPZ,TEMPA                                               16 00430
      REAL TMPFED,AMASS                                                 16 00440
      CHARACTER*2 TMPSYM,TMPMET                                         16 00450
      LOGICAL TMPSTA                                                    16 00460
      CHARACTER*5 ANUM                                                  16 00470
      CHARACTER*12 ELEMNT                                               16 00480
C                                                                       16 00490
      NMODE=0                                                           16 00500
      DO 200 I=1,NDK                                                    16 00510
         NMODE=NMODE+1                                                  16 00520
         CALL AZ(MDAU(I),AMASS,CHARGE(NMODE),SYMB(NMODE))               16 00530
         MASS(NMODE)=IFIX(AMASS)                                        16 00540
         META(NMODE)=' '                                                16 00550
         IF(INDEX(DAUT12(I),'STABLE') .GT. 0)THEN                       16 00560
            STABLE(NMODE)=.TRUE.                                        16 00570
         ELSE                                                           16 00580
            STABLE(NMODE)=.FALSE.                                       16 00590
         ENDIF                                                          16 00600
         FEED(NMODE)=MBR(I)                                             16 00610
         IF(NISO .GT. 0)THEN                                            16 00620
            KEEP=NMODE                                                  16 00630
            METNUM=0                                                    16 00640
            DO 100 J=1,NISO                                             16 00650
               IF(ISOREC(J,I) .GT. 0)THEN                               16 00660
                  NMODE=NMODE+1                                         16 00670
                  METNUM=METNUM+1                                       16 00680
                  CALL AZ(ISDAUG(J,I),AMASS,                            16 00690
     2              CHARGE(NMODE),SYMB(NMODE))                          16 00700
                  MASS(NMODE)=IFIX(AMASS)                               16 00710
                  IF(METNUM .EQ. 2)META(NMODE-1)='M1'                   16 00720
                  IF(METNUM .GT. 1)META(NMODE)='M'//CHAR(METNUM)        16 00730
                  IF(METNUM .EQ. 1)META(NMODE)='M'                      16 00740
                  STABLE(NMODE)=.FALSE.                                 16 00750
                  FEED(NMODE)=ISOFED(J,I)                               16 00760
                  FEED(KEEP)=FEED(KEEP)-ISOFED(J,I)                     16 00770
               ENDIF                                                    16 00780
100         CONTINUE                                                    16 00790
         ENDIF                                                          16 00800
200   CONTINUE                                                          16 00810
      IF(NMODE .GT. 1)THEN                                              16 00820
C        First sort by increasing Z and then A                          16 00830
         DO 400 I=1,NMODE-1                                             16 00840
            ZA1=1000*CHARGE(I)+MASS(I)                                  16 00850
            DO 300 J=I+1,NMODE                                          16 00860
               ZA2=1000*CHARGE(J)+MASS(J)                               16 00870
               IF(ZA1 .GT. ZA2)THEN                                     16 00880
                  TEMPA=MASS(I)                                         16 00890
                  MASS(I)=MASS(J)                                       16 00900
                  MASS(J)=TEMPA                                         16 00910
                  TEMPZ=CHARGE(I)                                       16 00920
                  CHARGE(I)=CHARGE(J)                                   16 00930
                  CHARGE(J)=TEMPZ                                       16 00940
                  TMPFED=FEED(I)                                        16 00950
                  FEED(I)=FEED(J)                                       16 00960
                  FEED(J)=TMPFED                                        16 00970
                  TMPSYM=SYMB(I)                                        16 00980
                  SYMB(I)=SYMB(J)                                       16 00990
                  SYMB(J)=TMPSYM                                        16 01000
                  TMPMET=META(I)                                        16 01010
                  META(I)=META(J)                                       16 01020
                  META(J)=TMPMET                                        16 01030
                  TMPSTA=STABLE(I)                                      16 01040
                  STABLE(I)=STABLE(J)                                   16 01050
                  STABLE(J)=TMPSTA                                      16 01060
                  ZA1=ZA2                                               16 01070
               ENDIF                                                    16 01080
300         CONTINUE                                                    16 01090
400      CONTINUE                                                       16 01100
C        Then for same Z and A sort by decreasing metastable            16 01110
         DO 600 I=1,NMODE-1                                             16 01120
            ZA1=1000*CHARGE(I)+MASS(I)                                  16 01130
            DO 500 J=I+1,NMODE                                          16 01140
               ZA2=1000*CHARGE(J)+MASS(J)                               16 01150
               IF((ZA1 .EQ. ZA2) .AND. (META(I) .LT. META(J)))THEN      16 01160
                  TEMPA=MASS(I)                                         16 01170
                  MASS(I)=MASS(J)                                       16 01180
                  MASS(J)=TEMPA                                         16 01190
                  TEMPZ=CHARGE(I)                                       16 01200
                  CHARGE(I)=CHARGE(J)                                   16 01210
                  CHARGE(J)=TEMPZ                                       16 01220
                  TMPFED=FEED(I)                                        16 01230
                  FEED(I)=FEED(J)                                       16 01240
                  FEED(J)=TMPFED                                        16 01250
                  TMPSYM=SYMB(I)                                        16 01260
                  SYMB(I)=SYMB(J)                                       16 01270
                  SYMB(J)=TMPSYM                                        16 01280
                  TMPMET=META(I)                                        16 01290
                  META(I)=META(J)                                       16 01300
                  META(J)=TMPMET                                        16 01310
                  TMPSTA=STABLE(I)                                      16 01320
                  STABLE(I)=STABLE(J)                                   16 01330
                  STABLE(J)=TMPSTA                                      16 01340
                  ZA1=ZA2                                               16 01350
               ENDIF                                                    16 01360
500         CONTINUE                                                    16 01370
600      CONTINUE                                                       16 01380
      ENDIF                                                             16 01390
      DO 1000 I=1,NMODE                                                 16 01400
         CALL NUMSTR(MASS(I),ANUM)                                      16 01410
         CALL SQZSTR(ANUM,' ')                                          16 01420
         CALL ADDSTR(ANUM,LENSTR(ANUM)+1,META(I))                       16 01430
         CALL SQZSTR(ANUM,' ')                                          16 01440
         ELEMNT=ELENAM(CHARGE(I))                                       16 01450
         IF(FEED(I) .GT. 0.9999)THEN                                    16 01460
            IF(STABLE(I))THEN                                           16 01470
               CALL CHKCON(.FALSE.)                                     16 01480
               WRITE(UNIT=MIRDRP,FMT=2)                                 16 01490
     2           ELEMNT(1:LENSTR(ELEMNT)),ANUM(1:LENSTR(ANUM)),LINSTA   16 01500
2              FORMAT(A,'-',A,' DAUGHTER ',A)                           16 01510
            ELSE                                                        16 01520
               CALL CHKCON(.FALSE.)                                     16 01530
               WRITE(UNIT=MIRDRP,FMT=2)                                 16 01540
     2           ELEMNT(1:LENSTR(ELEMNT)),ANUM(1:LENSTR(ANUM)),LINRAD   16 01550
            ENDIF                                                       16 01560
         ELSE                                                           16 01570
            CALL CHKCON(.FALSE.)                                        16 01580
            IF(FEED(I) .GT. 0.999)THEN                                  16 01590
               WRITE(UNIT=MIRDRP,FMT=4)                                 16 01600
     2           ELEMNT(1:LENSTR(ELEMNT)),ANUM(1:LENSTR(ANUM)),FEED(I)  16 01610
4              FORMAT(A,'-',A,' DAUGHTER, YIELD ',1PE9.2,',')           16 01620
            ELSE                                                        16 01630
               IF(FEED(I) .GT. 0.)WRITE(UNIT=MIRDRP,FMT=3)              16 01640
     2           ELEMNT(1:LENSTR(ELEMNT)),ANUM(1:LENSTR(ANUM)),FEED(I)  16 01650
3              FORMAT(A,'-',A,' DAUGHTER, YIELD ',1PE8.2,',')           16 01660
            ENDIF                                                       16 01670
            IF(FEED(I) .GT. 0.)THEN                                     16 01680
               IF(STABLE(I))THEN                                        16 01690
                  CALL CHKCON(.FALSE.)                                  16 01700
                  WRITE(UNIT=MIRDRP,FMT=1)LINSTA                        16 01710
1                 FORMAT(2X,A)                                          16 01720
               ELSE                                                     16 01730
                  CALL CHKCON(.FALSE.)                                  16 01740
                  WRITE(UNIT=MIRDRP,FMT=1)LINRAD                        16 01750
               ENDIF                                                    16 01760
            ENDIF                                                       16 01770
         ENDIF                                                          16 01780
1000  CONTINUE                                                          16 01790
      RETURN                                                            16 01800
      END                                                               16 01810
                                                                       17 00010
      CHARACTER*(*) FUNCTION ELENAM(Z)                                  17 00020
C     Returns the full element name for atomic number Z                 17 00030
C                                                                       17 00040
C     Based on subroutine ZAID of LISTEF (Version 6.5)                  17 00050
C                                                                       17 00060
      INTEGER Z                                                         17 00070
C                                                                       17 00080
      INTEGER IELM                                                      17 00090
      PARAMETER (IELM=105)                                              17 00100
      CHARACTER*12 ELEMNT(0:IELM)                                       17 00110
C                                                                       17 00120
C     Define element names                                              17 00130
      INTEGER IJK                                                       17 00140
C     Added neutron                                                     17 00150
      DATA (ELEMNT(IJK),IJK=0,0) /   'NEUTRON     '/                    17 00160
      DATA (ELEMNT(IJK),IJK=1,10)/   'HYDROGEN    ',                    17 00170
     1                               'HELIUM      ',                    17 00180
     2                               'LITHIUM     ',                    17 00190
     3                               'BERYLLIUM   ',                    17 00200
     4                               'BORON       ',                    17 00210
     5                               'CARBON      ',                    17 00220
     6                               'NITROGEN    ',                    17 00230
     7                               'OXYGEN      ',                    17 00240
     8                               'FLUORINE    ',                    17 00250
     9                               'NEON        '/                    17 00260
      DATA (ELEMNT(IJK),IJK=11,20)/  'SODIUM      ',                    17 00270
     1                               'MAGNESIUM   ',                    17 00280
     2                               'ALUMINUM    ',                    17 00290
     3                               'SILICON     ',                    17 00300
     4                               'PHOSPHORUS  ',                    17 00310
     5                               'SULFUR      ',                    17 00320
     6                               'CHLORINE    ',                    17 00330
     7                               'ARGON       ',                    17 00340
     8                               'POTASSIUM   ',                    17 00350
     9                               'CALCIUM     '/                    17 00360
      DATA (ELEMNT(IJK),IJK=21,30)/  'SCANDIUM    ',                    17 00370
     1                               'TITANIUM    ',                    17 00380
     2                               'VANADIUM    ',                    17 00390
     3                               'CHROMIUM    ',                    17 00400
     4                               'MANGANESE   ',                    17 00410
     5                               'IRON        ',                    17 00420
     6                               'COBALT      ',                    17 00430
     7                               'NICKEL      ',                    17 00440
     8                               'COPPER      ',                    17 00450
     9                               'ZINC        '/                    17 00460
      DATA (ELEMNT(IJK),IJK=31,40)/  'GALLIUM     ',                    17 00470
     1                               'GERMANIUM   ',                    17 00480
     2                               'ARSENIC     ',                    17 00490
     3                               'SELENIUM    ',                    17 00500
     4                               'BROMINE     ',                    17 00510
     5                               'KRYPTON     ',                    17 00520
     6                               'RUBIDIUM    ',                    17 00530
     7                               'STRONTIUM   ',                    17 00540
     8                               'YTTRIUM     ',                    17 00550
     9                               'ZIRCONIUM   '/                    17 00560
      DATA (ELEMNT(IJK),IJK=41,50)/  'NIOBIUM     ',                    17 00570
     1                               'MOLYBDENUM  ',                    17 00580
     2                               'TECHNETIUM  ',                    17 00590
     3                               'RUTHENIUM   ',                    17 00600
     4                               'RHODIUM     ',                    17 00610
     5                               'PALLADIUM   ',                    17 00620
     6                               'SILVER      ',                    17 00630
     7                               'CADMIUM     ',                    17 00640
     8                               'INDIUM      ',                    17 00650
     9                               'TIN         '/                    17 00660
      DATA (ELEMNT(IJK),IJK=51,60)/  'ANTIMONY    ',                    17 00670
     1                               'TELLURIUM   ',                    17 00680
     2                               'IODINE      ',                    17 00690
     3                               'XENON       ',                    17 00700
     4                               'CESIUM      ',                    17 00710
     5                               'BARIUM      ',                    17 00720
     6                               'LANTHANUM   ',                    17 00730
     7                               'CERIUM      ',                    17 00740
     8                               'PRASEODYMIUM',                    17 00750
     9                               'NEODYMIUM   '/                    17 00760
      DATA (ELEMNT(IJK),IJK=61,70)/  'PROMETHIUM  ',                    17 00770
     1                               'SAMARIUM    ',                    17 00780
     2                               'EUROPIUM    ',                    17 00790
     3                               'GADOLINIUM  ',                    17 00800
     4                               'TERBIUM     ',                    17 00810
     5                               'DYSPROSIUM  ',                    17 00820
     6                               'HOLMIUM     ',                    17 00830
     7                               'ERBIUM      ',                    17 00840
     8                               'THULIUM     ',                    17 00850
     9                               'YTTERBIUM   '/                    17 00860
      DATA (ELEMNT(IJK),IJK=71,80)/  'LUTETIUM    ',                    17 00870
     1                               'HAFNIUM     ',                    17 00880
     2                               'TANTALUM    ',                    17 00890
     3                               'TUNGSTEN    ',                    17 00900
     4                               'RHENIUM     ',                    17 00910
     5                               'OSMIUM      ',                    17 00920
     6                               'IRIDIUM     ',                    17 00930
     7                               'PLATINUM    ',                    17 00940
     8                               'GOLD        ',                    17 00950
     9                               'MERCURY     '/                    17 00960
      DATA (ELEMNT(IJK),IJK=81,90)/  'THALLIUM    ',                    17 00970
     1                               'LEAD        ',                    17 00980
     2                               'BISMUTH     ',                    17 00990
     3                               'POLONIUM    ',                    17 01000
     4                               'ASTATINE    ',                    17 01010
     5                               'RADON       ',                    17 01020
     6                               'FRANCIUM    ',                    17 01030
     7                               'RADIUM      ',                    17 01040
     8                               'ACTINIUM    ',                    17 01050
     9                               'THORIUM     '/                    17 01060
      DATA (ELEMNT(IJK),IJK=91,100)/ 'PROTACTINIUM',                    17 01070
     1                               'URANIUM     ',                    17 01080
     2                               'NEPTUNIUM   ',                    17 01090
     3                               'PLUTONIUM   ',                    17 01100
     4                               'AMERICIUM   ',                    17 01110
     5                               'CURIUM      ',                    17 01120
     6                               'BERKELIUM   ',                    17 01130
     7                               'CALIFORNIUM ',                    17 01140
     8                               'EINSTEINIUM ',                    17 01150
     9                               'FERMIUM     '/                    17 01160
C     Added KURCHATOVIUM and HAHNIUM                                    17 01170
      DATA (ELEMNT(IJK),IJK=101,IELM)/'MENDELEVIUM ',                   17 01180
     1                                'NOBELIUM    ',                   17 01190
     2                                'LAWRENCIUM  ',                   17 01200
     3                                'KURCHATOVIUM',                   17 01210
     4                                'HAHNIUM     '/                   17 01220
C                                                                       17 01230
C                                                                       17 01240
      IF(Z .GE. 0 .AND. Z .LE. 105)THEN                                 17 01250
         ELENAM=ELEMNT(Z)                                               17 01260
      ELSE                                                              17 01270
         ELENAM=' '                                                     17 01280
      ENDIF                                                             17 01290
      RETURN                                                            17 01300
      END                                                               17 01310
                                                                       18 00010
      SUBROUTINE HEADER(MIRDAT,MIRPUB,MTIM,MDTIM,MPARNT,MMETA,NDK,RTYPE,18 00020
     2  BPHERE,CHARGE)                                                  18 00030
C     Outputs headings for MIRD-like output                             18 00040
C                                                                       18 00050
      INTEGER MIRDAT,NDK,CHARGE                                         18 00060
      CHARACTER*(*) MIRPUB,MTIM,MDTIM,MPARNT,MMETA                      18 00070
      REAL RTYPE(NDK)                                                   18 00080
      LOGICAL BPHERE                                                    18 00090
C                                                                       18 00100
      INTEGER MIRDTM,MIRDRP,MIRDPL                                      18 00110
      COMMON /MIRDUN/MIRDTM,MIRDRP,MIRDPL                               18 00120
C                                                                       18 00130
      INTEGER LINES                                                     18 00140
      LOGICAL RADOUT                                                    18 00150
      COMMON/LINCNT/LINES,RADOUT                                        18 00160
C                                                                       18 00170
      CHARACTER*50 BLANKS                                               18 00180
      DATA BLANKS/' '/                                                  18 00190
      CHARACTER*3 MONTHS(12)                                            18 00200
      DATA MONTHS/'JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG',      18 00210
     2  'SEP','OCT','NOV','DEC'/                                        18 00220
      INTEGER NUNITS                                                    18 00230
      PARAMETER (NUNITS=14)                                             18 00240
      CHARACTER*2 UNIN(NUNITS)                                          18 00250
      CHARACTER*20 UNOUT(NUNITS)                                        18 00260
      DATA UNIN/ 'Y',    'D',   'H',    'M',      'S',      'MS',       18 00270
     2  'US',      'NS',     'PS',     'FS',      'AS',     'EV',       18 00280
     3  'KEV','MEV'/                                                    18 00290
      DATA UNOUT/'YEARS','DAYS','HOURS','MINUTES','SECONDS','MILLISEC', 18 00300
     2  'MICROSEC','NANOSEC','PICOSEC','FEMTOSEC','ATTOSEC','eV',       18 00310
     3  'keV','MeV'/                                                    18 00320
      INTEGER NDECAY                                                    18 00330
      PARAMETER (NDECAY=6)                                              18 00340
      REAL TYPEIN(NDECAY)                                               18 00350
c      CHARACTER*6 TYPOUT(NDECAY)                                       18 00360
      CHARACTER*9 TYPOUT(NDECAY)                                        18 00370
      DATA TYPEIN/4.0, 2.0,        2.7,  3.0, 1.0,    1.5     /         18 00380
      DATA TYPOUT/'$0','EC, $1<+>','ECp','IT','$1<->','$1<->n'/         18 00390
C                                                                       18 00400
      INTEGER WIDTH                                                     18 00410
      PARAMETER (WIDTH=54)                                              18 00420
      CHARACTER*(WIDTH) HEDLIN                                          18 00430
      CHARACTER*(WIDTH) SUBHED                                          18 00440
      CHARACTER*(WIDTH) DECLIN                                          18 00450
      CHARACTER*(*) CONLIN                                              18 00460
      PARAMETER (CONLIN='                     (CONTINUED)')             18 00470
      CHARACTER*12 ELEMNT                                               18 00480
      CHARACTER*2 SYMBOL                                                18 00490
      INTEGER MASS                                                      18 00500
      REAL AMASS                                                        18 00510
      CHARACTER*3,SCHARG,SMASS                                          18 00520
      INTEGER DAY,MON,YEAR                                              18 00530
      CHARACTER*2 SDAY,SYEAR                                            18 00540
      CHARACTER*9 DATE                                                  18 00550
      CHARACTER*30 T12                                                  18 00560
C                                                                       18 00570
      INTEGER IFIX,LENSTR,INDEX                                         18 00580
      CHARACTER*12 ELENAM                                               18 00590
      EXTERNAL ELENAM,LENSTR                                            18 00600
      INTRINSIC IFIX,INDEX                                              18 00610
C                                                                       18 00620
      INTEGER I,J                                                       18 00630
C                                                                       18 00640
      LOGICAL RADCON                                                    18 00650
C                                                                       18 00660
      LINES=0                                                           18 00670
C     Set up header line                                                18 00680
      CALL AZ(MPARNT,AMASS,CHARGE,SYMBOL)                               18 00690
      MASS=IFIX(AMASS)                                                  18 00700
      ELEMNT=ELENAM(CHARGE)                                             18 00710
      CALL NUMSTR(CHARGE,SCHARG)                                        18 00720
      CALL SQZSTR(SCHARG,' ')                                           18 00730
      CALL NUMSTR(MASS,SMASS)                                           18 00740
      CALL SQZSTR(SMASS,' ')                                            18 00750
      HEDLIN=SCHARG(1:LENSTR(SCHARG))//'-'//                            18 00760
     2  ELEMNT(1:LENSTR(ELEMNT))//'-'//SMASS(1:LENSTR(SMASS))           18 00770
      IF(MMETA .NE. ' ')CALL ADDSTR(HEDLIN,LENSTR(HEDLIN)+1,MMETA)      18 00780
      I=(WIDTH-LENSTR(HEDLIN))/2                                        18 00790
      CALL ADDSTR(HEDLIN,1,CHAR(12)//BLANKS(1:I))                       18 00800
      LINES=LINES+1                                                     18 00810
      WRITE(UNIT=MIRDRP,FMT=1)HEDLIN                                    18 00820
1     FORMAT(A)                                                         18 00830
      LINES=LINES+1                                                     18 00840
      WRITE(UNIT=MIRDRP,FMT=1)' '                                       18 00850
C     Lifetime and dataset date                                         18 00860
      YEAR=MIRDAT/10000                                                 18 00870
      MON=(MIRDAT-10000*YEAR)/100                                       18 00880
      DAY=MIRDAT-10000*YEAR-100*MON                                     18 00890
      CALL NUMSTR(YEAR,SYEAR)                                           18 00900
      CALL SQZSTR(SYEAR,' ')                                            18 00910
      CALL NUMSTR(DAY,SDAY)                                             18 00920
      CALL SQZSTR(SDAY,' ')                                             18 00930
      DATE=SDAY(1:LENSTR(SDAY))//'-'//MONTHS(MON)//'-'//SYEAR           18 00940
      T12=' '                                                           18 00950
      DO 100 I=NUNITS,1,-1                                              18 00960
         J=INDEX(MTIM,UNIN(I)(1:LENSTR(UNIN(I))))                       18 00970
         IF(J .GT. 0)THEN                                               18 00980
            T12=MTIM(1:J-1)//UNOUT(I)                                   18 00990
            GOTO 150                                                    18 01000
         ENDIF                                                          18 01010
100   CONTINUE                                                          18 01020
      T12='??????????'                                                  18 01030
150   CONTINUE                                                          18 01040
      CALL LBSUP(T12)                                                   18 01050
      SUBHED='HALFLIFE = '//T12                                         18 01060
      CALL ADDSTR(SUBHED,WIDTH-LENSTR(DATE),DATE)                       18 01070
      LINES=LINES+1                                                     18 01080
      WRITE(UNIT=MIRDRP,FMT=1)SUBHED                                    18 01090
C     Decay modes                                                       18 01100
      DECLIN=' '                                                        18 01110
      DO 250 I=1,NDECAY                                                 18 01120
         DO 200 J=1,NDK                                                 18 01130
            IF(TYPEIN(I) .EQ. RTYPE(J))THEN                             18 01140
               IF(DECLIN .EQ. ' ')THEN                                  18 01150
                  IF(IFIX(TYPEIN(I)) .EQ. 2)THEN                        18 01160
                     IF(BPHERE)THEN                                     18 01170
                        DECLIN=TYPOUT(I)                                18 01180
                     ELSE                                               18 01190
                        DECLIN=TYPOUT(I)(1:2)                           18 01200
                     ENDIF                                              18 01210
                  ELSE                                                  18 01220
                     DECLIN=TYPOUT(I)                                   18 01230
                  ENDIF                                                 18 01240
               ELSE                                                     18 01250
                  IF(IFIX(TYPEIN(I)) .EQ. 2)THEN                        18 01260
                     IF(BPHERE)THEN                                     18 01270
                        CALL ADDSTR(DECLIN,LENSTR(DECLIN)+1,', '//      18 01280
     2                    TYPOUT(I))                                    18 01290
                     ELSE                                               18 01300
                        CALL ADDSTR(DECLIN,LENSTR(DECLIN)+1,', '//      18 01310
     2                    TYPOUT(I)(1:2))                               18 01320
                     ENDIF                                              18 01330
                  ELSE                                                  18 01340
                     CALL ADDSTR(DECLIN,LENSTR(DECLIN)+1,', '//         18 01350
     2                 TYPOUT(I))                                       18 01360
                  ENDIF                                                 18 01370
               ENDIF                                                    18 01380
            ENDIF                                                       18 01390
200      CONTINUE                                                       18 01400
250   CONTINUE                                                          18 01410
      CALL ADDSTR(DECLIN,1,'DECAY MODE(S): ')                           18 01420
      LINES=LINES+1                                                     18 01430
      WRITE(UNIT=MIRDRP,FMT=1)DECLIN                                    18 01440
1000  CONTINUE                                                          18 01450
      LINES=LINES+1                                                     18 01460
      WRITE(UNIT=MIRDRP,FMT=1)' '                                       18 01470
C     Column headings                                                   18 01480
      LINES=LINES+1                                                     18 01490
      WRITE(UNIT=MIRDRP,                                                18 01500
     2  FMT='(12X,5X,2X,A,2X,5X,2X,A)')'y(i)','E(i)'                    18 01510
c      LINES=LINES+1                                                    18 01520
c      WRITE(UNIT=MIRDRP,FMT='(12X,5X,6X,A,5X,2X)')'-1'                 18 01530
      LINES=LINES+1                                                     18 01540
c      WRITE(UNIT=MIRDRP,                                               18 01550
c     2  FMT='(1X,A,1X,5X,A,5X,2X,A,2X,5X,A)')                          18 01560
c     3  'RADIATIONS','(Bq-s)  ','(MeV)','y(i)xE(i)'                    18 01570
      WRITE(UNIT=MIRDRP,                                                18 01580
     2  FMT='(1X,A,1X,5X,A,5X,2X,A,2X,5X,A)')                           18 01590
     3  'RADIATIONS','(Bq-s)<-1>','(MeV)','y(i)xE(i)'                   18 01600
      LINES=LINES+1                                                     18 01610
      WRITE(UNIT=MIRDRP,                                                18 01620
     2  FMT='(12(1H-),5X,8(1H-),5X,9(1H-),5X,9(1H-))')                  18 01630
      RETURN                                                            18 01640
      ENTRY HEADCN(RADCON)                                              18 01650
      LINES=0                                                           18 01660
      LINES=LINES+1                                                     18 01670
      WRITE(UNIT=MIRDRP,FMT=1)HEDLIN                                    18 01680
      LINES=LINES+1                                                     18 01690
      WRITE(UNIT=MIRDRP,FMT=1)CONLIN                                    18 01700
      IF(RADCON)THEN                                                    18 01710
         GOTO 1000                                                      18 01720
      ELSE                                                              18 01730
         LINES=LINES+1                                                  18 01740
         WRITE(UNIT=MIRDRP,FMT=1)' '                                    18 01750
      ENDIF                                                             18 01760
      RETURN                                                            18 01770
      END                                                               18 01780
                                                                       19 00010
      SUBROUTINE CHKCON(RADCON)                                         19 00020
C     Checks to see if another page sould be started                    19 00030
C                                                                       19 00040
      LOGICAL RADCON                                                    19 00050
C                                                                       19 00060
      INTEGER MAXLIN                                                    19 00070
      PARAMETER (MAXLIN=58)                                             19 00080
      INTEGER LINES                                                     19 00090
      COMMON/LINCNT/LINES                                               19 00100
C                                                                       19 00110
      IF(LINES .GT. MAXLIN)CALL HEADCN(RADCON)                          19 00120
      LINES=LINES+1                                                     19 00130
      RETURN                                                            19 00140
      END                                                               19 00150
                                                                       20 00010
      SUBROUTINE WRITMP(MIRDTM,NREC,CARD)                               20 00020
C     Writes a record to the temporary direct access file after         20 00030
C       checking for possible duplication                               20 00040
      INTEGER MIRDTM,NREC                                               20 00050
      CHARACTER*(*) CARD                                                20 00060
C                                                                       20 00070
      CHARACTER*80 CARD2                                                20 00080
C                                                                       20 00090
      IF(NREC .GT. 0)THEN                                               20 00100
         READ(UNIT=MIRDTM,REC=NREC)CARD2                                20 00110
         IF(CARD .EQ. CARD2(1:LEN(CARD)))RETURN                         20 00120
      ENDIF                                                             20 00130
      NREC=NREC+1                                                       20 00140
      WRITE(UNIT=MIRDTM,REC=NREC)CARD                                   20 00150
      RETURN                                                            20 00160
      END                                                               20 00170
C^^^^^MIRD                                                              21 00010
